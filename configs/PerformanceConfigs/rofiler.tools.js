
var ToolsModule = (() => {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;
  if (typeof __filename !== 'undefined') _scriptDir ||= __filename;
  return (
function(moduleArg = {}) {

var Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});["_malloc","_free","_Init","_memory","_ParseRaw","_SetWorkerMode","_call_js_result","_call_js_exec","_call_js_checkenv","___indirect_function_table","_ExportFlamegraphCpu","_ExportFlamegraphMem","_ExportFlamegraphComboDiff","_ExportFlamegraphLiveMem","onRuntimeInitialized"].forEach(prop=>{if(!Object.getOwnPropertyDescriptor(Module["ready"],prop)){Object.defineProperty(Module["ready"],prop,{get:()=>abort("You are getting "+prop+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),set:()=>abort("You are setting "+prop+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")})}});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(Module["ENVIRONMENT"]){throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)")}var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_NODE){if(typeof process=="undefined"||!process.release||process.release.name!=="node")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var nodeVersion=process.versions.node;var numericVersion=nodeVersion.split(".").slice(0,3);numericVersion=numericVersion[0]*1e4+numericVersion[1]*100+numericVersion[2].split("-")[0]*1;if(numericVersion<16e4){throw new Error("This emscripten-generated code requires node v16.0.0 (detected v"+nodeVersion+")")}var fs=require("fs");var nodePath=require("path");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+"/"}else{scriptDirectory=__dirname+"/"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:"utf8",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module["thisProgram"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\/g,"/")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_SHELL){if(typeof process=="object"&&typeof require==="function"||typeof window=="object"||typeof importScripts=="function")throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");if(typeof read!="undefined"){read_=read}readBinary=f=>{if(typeof readbuffer=="function"){return new Uint8Array(readbuffer(f))}let data=read(f,"binary");assert(typeof data=="object");return data};readAsync=(f,onload,onerror)=>{setTimeout(()=>onload(readBinary(f)))};if(typeof clearTimeout=="undefined"){globalThis.clearTimeout=id=>{}}if(typeof setTimeout=="undefined"){globalThis.setTimeout=f=>typeof f=="function"?f():abort()}if(typeof scriptArgs!="undefined"){arguments_=scriptArgs}else if(typeof arguments!="undefined"){arguments_=arguments}if(typeof quit=="function"){quit_=(status,toThrow)=>{setTimeout(()=>{if(!(toThrow instanceof ExitStatus)){let toLog=toThrow;if(toThrow&&typeof toThrow=="object"&&toThrow.stack){toLog=[toThrow,toThrow.stack]}err(`exiting due to exception: ${toLog}`)}quit(status)});throw toThrow}}if(typeof print!="undefined"){if(typeof console=="undefined")console={};console.log=print;console.warn=console.error=typeof printErr!="undefined"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.startsWith("blob:")){scriptDirectory=""}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}if(!(typeof window=="object"||typeof importScripts=="function"))throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");{read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}}else{throw new Error("environment detection error")}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;checkIncomingModuleAPI();if(Module["arguments"])arguments_=Module["arguments"];legacyModuleProp("arguments","arguments_");if(Module["thisProgram"])thisProgram=Module["thisProgram"];legacyModuleProp("thisProgram","thisProgram");if(Module["quit"])quit_=Module["quit"];legacyModuleProp("quit","quit_");assert(typeof Module["memoryInitializerPrefixURL"]=="undefined","Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["pthreadMainPrefixURL"]=="undefined","Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["cdInitializerPrefixURL"]=="undefined","Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["filePackagePrefixURL"]=="undefined","Module.filePackagePrefixURL option was removed, use Module.locateFile instead");assert(typeof Module["read"]=="undefined","Module.read option was removed (modify read_ in JS)");assert(typeof Module["readAsync"]=="undefined","Module.readAsync option was removed (modify readAsync in JS)");assert(typeof Module["readBinary"]=="undefined","Module.readBinary option was removed (modify readBinary in JS)");assert(typeof Module["setWindowTitle"]=="undefined","Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)");assert(typeof Module["TOTAL_MEMORY"]=="undefined","Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY");legacyModuleProp("asm","wasmExports");legacyModuleProp("read","read_");legacyModuleProp("readAsync","readAsync");legacyModuleProp("readBinary","readBinary");legacyModuleProp("setWindowTitle","setWindowTitle");assert(!ENVIRONMENT_IS_SHELL,"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.");var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];legacyModuleProp("wasmBinary","wasmBinary");if(typeof WebAssembly!="object"){err("no native wasm support detected")}function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE!="undefined"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,"base64");return new Uint8Array(buf.buffer,buf.byteOffset,buf.length)}var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort("Assertion failed"+(text?": "+text:""))}}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module["HEAP8"]=HEAP8=new Int8Array(b);Module["HEAP16"]=HEAP16=new Int16Array(b);Module["HEAPU8"]=HEAPU8=new Uint8Array(b);Module["HEAPU16"]=HEAPU16=new Uint16Array(b);Module["HEAP32"]=HEAP32=new Int32Array(b);Module["HEAPU32"]=HEAPU32=new Uint32Array(b);Module["HEAPF32"]=HEAPF32=new Float32Array(b);Module["HEAPF64"]=HEAPF64=new Float64Array(b)}assert(!Module["STACK_SIZE"],"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time");assert(typeof Int32Array!="undefined"&&typeof Float64Array!=="undefined"&&Int32Array.prototype.subarray!=undefined&&Int32Array.prototype.set!=undefined,"JS engine does not provide full typed array support");assert(!Module["wasmMemory"],"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally");assert(!Module["INITIAL_MEMORY"],"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically");function writeStackCookie(){var max=_emscripten_stack_get_end();assert((max&3)==0);if(max==0){max+=4}HEAPU32[max>>2]=34821223;HEAPU32[max+4>>2]=2310721022;HEAPU32[0>>2]=1668509029}function checkStackCookie(){if(ABORT)return;var max=_emscripten_stack_get_end();if(max==0){max+=4}var cookie1=HEAPU32[max>>2];var cookie2=HEAPU32[max+4>>2];if(cookie1!=34821223||cookie2!=2310721022){abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`)}if(HEAPU32[0>>2]!=1668509029){abort("Runtime error: The application has corrupted its heap memory area (address zero)!")}}(function(){var h16=new Int16Array(1);var h8=new Int8Array(h16.buffer);h16[0]=25459;if(h8[0]!==115||h8[1]!==99)throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"})();var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){assert(!runtimeInitialized);runtimeInitialized=true;checkStackCookie();if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();callRuntimeCallbacks(__ATINIT__)}function postRun(){checkStackCookie();if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}assert(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");assert(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random()}}function addRunDependency(id){runDependencies++;Module["monitorRunDependencies"]?.(runDependencies);if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!="undefined"){runDependencyWatcher=setInterval(()=>{if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err("still waiting on run dependencies:")}err(`dependency: ${dep}`)}if(shown){err("(end of list)")}},1e4)}}else{err("warning: run dependency added without ID")}}function removeRunDependency(id){runDependencies--;Module["monitorRunDependencies"]?.(runDependencies);if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err("warning: run dependency removed without ID")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module["onAbort"]?.(what);what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith("file://");function createExportWrapper(name){return(...args)=>{assert(runtimeInitialized,`native function \`${name}\` called before runtime initialization`);var f=wasmExports[name];assert(f,`exported native function \`${name}\` not found`);return f(...args)}}var wasmBinaryFile;wasmBinaryFile="data:application/octet-stream;base64,AGFzbQEAAAABtgM1YAF/AX9gAn9/AGACf38Bf2ABfwBgA39/fwF/YAN/f38AYAZ/f39/f38Bf2AEf39/fwBgBX9/f39/AX9gBH9/f38Bf2AFf39/f38AYAh/f39/f39/fwF/YAAAYAZ/f39/f38AYAd/f39/f39/AX9gAAF/YAd/f39/f39/AGAFf35+fn4AYAV/f35/fwBgBX9/f39+AX9gA39+fwF+YAR/f39/AX5gBH9+fn8AYAJ/fgBgCn9/f39/f39/f38Bf2AGf39/f35+AX9gB39/f39/fn4Bf2ACf3wAYAx/f39/f39/f39/f38Bf2AFf39/f3wBf2ALf39/f39/f39/f38Bf2AKf39/f39/f39/fwBgD39/f39/f39/f39/f39/fwBgCH9/f39/f39/AGADf35/AGAIf3x8f39/f38AYAR/f3x/AGACfH8BfGACfn8Bf2AGf3x/f39/AX9gAn5+AXxgBH5+fn4Bf2ADfn5+AX9gAX8BfGACf38BfmACfn4BfWADf39+AGAEf39/fgF+YAN/f38BfWADf39/AXxgBH9/f34AYAl/f39/f39/f38Bf2AEf39+fgACtAUYA2Vudg5jYWxsX2pzX3Jlc3VsdAABA2VudgxjYWxsX2pzX2V4ZWMAAQNlbnYQY2FsbF9qc19jaGVja2VudgABA2VudhlfZW1iaW5kX3JlZ2lzdGVyX2Z1bmN0aW9uABADZW52C19fY3hhX3Rocm93AAUDZW52FV9lbWJpbmRfcmVnaXN0ZXJfdm9pZAABA2VudhVfZW1iaW5kX3JlZ2lzdGVyX2Jvb2wABwNlbnYYX2VtYmluZF9yZWdpc3Rlcl9pbnRlZ2VyAAoDZW52Fl9lbWJpbmRfcmVnaXN0ZXJfZmxvYXQABQNlbnYbX2VtYmluZF9yZWdpc3Rlcl9zdGRfc3RyaW5nAAEDZW52HF9lbWJpbmRfcmVnaXN0ZXJfc3RkX3dzdHJpbmcABQNlbnYWX2VtYmluZF9yZWdpc3Rlcl9lbXZhbAADA2VudhxfZW1iaW5kX3JlZ2lzdGVyX21lbW9yeV92aWV3AAUDZW52FGVtc2NyaXB0ZW5fbWVtY3B5X2pzAAUDZW52FmVtc2NyaXB0ZW5fcmVzaXplX2hlYXAAABZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxCGZkX3dyaXRlAAkDZW52BWFib3J0AAwWd2FzaV9zbmFwc2hvdF9wcmV2aWV3MQdmZF9yZWFkAAkWd2FzaV9zbmFwc2hvdF9wcmV2aWV3MQhmZF9jbG9zZQAAFndhc2lfc25hcHNob3RfcHJldmlldzERZW52aXJvbl9zaXplc19nZXQAAhZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxC2Vudmlyb25fZ2V0AAIDZW52CnN0cmZ0aW1lX2wACANlbnYXX2VtYmluZF9yZWdpc3Rlcl9iaWdpbnQAEBZ3YXNpX3NuYXBzaG90X3ByZXZpZXcxB2ZkX3NlZWsACAP8BfoFDAMADwAHBSIMBAAPDAIAAwwMBAoDAQcMDAcBAQEAAwABAwQCAgAjEiQDAAEFCgcAAQMFBQQEBAABAQcCAAABAQIAAQUHAwQADAQEBAAEBAkCAAAAACUECQgFAAUmCgQnAQkEAgIABBQAAgQAAwIWFigAAAQDAgICAhQEAAAAAAMAAwABBBIXBwQCBQQAAAACBAAAAwMAAwACAAQAAQAAAAICAAADAwIDAgACAQEEAAAAAwMDAAMABAUABAMAAgAEAAAAAQADAAABBwUBAQABAQkFAAAAAQACAAICAAASAAACCwwLAAMHAAMAAwADAgUHAgIFBQUHBQUBAQEAAgIAAAUBAQEMAgIAAgACAgEBAAECAgAAAAADBAkAAgIFAQEFAQABAwAAAwMBAAIAAgICAAEABAIDAQACAAICAQQCFwABEREbKSorEQERFhEREQcsLS4EBAACAAAAAgICAwkALwcIBwUECAcFBAYAAQEOAgIEAQICAAMGAAUYCQcGFQYJBgkGFQYKHDAGMQYHBgcPBAQCAwYADgIGAgUYBgYGBgYKHAYGBgcEAAABCAAAAgMACAcIBBAGEwgTHQQJEBkIBAMIAAMIEAYTCBMdEBkIBAEBCwIABgYGDQYNBgoICwsCBgYGDQYNBgoICw4NAQ4AAQEBAAEBDh4BBQUADgoBAAEBAAACAQ4eAQ4BAAoAAQACGh8gAQQGGh8gBAYEDQ0AAAIBAAMBAAUCAwMAAAMDAQMDAwMECQkJAgQCBAkECAADAgQCBAkECAsICAMLBAsICAAACAALCwgACwsIAAMAAwAAAQEBAQEBAQEAAwADAQADAAMAAwADAAMAAwADAAMAAwADAAMAAwMAAAAABQIFBQEEBAAAAAAFAAAMAAUAAQADAQMFAAAAAAMAAxUVAwAAAgUhAAUFBAICBQUBAgEhAAEFAgADARcBGwUHAgICAgICMgAMBAQEAgUHBwcCBwcFCg0KCgoNDQ0AAAAAAAMMDw8PDwMACBAOMxg0BAcBcAGzA7MDBQcBAYAMgIACBhgEfwFBkMuEAgt/AUEAC38BQQALfwFBAAsHmAQcBm1lbW9yeQIAEV9fd2FzbV9jYWxsX2N0b3JzABgIUGFyc2VSYXcAIQ1TZXRXb3JrZXJNb2RlACIESW5pdAAjGV9faW5kaXJlY3RfZnVuY3Rpb25fdGFibGUBABNFeHBvcnRGbGFtZWdyYXBoQ3B1AEwTRXhwb3J0RmxhbWVncmFwaE1lbQBNGUV4cG9ydEZsYW1lZ3JhcGhDb21ib0RpZmYAThdFeHBvcnRGbGFtZWdyYXBoTGl2ZU1lbQBeDV9fZ2V0VHlwZU5hbWUAXwZmZmx1c2gAlAEGbWFsbG9jAIMBBGZyZWUAhAEVZW1zY3JpcHRlbl9zdGFja19pbml0AIUGGWVtc2NyaXB0ZW5fc3RhY2tfZ2V0X2ZyZWUAhgYZZW1zY3JpcHRlbl9zdGFja19nZXRfYmFzZQCHBhhlbXNjcmlwdGVuX3N0YWNrX2dldF9lbmQAiAYJc3RhY2tTYXZlAIkGDHN0YWNrUmVzdG9yZQCKBgpzdGFja0FsbG9jAIsGHGVtc2NyaXB0ZW5fc3RhY2tfZ2V0X2N1cnJlbnQAiQYVX19jeGFfaXNfcG9pbnRlcl90eXBlAP8FDGR5bkNhbGxfamlqaQCMBg5keW5DYWxsX3ZpaWppaQCNBg5keW5DYWxsX2lpaWlpagCOBg9keW5DYWxsX2lpaWlpamoAjwYQZHluQ2FsbF9paWlpaWlqagCQBgn9BQEAQQELsgMeJRomGxyDBjUZJDU1Njc4OTY6PD1BS0k1Nk9QOTZRU1Q2VVY5NldYWWB3eHprfn82iQGYAZkBmwGcAZ0BnwFra6ABpAGlAacBqAGnAakBqwGqAawBugG8AbsBvQHGAckBxwHKAcgBywHMAc0BmwGcAZ0BnwFra88BpAHRAacB0gGnAakBqwGqAawBugG8AbsBvQH8Af0B9QH+Ae4B7wHxAZYBlwGWAZcB/wGAAoECggKDAoQCpgKXAZMBkgGRATm+Ar8C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AhwgAUHALDYCGCABIAFBGGo2AiggASABNgIgIAFBGGogARAtAkACQCABKAIoIgIgAUEYakYEQEEQIQMgAUEYaiECDAELQRQhAyACRQ0BCyACIAIoAgAgA2ooAgARAwALAkAgACgCCCICBEAgAEEUaiEEA0AgAigCCCEDIAFBBBDFBSIANgIYIAEgAEEEaiIFNgIgIAAgAzYCACABIAU2AhwgASABQRhqNgI8IAFBNGogBCABQRhqIAFBPGoQLiABIAEoAjQoAhQiAzYCNCABQQA2AjwgASgCECIARQ0CIAMgACABQTRqIAFBPGogACgCACgCGBEEAK03A0ggASgCGCIABEAgASAANgIcIAAQhAELIAIoAgAiAg0ACwsCQAJAIAEgASgCECICRgRAQRAhACABIQIMAQtBFCEAIAJFDQELIAIgAigCACAAaigCABEDAAsgAUFAayQADwsQLwALuQIBA38jAEEQayIDJAACQCAAIAFGDQAgASgCECECIAAgACgCECIERgRAIAEgAkYEQCAAIAMgACgCACgCDBEBACAAKAIQIgIgAigCACgCEBEDACAAQQA2AhAgASgCECICIAAgAigCACgCDBEBACABKAIQIgIgAigCACgCEBEDACABQQA2AhAgACAANgIQIAMgASADKAIAKAIMEQEAIAMgAygCACgCEBEDACABIAE2AhAMAgsgACABIAAoAgAoAgwRAQAgACgCECICIAIoAgAoAhARAwAgACABKAIQNgIQIAEgATYCEAwBCyABIAJGBEAgASAAIAEoAgAoAgwRAQAgASgCECICIAIoAgAoAhARAwAgASAAKAIQNgIQIAAgADYCEAwBCyAAIAI2AhAgASAENgIQCyADQRBqJAALnwcCCH8CfSACKAIEIgQgAigCACIJayIIQQJ1IQIgBCAJRwRAIAkhBQNAIAUoAgAgAkEGdCACQQJ2ampBx4yijgZrIAJzIQIgBUEEaiIFIARHDQALCwJAIAACfwJAIAEoAgQiBkUNACABKAIAAn8gBkEBayACcSAGaSIEQQFNDQAaIAIgAiAGSQ0AGiACIAZwCyIHQQJ0aigCACIFRQ0AIAUoAgAiBUUNACAGQQFrIQsgBEEBSyEKA0ACQCACIAUoAgQiBEcEQAJAIApFBEAgBCALcSEEDAELIAQgBkkNACAEIAZwIQQLIAQg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IARBAWoiBCAIRw0BDAILCyAEIAhGDQAgBCAHayIEQX9HDQELIAIgA2siA0Hw////B08NBQJAIANBC08EQCADQQ9yQQFqIgEQxQUhBCAAIAFBgICAgHhyNgIIIAAgBDYCACAAIAM2AgQMAQsgACADOgALIAAhBAsgBCAGIAMQYiADakEAOgAADAELIAIgA2siASAEIANrIgMgASADSRsiA0Hw////B08NBQJAAkAgA0ELTwRAIANBD3JBAWoiARDFBSEEIAUgAUGAgICAeHI2AhggBSAENgIQIAUgAzYCFAwBCyAFIAM6ABsgBUEQaiEEIANFDQELIAQgBiADEGIaCyADIARqQQA6AAAgBUEQaiIBKAIAIAEgASwACyICQQBIIgYbIQMCf0F/IAEoAgQgAiAGGyICRQ0AGiACIANqIQQgAyEBAkADQCABMQAAIgtCP1YNAUIBIAuGQoDMgIAQg1ANASABQQFqIgEgBEcNAAtBfwwBCyABIANrCyEEIAIgA2ohAQJ/A0BBfyABIANGDQEaIAFBAWsiATEAACILQj9YBEBCASALhkKAzICAEINCAFINAQsLIAEgA2sLIQECQAJAAkACQCAEQX9GBEAgAEEAOgALDAELIAIgBEkNASACIARrIgIgASAEa0EBaiIBIAEgAksbIgFB8P///wdPDQICQAJAIAFBC08EQCABQQ9yQQFqIgYQxQUhAiAAIAZBgICAgHhyNgIIIAAgAjYCACAAIAE2AgQgAiEADAELIAAgAToACyABRQ0BCyAAIAMgBGogARBiGgsgACABaiEACyAAQQA6AAAMAgsQMAALECAACyAFLAAbQQBODQAgBSgCEBCEAQsgBSwAK0EASARAIAUoAiAQhAELIAUsADtBAEgEQCAFKAIwEIQBCyAFQUBrJAAPCxAgAAsQIAALEDAACxAgAAsQIAALtwIBB38CQAJAIAAoAggiAiAAKAIMRwRAIAIhAwwBCyAAKAIEIgQgACgCACIFSwRAIAIgBGshAyAEIAQgBWtBAnVBAWpBfm1BAnQiBmohBSACIARHBEAgBSAEIAMQYhogACgCBCECCyAAIAMgBWoiAzYCCCAAIAIgBmo2AgQMAQtBASACIAVrQQF1IAIgBUYbIgNBgICAgARPDQEgA0ECdCIGEMUFIgcgBmohCCAHIANBfHFqIgYhAyACIARH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QQBIBEAgAigCIBCEAQsgAiwAG0EASARAIAIoAhAQhAELIAIsAA9BAEgEQCACKAIEEIQBCyACQQRqIAAoAhgQ3AUgAiACQQRqQbskEM8FIgNBCGoiBCgCADYCGCACIAMpAgA3AxAgA0IANwIAIARBADYCACACIAJBEGpB1SEQ0wUiA0EIaiIEKAIANgIoIAIgAykCADcDICADQgA3AgAgBEEANgIAIAEgAigCICACQSBqIAIsACsiA0EASCIEGyACKAIkIAMgBBsQzQUaIAIsACtBAEgEQCACKAIgEIQBCyACLAAbQQBIBEAgAigCEBCEAQsgAiwAD0EASARAIAIoAgQQhAELIAJBEGpB+iEgAEEcahDYBSACIAJBEGpB1CEQ0wUiA0EIaiIEKAIANgIoIAIgAykCADcDICADQgA3AgAgBEEANgIAIAEgAigCICACQSBqIAIsACsiA0EASCIEGyACKAIkIAMgBBsQzQUaIAIsACtBAEgEQCACKAIgEIQBCyACLAAbQQBIBEAgAigCEBCEAQsgAkEQakHaDyAAQShqENgFIAIgAkEQakHlIBDTBSIDQQhqIgQoAgA2AiggAiADKQIANwMgIANCADcCACAEQQA2AgAgASACKAIgIAJBIGogAiwAKyIDQQBIIgQbIAIoAiQgAyAEGxDNBRogAiwAK0EASARAIAIoAiAQhAELIAIsABtBAEgEQCACKAIQEIQBCyABQdkYENMFGiAAKAI8IgMEQEEAIQQDQCADQRBqIAEQWiAEQQFqIgQgACgCQEkEQCABQdUhENMFGgsgAygCACIDDQALCyABQYAIENMFGiACQTBqJAALihgCKH8CfiMAQZACayIDJAAgA0H7HygAADYANyADQgA3AlQgA0EHOgA/IANBfzYCMCADQgA3AyggA0EAOgAcIANB8t69owc2AhggA0EEOgAjIANBBDoASyADQQA6ADsgA0IANwJMIANBADoARCADQfLevaMHNgJAIANBgICA/AM2AlwgA0H4HygAADYCNAJAAkACQCABKAIAIgwoAsABIghFDQAgASgCECIGIAwoAsQBaiEEIAEoAhwhDQNAAkAgBEEUaiEKIA0gBCgCCCIJakEAIAlBAE4bQesKEGhFBEAgBCgCBEECRg0BCyAKIAQoAhBqIQQgBUEBaiIFIAhHDQEMAgsLIAQoAgAi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BCACNgIAIAcgBDYCACACKAIAIgRFDQIgBCgCBCEEAkAgBSAFQQFrIgdxRQRAIAQgB3EhBAwBCyAEIAVJDQAgBCAFcCEECyABKAIAIARBAnRqIQQMAQsgAiAEKAIANgIACyAEIAI2AgALIAEgASgCDEEBajYCDEEBCzoABCAAIAI2AgALfAECfyAAKAIIIgEEQANAIAEoAgAhAiABQcQAahBdIAEsAENBAEgEQCABKAI4EIQBCyABLAA3QQBIBEAgASgCLBCEAQsgASwAG0EASARAIAEoAhAQhAELIAEQhAEgAiIBDQALCyAAKAIAIQEgAEEANgIAIAEEQCABEIQBCwvWCQEDfyMAQTBrIgAkACAAQSBqIgJCADcCACAAQQA2AiggACABNgIQIAIgAUHQAWoiAjYCACAAQgA3AhggAEEAOwEUIAAgAiABKALIAWo2AiwjAEEwayIBJAAgAEEEaiIFQZAYEMUFIgI2AgAgBUKHmICAgIKDgIB/NwIEIAJB4NMCQYcYEGFBADoAhxggAUEEaiAAQRBqIgQoAgApAyAQ3QUgASABQQRqQZ0kEM8FIgJBCGoiAygCADYCGCABIAIpAgA3AxAgAkIANwIAIANBADYCACABIAFBEGpB9igQ0wUiAkEIaiIDKAIANgIoIAEgAikCADcDICACQgA3AgAgA0EANgIAIAUgASgCICABQSBqIAEsACsiAkEASCIDGyABKAIkIAIgAxsQzQUaIAEsACtBAEgEQCABKAIgEIQBCyABLAAbQQBIBEAgASgCEBCEAQsgASwAD0EASARAIAEoAgQQhAELIAFBBGogBEEAEFsgASABQQRqQYEkEM8FIgJBCGoiAygCADYCGCABIAIpAgA3AxAgAkIANwIAIANBADYCACABIAFBEGpB9igQ0wUiAkEIaiIDKAIANgIoIAEgAikCADcDICACQgA3AgAgA0EANgIAIAUgASgCICABQSBqIAEsACsiAkEASCIDGyABKAIkIAIgAxsQzQUaIAEsACtBAEgEQCABKAIgEIQBCyABLAAbQQBIBEAgASgCEBCEAQsgASwAD0EASARAIAEoAgQQhAELIAFBBGogBEEBEFsgASABQQRqQc0jEM8FIgJBCGoiAygCADYCGCABIAIpAgA3AxAgAkIANwIAIANBADYCACABIAFBEGpB9igQ0wUiAkEIaiIDKAIANgIoIAEgAikCADcDICACQgA3AgAgA0EANgIAIAUgASgCICABQSBqIAEsACsiAkEASCIDGyABKAIkIAIgAxsQzQUaIAEsACtBAEgEQCABKAIgEIQBCyABLAAbQQBIBEAgASgCEBCEAQsgASwAD0EASARAIAEoAgQQhAELIAFBBGogBEECEFsgASABQQRqQekjEM8FIgJBCGoiAygCADYCGCABIAIpAgA3AxAgAkIANwIAIANBADYCACABIAFBEGpB9igQ0wUiAkEIaiIDKAIANgIoIAEgAikCADcDICACQgA3AgAgA0EANgIAIAUgASgCICABQSBqIAEsACsiAkEASCIDGyABKAIkIAIgAxsQzQUaIAEsACtBAEgEQCABKAIgEIQBCyABLAAbQQBIBEAgASgCEBCEAQsgASwAD0EASARAIAEoAgQQhAELIAFBBGogBEEDEFsgASABQQRqQbUjEM8FIgRBCGoiAigCADYCGCABIAQpAgA3AxAgBEIANwIAIAJBADYCACABIAFBEGpB9igQ0wUiBEEIaiICKAIANgIoIAEgBCkCADcDICAEQgA3AgAgAkEANgIAIAUgASgCICABQSBqIAEsACsiBEEASCICGyABKAIkIAQgAhsQzQUaIAEsACtBAEgEQCABKAIgEIQBCyABLAAbQQBIBEAgASgCEBCEAQsgASwAD0EASARAIAEoAgQQhAELIAVB8OsCENMFGiABQTBqJAAgAEEEahAaGiAALAAPQQBIBEAgACgCBBCEAQsgAEEwaiQAQQALJQECfyAAKAIEIgAQaUEBaiIBEIMBIgIEfyACIAAgARBhBUEACwuHBABB5IQEQfEOEAVB8IQEQccMQQFBABAGQfyEBEHhC0EBQYB/Qf8AEAdBlIUEQdoLQQFBgH9B/wAQB0GIhQRB2AtBAUEAQf8BEAdBoIUEQYsKQQJBgIB+Qf//ARAHQayFBEGCCkECQQBB//8DEAdBuIUEQcMKQQRBgICAgHhB/////wcQB0HEhQRBugpBBEEAQX8QB0HQhQRBmg1BBEGAgICAeEH/////BxAHQdyFBEGRDUEEQQBBfxAHQeiFBEHjCkKAgICAgICAgIB/Qv///////////wAQkQZB9IUEQeIKQgBCfxCRBkGAhgRB2ApBBBAIQYyGBEHbDkEIEAhBpCxBuQ0QCUGY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QQRqIQAgAkEEayICQQNLDQALCyACRQ0BCwNAIAAtAAAiAyABLQAAIgRGBEAgAUEBaiEBIABBAWohACACQQFrIgINAQwCCwsgAyAEaw8LQQALKQEBfyMAQRBrIgQkACAEIAM2AgwgACABIAIgAxB5IQMgBEEQaiQAIAMLTQECfyABLQAAIQICQCAALQAAIgNFDQAgAiADRw0AA0AgAS0AASECIAAtAAEiA0UNASABQQFqIQEgAEEBaiEAIAIgA0YNAAsLIAMgAmsLegEDfwJAAkAgACIBQQNxRQ0AIAEtAABFBEBBAA8LA0AgAUEBaiIBQQNxRQ0BIAEtAAANAAsMAQsDQCABIgJBBGohASACKAIAIgNBf3MgA0GBgoQIa3FBgIGChHhxRQ0ACwNAIAIiAUEBaiECIAEtAAANAAsLIAEgAGsLBABBAQsEAEEAC1kBAX8gACAAKAJIIgFBAWsgAXI2AkggACgCACIBQQhxBEAgACABQSByNgIAQX8PCyAAQgA3AgQgACAAKAIsIgE2AhwgACABNgIUIAAgASAAKAIwajYCEEEAC34CAX8BfiAAvSIDQjSIp0H/D3EiAkH/D0cEfCACRQRAIAEgAEQAAAAAAAAAAGEEf0EABSAARAAAAAAAAPBDoiABEG0hACABKAIAQUBqCzYCACAADwsgASACQf4HazYCACADQv////////+HgH+DQoCAgICAgIDwP4S/BSAACwvCAQEDfwJAIAEgAigCECIDBH8gAwUgAhBsDQEgAigCEAsgAigCFCIEa0sEQCACIAAgASACKAIkEQQADwsCQAJAIAIoAlBBAEgNACABRQ0AIAEhAwNAIAAgA2oiBUEBay0AAEEKRwRAIANBAWsiAw0BDAILCyACIAAgAyACKAIkEQQAIgQgA0kNAiABIANrIQEgAigCFCEEDAELIAAhBUEAIQMLIAQgBSABEGEaIAIgAigCFCABajYCFCABIANqIQQLIAQLRAEBfyABIAJsIQQCQCADKAJMQQBIBEAgACAEIAMQbiEADAELIAAgBCADEG4hAAsgACAERgRAIAJBACABGw8LIAAgAW4L5hICEn8BfiMAQdAAayIGJAAgBiABNgJMIAZBN2ohFiAGQThqIRACQAJAAkACQANAQQAhBQNAIAEhCyAFIAxB/////wdzSg0CIAUgDGohDAJAAkAC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IAIgAigCACIBQQRqNgIAIAAgATIBADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATMBADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATAAADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATEAADcDAA8LIAIgAigCAEEHakF4cSIBQQhqNgIAIAAgASkDADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATUCADcDAA8LIAIgAigCAEEHakF4cSIBQQhqNgIAIAAgASkDADcDAA8LIAIgAigCAEEHakF4cSIBQQhqNgIAIAAgASkDADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATQCADcDAA8LIAIgAigCACIBQQRqNgIAIAAgATUCADcDAA8LIAIgAigCAEEHakF4cSIBQQhqNgIAIAAgASsDADkDAA8LIAAgAhB4CwuDAQIDfwF+AkAgAEKAgICAEFQEQCAAIQUMAQsDQCABQQFrIgEgACAAQgqAIgVCCn59p0EwcjoAACAAQv////+fAVYhAiAFIQAgAg0ACwsgBaciAgRAA0AgAUEBayIBIAIgAkEKbiIDQQpsa0EwcjoAACACQQlLIQQgAyECIAQNAAsLIAELawEBfyMAQYACayIFJAACQCACIANMDQAgBEGAwARxDQAgBSABIAIgA2siA0GAAiADQYACSSICGxBjGiACRQRAA0AgACAFQYACEHEgA0GAAmsiA0H/AUsNAAsLIAAgBSADEHELIAVBgAJqJAALwQIBBH8jAEHQAWsiAyQAIAMgAjYCzAEgA0GgAWpBAEEoEGMaIAMgAygCzAE2AsgBAkBBACABIANByAFqIANB0ABqIANBoAFqEHBBAEgEQEF/IQEMAQsgACgCTEEASCEFIAAgACgCACIGQV9xNgIAAn8CQAJAIAAoAjBFBEAgAEHQADYCMCAAQQA2AhwgAEIANwMQIAAoAiwhBCAAIAM2AiwMAQsgACgCEA0BC0F/IAAQbA0BGgsgACABIANByAFqIANB0ABqIANBoAFqEHALIQIgBkEgcSEBIAQEQCAAQQBBACAAKAIkEQQAGiAAQQA2AjAgACAENgIsIABBADYCHCAAKAIUIQQgAEIANwMQIAJBfyAEGyECCyAAIAAoAgAiBCABcjYCAEF/IAIgBEEgcRshASAFDQALIANB0AFqJAAgAQulGAMSfwF8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AkKAgICAgIDA//8AVCACQoCAgICAgMD//wBRG0UEQCABQgSGIABCPIiEQv////////8Dg0KAgICAgICA/P8AhCEDDAELQoCAgICAgID4/wAhAyACQv///////7//wwBWDQBCACEDIAJCMIinIgVBkfcASQ0AIARBEGogACABQv///////z+DQoCAgICAgMAAhCICIAVBgfcAaxCGASAEIAAgAkGB+AAgBWsQhwEgBCkDCEIEhiAEKQMAIgJCPIiEIQMgBCkDECAEKQMYhEIAUq0gAkL//////////w+DhCICQoGAgICAgICACFoEQCADQgF8IQMMAQsgAkKAgICAgICAgAhSDQAgA0IBgyADfCEDCyAEQSBqJAAgAyABQoCAgICAgICAgH+DhL8LBQBBzAwLugwBB38jAEEQayIEJAAgBCAANgIMAkAgAEHTAU0EQEHQmQNBkJsDIARBDGoQiwEoAgAhAAwBCyAAQXxPBEBBqAkQjAEACyAEIAAgAEHSAW4iBkHSAWwiA2s2AghBkJsDQdCcAyAEQQhqEIsBQZCbA2tBAnUhBQNAIAVBAnRBkJsDaigCACADaiEAQQUhAgJAAkADQCACIgNBL0YNASAAIANBAnRB0JkDaigCACIBbiIHIAFJDQQgA0EBaiECIAAgASAHbEcNAAsgA0EvSQ0BC0HTASEDA0AgACADbiIBIANJDQMgACABIANsRg0BIAAgA0EKaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EMaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EQaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0ESaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EWaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EcaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EeaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EkaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EoaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EqaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0EuaiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0E0aiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0E6aiIBbiICIAFJDQMgACABIAJsRg0BIAAgA0E8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AgggBUEMaiAFQQhqEKEBIQQgACgCGCABIAQoAgAiBBDQASAAIARBAnQiBiAAKAIYajYCGCADIARqIQMgASAGaiEBDAILAAsLIAVBEGokACADC70BAQJ/IwBBEGsiASQAIAAgACgCAEEMaygCAGooAhgEQCABQQhqIgIgADYCBCACQQA6AAAgACAAKAIAQQxrKAIAahCtAQRAIAAgACgCAEEMaygCAGooAkgEQCAAIAAoAgBBDGsoAgBqKAJIENMBCyACQQE6AAALAkAgAS0ACEUNACAAIAAoAgBBDGsoAgBqKAIYELUBQX9HDQAgACAAKAIAQQxrKAIAakEBELQBCyABQQhqEL8BCyABQRBqJAALCwAgAEHMvAQQhgMLEAAgABChAiABEKECc0EBcwsKACAAKAIAENkBCxMAIAAgASACIAAoAgAoAgwRBAALDQAgACgCABDaARogAAsnAQF/IAAoAgwiASAAKAIQRgRAIAAgACgCACgCJBEAAA8LIAEoAgALMQEBfyAAKAIMIgEgACgCEEYEQCAAIAAoAgAoAigRAAAPCyAAIAFBBGo2AgwgASgCAAtXAQJ/AkAgACgCACICRQ0AAn8gAigCGCIDIAIoAhxGBEAgAiABIAIoAgAoAjQRAgAMAQsgAiADQQRqNgIYIAMgATYCACABC0F/ELgBRQ0AIABBADYCAAsLGwEBfyMAQRBrIgEkACAAEN0BIAFBEGokACAACxAAIABCADcCACAAQQA2AggLBwAgACgCCAsHACAAKAIMC1cBAX8jAEEQayICJAAgABDqAQRAIAAgACgCACAAEPMBEI8CCyAAIAEoAgg2AgggACABKQIANwIAIAFBABCQAiACQQA6AA8gASACQQ9qEJECIAJBEGokAAsXACAAIAM2AhAgACACNgIMIAAgATYCCAsXACAAIAI2AhwgACABNgIUIAAgATYCGAsPACAAIAAoAhggAWo2AhgLDAAgACABQQRqEMYECxIAIAAQ6gEEQCAAKAIADwsgAAscAQF/IAAoAgAhAiAAIAEoAgA2AgAgASACNgIAC4cBAQJ/IwBBEGsiAiQAAkAgASgCMCIDQRBxBEAgASgCGCABKAIsSwRAIAEgASgCGDYCLAsgACABKAIUIAEoAiwgAkEPahDoARoMAQsgA0EIcQRAIAAgASgCCCABKAIQIAJBDmoQ6AEaDAELIwBBEGsiASQAIAAQ3QEgAUEQaiQACyACQRBqJAALHQAjAEEQayIDJAAgACABIAIQ6QEgA0EQaiQAIAALsgEBA38CQCABIAIQlAIhBCMAQRBrIgMkACAEQe////8HTQRAAkAgBBCWAgRAIAAgBBCQAiAAIQUMAQsgA0EIaiAAIAQQlwJBAWoQmAIgAygCDBogACADKAIIIgUQmQIgACADKAIMEJoCIAAgBBCbAgsDQCABIAJHBEAgBSABEJECIAVBAWohBSABQQFqIQEMAQsLIANBADoAByAFIANBB2oQkQIgA0EQaiQADAELEJwCAAsLCgAgAC0AC0EHdgsVACAAEOoBBEAgACgCBA8LIAAQ9AELGwEBf0EKIQEgABDqAQR/IAAQ8wFBAWsFIAELCwkAIAAgARDUBQtlACAAKAIYIAAoAixLBEAgACAAKAIYNgIsCwJAIAAtADBBCHFFDQAgACgCECAAKAIsSQRAIAAgACgCCCAAKAIMIAAoAiwQ4QELIAAoAgwgACgCEE8NACAAKAIMLAAAEKYBDwtBfwuYAQAgACgCGCAAKAIsSwRAIAAgACgCGDYCLAsCQCAAKAIIIAAoAgxPDQAgAUF/ELgBBEAgACAAKAIIIAAoAgxBAWsgACgCLBDhASABEPABDwsgAC0AMEEQcUUEQCABwCAAKAIMQQFrLAAAELgBRQ0BCyAAIAAoAgggACgCDEEBayAAKAIsEOEBIAAoAgwgAcA6AAAgAQ8LQX8LDgBBACAAIABBfxC4ARsLiAIBCX8jAEEQayIDJAACfyABQX8QuAFFBEAgACgCDCEEIAAoAgghBSAAKAIYIAAoAhxGBEBBfyAALQAwQRBxRQ0CGiAAKAIYIQYgACgCFCEHIAAoAiwhCCAAKAIUIQkgAEEgaiICQQAQ0gUgAiACEOwBEO0BIAAgAhDlASIKIAIQ6wEgCmoQ4gEgACAGIAdrEOMBIAAgACgCFCAIIAlrajYCLAsgAyAAKAIYQQFqNgIMIAAgA0EMaiAAQSxqEPIBKAIANgIsIAAtADBBCHEEQCAAIABBIGoQ5QEiAiACIAQgBWtqIAAoAiwQ4QELIAAgAcAQuQEMAQsgARDwAQshACADQRBqJAAgAAskAQJ/IwBBEGsiAiQAIAAgARCOASEDIAJBEGokACABIAAgAxsLDgAgACgCCEH/////B3ELCwAgAC0AC0H/AHELlwICAX8DfiABKAIYIAEoAixLBEAgASABKAIYNgIsC0J/IQgCQCAEQRhxIgVFDQAgA0EBRiAFQRhGcQ0AIAEoAiwiBQRAIAUgAUEgahDlAWusIQYLAkACQAJAIAMOAwIAAQMLIARBCHEEQCABKAIMIAEoAghrrCEHDAILIAEoAhggASgCFGusIQcMAQsgBiEHCyACIAd8IgJCAFMNACACIAZVDQAgBEEIcSEDAkAgAlANACADBEAgASgCDEUNAgsgBEEQcUUNACABKAIYRQ0BCyADBEAgASABKAIIIAEoAgggAqdqIAEoAiwQ4QELIARBEHEEQCABIAEoAhQgASgCHBDiASABIAKnEOMBCyACIQgLIAAgCBCeAQsLACAAQdy8BBCGAwsPACAAIAAoAgAoAhwRAAALJAECfyMAQRBrIgIkACABIAAQjgEhAyACQRBqJAAgASAAIAMbCx0AIAAgASACIAMgBCAFIAYgByAAKAIAKAIQEQsACwUAEBAACx0AIAAgASACIAMgBCAFIAYgByAAKAIAKAIMEQsACxkAIABB8J8DNgIAIABBIGoQygUaIAAQmAELCgAgABD8ARCEAQsaACAAIAEgAikDCEEAIAMgASgCACgCEBESAAtHAQF/IABB/KYDKAIAIgE2AgAgACABQQxrKAIAakGcpwMoAgA2AgAgAEGgpwMoAgA2AgggAEEMahD8ARogAEFAaxCmAhogAAsKACAAEP8BEIQBCwoAIABBCGsQ/wELCgAgAEEIaxCAAgsTACAAIAAoAgBBDGsoAgBqEP8BCxMAIAAgACgCAEEMaygCAGoQgAILDQAgACgCACABKAIASAsxAQF/IwBBEGsiAyQAIAMgATYCDCADIAI2AgggACADQQxqIANBCGoQiwIgA0EQaiQAC0IBAX8jAEEQayIEJAAgBCACNgIMIAMgASACIAFrIgIQjAIgBCACIANqNgIIIAAgBEEMaiAEQQhqEIoCIARBEGokAAsJACAAIAEQiQILCgAgACABIABragsLACAAIAEgAhCLAgsWACAAIAEoAgA2AgAgACACKAIANgIECxAAIAIEQCAAIAEgAhBiGgsLRQEBfyMAQRBrIgQkACAEIAI2AgwgAyABIAIgAWsiAkECdRCOAiAEIAIgA2o2AgggACAEQQxqIARBCGoQigIgBEEQaiQACxMAIAIEQCAAIAEgAkECdBBiGgsLCQAgAUEBEJICCyUAIAAgAC0AC0GAAXEgAUH/AHFyOgALIAAgAC0AC0H/AHE6AAsLDAAgACABLQAAOgAACxUAIAEQkwIEQCAAEIQBDwsgABCEAQsHACAAQQhLCwkAIAAgARCVAgsHACABIABrCwcAIABBC0kLJAAgAEELTwR/IABBEGpBcHEiACAAQQFrIgAgAEELRhsFQQoLCxkAIAEgAhCdAiEBIAAgAjYCBCAAIAE2AgALCQAgACABNgIACy4AIAAgACgCCEGAgICAeHEgAUH/////B3FyNgIIIAAgACgCCEGAgICAeHI2AggLCQAgACABNgIECwkAQawNEIwBAAsJACABQQEQngILgwEBAn8gARCTAgRAQQQgASABQQRNGyECQQEgACAAQQFNGyEAA0ACQCACIgEgAGpBAWtBACABa3EiASAAIAAgAUkbIQFBACEDAkAgAkEDcQ0AIAEgAnANACACIAEQgQEhAwsgAw0AQYjLBCgCACIBRQ0AIAERDAAMAQsLIAMPCyAAEMUFCywBAX8gACgCACIBBEAgARC2AUF/ELgBRQRAIAAoAgBFDwsgAEEANgIAC0EBCxEAIAAgASAAKAIAKAIcEQIACywBAX8gACgCACIBBEAgARDZAUF/ELgBRQRAIAAoAgBFDwsgAEEANgIAC0EBCxEAIAAgASAAKAIAKAIsEQIAC6sBAQR/IwBBEGsiBSQAIAEQaSECIwBBEGsiAyQAAkAgAkHv////B00EQAJAIAIQlgIEQCAAIAIQkAIgACEEDAELIANBCGogACACEJcCQQFqEJgCIAMoAgwaIAAgAygCCCIEEJkCIAAgAygCDBCaAiAAIAIQmwILIAQgASACEKIBIANBADoAByACIARqIANBB2oQkQIgA0EQaiQADAELEJwCAAsgBUEQaiQAIAALDAAgACABQRxqEMYECyQAIAAgACgCGEUgAXIiATYCECAAKAIUIAFxBEBB5gsQjAEACwtvAQJ/IABBjKkDNgIAIAAoAighAQNAIAEEQEEAIAAgAUEBayIBQQJ0IgIgACgCJGooAgAgACgCICACaigCABEFAAwBCwsgAEEcahDHBCAAKAIgEIQBIAAoAiQQhAEgACgCMBCEASAAKAI8EIQBIAALPwAgAEEA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AkEATg0BIAAoAiwhAiAAKAIEIQELIABCfzcDcCAAIAE2AmggACAFIAIgAWusfDcDeEF/DwsgBUIBfCEFIAAoAgQhASAAKAIIIQMCQCAAKQNwIgRQDQAgBCAFfSIEIAMgAWusWQ0AIAEgBKdqIQMLIAAgAzYCaCAAIAUgACgCLCIDIAFrrHw3A3ggASADTQRAIAFBAWsgAjoAAAsgAgt/AgJ/AX4jAEEQayIDJAAgAAJ+IAFFBEBCAAwBCyADIAEgAUEfdSICcyACayICrUIAIAJnIgJB0QBqEIYBIAMpAwhCgICAgICAwACFQZ6AASACa61CMIZ8IAFBgICAgHhxrUIghoQhBCADKQMACzcDACAAIAQ3AwggA0EQaiQAC8kKAgV/D34jAEHgAGsiBSQAIARC////////P4MhDCACIASFQoCAgICAgICAgH+DIQogAkL///////8/gyINQiCIIQ8gBEIwiKdB//8BcSEGAkACQCACQjCIp0H//wFxIghB//8Ba0GCgH5PBEAgBkH//wFrQYGAfksNAQsgAVAgAkL///////////8AgyILQoCAgICAgMD//wBUIAtCgICAgICAwP//AFEbRQRAIAJCgICAgICAIIQhCgwCCyADUCAEQv///////////wCDIgJCgICAgICAwP//AFQgAkKAgICAgIDA//8AURtFBEAgBEKAgICAgIAghCEKIAMhAQwCCyABIAtCgICAgICAwP//AIWEUARAIAIgA4RQBEBCgICAgICA4P//ACEKQgAhAQwDCyAKQoCAgICAgMD//wCEIQpCACEBDAILIAMgAkKAgICAgIDA//8AhYRQBEAgASALhCECQgAhASACUARAQoCAgICAgOD//wAhCgwDCyAKQoCAgICAgMD//wCEIQoMAgsgASALhFAEQEIAIQEMAgsgAiADhFAEQEIAIQEMAgsgC0L///////8/WARAIAVB0ABqIAEgDSABIA0gDVAiBxt5IAdBBnStfKciB0EPaxCGAUEQIAdrIQcgBSkDWCINQiCIIQ8gBSkDUCEBCyACQv///////z9WDQAgBUFAayADIAwgAyAMIAxQIgkbeSAJQQZ0rXynIglBD2sQhgEgByAJa0EQaiEHIAUpA0ghDCAFKQNAIQMLIANCD4YiC0KAgP7/D4MiAiABQiCIIgR+IhEgC0IgiCILIAFC/////w+DIgF+fCIQQiCGIhIgASACfnwiDiASVK0gAiANQv////8PgyINfiIVIAQgC358IhIgDEIPhiITIANCMYiEQv////8PgyIDIAF+fCIUIBAgEVStQiCGIBBCIIiEfCIQIAIgD0KAgASEIgx+IhYgCyANfnwiDyATQiCIQoCAgIAIhCICIAF+fCIRIAMgBH58IhNCIIZ8Ihd8IQEgBiAIaiAHakH//wBrIQYCQCACIAR+IhggCyAMfnwiBCAYVK0gBCADIA1+fCILIARUrXwgAiAMfnwgCyASIBVUrSASIBRWrXx8IgQgC1StfCADIAx+IgMgAiANfnwiAiADVK1CIIYgAkIgiIR8IAQgAkIghnwiAiAEVK18IAIgESATVq0gDyAWVK0gDyARVq18fEIghiATQiCIhHwiBCACVK18IAQgECAUVK0gECAXVq18fCICIARUrXwiBEKAgICAgIDAAINCAFIEQCAGQQFqIQYMAQsgDkI/iCEDIARCAYYgAkI/iIQhBCACQgGGIAFCP4iEIQIgDkIBhiEOIAMgAUIBhoQhAQsgBkH//wFOBEAgCkKAgICAgIDA//8AhCEKQgAhAQwBCwJ+IAZBAEwEQEEBIAZrIghB/wBNBEAgBUEwaiAOIAEgBkH/AGoiBhCGASAFQSBqIAIgBCAGEIYBIAVBEGogDiABIAgQhwEgBSACIAQgCBCHASAFKQMwIAUpAziEQgBSrSAFKQMgIAUpAxCEhCEOIAUpAyggBSkDGIQhASAFKQMAIQIgBSkDCAwCC0IAIQEMAgsgBEL///////8/gyAGrUIwhoQLIAqEIQogDlAgAUIAWSABQoCAgICAgICAgH9RG0UEQCAKIAJCAXwiAVCtfCEKDAELIA4gAUKAgICAgICAgIB/hYRCAFIEQCACIQEMAQsgCiACIAJCAYN8IgEgAlStfCEKCyAAIAE3AwAgACAKNwMIIAVB4ABqJAAL3AkCBH4EfyMAQfAAayIKJAAgBEL///////////8AgyEGAkACQCABUCIJIAJC////////////AIMiBUKAgICAgIDA//8AfUKAgICAgIDAgIB/VCAFUBtFBEAgA0IAUiAGQoCAgICAgMD//wB9IghCgICAgICAwICAf1YgCEKAgICAgIDAgIB/URsNAQsgCSAFQoCAgICAgMD//wBUIAVCgICAgICAwP//AFEbRQRAIAJCgICAgICAIIQhBCABIQMMAgsgA1AgBkKAgICAgIDA//8AVCAGQoCAgICAgMD//wBRG0UEQCAEQoCAgICAgCCEIQQMAgsgASAFQoCAgICAgMD//wCFhFAEQEKAgICAgIDg//8AIAIgASADhSACIASFQoCAgICAgICAgH+FhFAiCRshBEIAIAEgCRshAwwCCyADIAZCgICAgICAwP//AIWEUA0BIAEgBYRQBEAgAyAGhEIAUg0CIAEgA4MhAyACIASDIQQMAgsgAyAGhEIAUg0AIAEhAyACIQQMAQsgAyABIAEgA1QgBSAGVCAFIAZRGyILGyEGIAQgAiALGyIIQv///////z+DIQUgAiAEIAsbIgdCMIinQf//AXEhDCAIQjCIp0H//wFxIglFBEAgCkHgAGogBiAFIAYgBSAFUCIJG3kgCUEGdK18pyIJQQ9rEIYBQRAgCWshCSAKKQNgIQYgCikDaCEFCyABIAMgCxshAyAHQv///////z+DIQEgDAR+IAEFIApB0ABqIAMgASADIAEgAVAiCxt5IAtBBnStfKciC0EPaxCGAUEQIAtrIQwgCikDUCEDIAopA1gLQgOGIANCPYiEQoCAgICAgIAEhCEBIAVCA4YgBkI9iIQhByADQgOGIQUgAiAEhSEDAkAgCSAMRg0AIAkgDGsiC0H/AEsEQEIAIQFCASEFDAELIApBQGsgBSABQYABIAtrEIYBIApBMGogBSABIAsQhwEgCikDMCAKKQNAIAopA0iEQgBSrYQhBSAKKQM4IQELIAdCgICAgICAgASEIQcgBkIDhiEGAkAgA0IAUwRAQgAhA0IAIQQgBSAGhSABIAeFhFANAiAGIAV9IQIgByABfSAFIAZWrX0iBEL/////////A1YNASAKQSBqIAIgBCACIAQgBFAiCxt5IAtBBnStfKdBDGsiCxCGASAJIAtrIQkgCikDKCEEIAopAyAhAgwBCyAFIAZ8IgIgBVStIAEgB3x8IgRCgICAgICAgAiDUA0AIAVCAYMgBEI/hiACQgGIhIQhAiAJQQFqIQkgBEIBiCEECyAIQoCAgICAgICAgH+DIQUgCUH//wFOBEAgBUKAgICAgIDA//8AhCEEQgAhAwwBC0EAIQsCQCAJQQBKBEAgCSELDAELIApBEGogAiAEIAlB/wBqEIYBIAogAiAEQQEgCWsQhwEgCikDACAKKQMQIAopAxiEQgBSrYQhAiAKKQMIIQQLIARCPYYgAkIDiIQhAyAEQgOIQv///////z+DIAutQjCGhCAFhCEEAkACQCACp0EHcSIJQQRHBEAgBCADIAlBBEutfCIFIANUrXwhBCAFIQMMAQsgBCADIANCAYN8IgUgA1StfCEEIAUhAwwBCyAJRQ0BCwsgACADNwMAIAAgBDcDCCAKQfAAaiQAC/oBAgN+An8jAEEQayIFJAACfiABvSIEQv///////////wCDIgJCgICAgICAgAh9Qv/////////v/wBYBEAgAkI8hiEDIAJCBIhCgICAgICAgIA8fAwBCyACQoCAgICAgID4/wBaBEAgBEI8hiEDIARCBIhCgICAgICAwP//AIQMAQsgAlAEQEIADAELIAUgAkIAIAKnZ0EgaiACQiCIp2cgAkKAgICAEFQbIgZBMWoQhgEgBSkDACEDIAUpAwhCgICAgICAwACFQYz4ACAGa61CMIaECyECIAAgAzcDACAAIAIgBEKAgICAgICAgIB/g4Q3AwggBUEQaiQAC9sBAgF/An5BASEEAkAgAEIAUiABQv///////////wCDIgVCgICAgICAwP//AFYgBUKAgICAgIDA//8AURsNACACQgBSIANC////////////AIMiBkKAgICAgIDA//8AViAGQoCAgICAgMD//wBRGw0AIAAgAoQgBSAGhIRQBEBBAA8LIAEgA4NCAFkEQEF/IQQgACACVCABIANTIAEgA1EbDQEgACAChSABIAOFhEIAUg8LQX8hBCAAIAJWIAEgA1UgASADURsNACAAIAKFIAEgA4WEQgBSIQQLIAQLwAECAX8CfkF/IQMCQCAAQgBSIAFC////////////AIMiBEKAgICAgIDA//8AViAEQoCAgICAgMD//wBRGw0AIAJC////////////AIMiBUKAgICAgIDA//8AViAFQoCAgICAgMD//wBScQ0AIAAgBCAFhIRQBEBBAA8LIAEgAoNCAFkEQCABIAJSIAEgAlNxDQEgACABIAKFhEIAUg8LIABCAFIgASACVSABIAJRGw0AIAAgASAChYRCAFIhAwsgAwupAQEBfEQAAAAAAADwPyEBAkAgAEGACE4EQEQAAAAAAADgfyEBIABB/w9JBEAgAEH/B2shAAwCC0QAAAAAAADwfyEBQf0XIAAgAEH9F08bQf4PayEADAELIABBgXhKDQBEAAAAAAAAYAMhASAAQbhwSwRAIABByQdqIQAMAQtEAAAAAAAAAAAhAUHwaCAAIABB8GhNG0GSD2ohAAsgASAAQf8Haq1CNIa/ogs8ACAAIAE3AwAgACACQv///////z+DIAJCgICAgICAwP//AINCMIinIARCMIinQYCAAnFyrUIwhoQ3AwgLZwIBfwF+IwBBEGsiAiQAIAACfiABRQRAQgAMAQsgAiABrUIAQfAAIAFnIgFBH3NrEIYBIAIpAwhCgICAgICAwACFQZ6AASABa61CMIZ8IQMgAikDAAs3AwAgACADNwMIIAJBEGokAAtFAQF/IwBBEGsiBSQAIAUgASACIAMgBEKAgICAgICAgIB/hRDaAiAFKQMAIQQgACAFKQMINwMIIAAgBDcDACAFQRBqJAALxAIBAX8jAEHQAGsiBCQAAkAgA0GAgAFOBEAgBEEgaiABIAJCAEKAgICAgICA//8AENkCIAQpAyghAiAEKQMgIQEgA0H//wFJBEAgA0H//wBrIQMMAgsgBEEQaiABIAJCAEKAgICAgICA//8AENkCQf3/AiADIANB/f8CTxtB/v8BayEDIAQpAxghAiAEKQMQIQEMAQsgA0GBgH9KDQAgBEFAayABIAJCAEKAgICAgICAORDZAiAEKQNIIQIgBCkDQCEBIANB9IB+SwRAIANBjf8AaiEDDAELIARBMGogASACQgBCgICAgICAgDkQ2QJB6IF9IAMgA0HogX1NG0Ga/gFqIQMgBCkDOCECIAQpAzAhAQsgBCABIAJCACADQf//AGqtQjCGENkCIAAgBCkDCDcDCCAAIAQpAwA3AwAgBEHQAGokAAt1AQF+IAAgASAEfiACIAN+fCADQiCIIgIgAUIgiCIEfnwgA0L/////D4MiAyABQv////8PgyIBfiIFQiCIIAMgBH58IgNCIIh8IAEgAn4gA0L/////D4N8IgFCIIh8NwMIIAAgBUL/////D4MgAUIghoQ3AwALwA8CBX8PfiMAQdACayIFJAAgBEL///////8/gyELIAJC////////P4MhCiACIASFQoCAgICAgICAgH+DIQwgBEIwiKdB//8BcSEGAkACQCACQjCIp0H//wFxIglB//8B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rXwiAiADVK18IgMgAiADQoCAgICAgMD//wBUIAQgBSkDAFYgASAFKQMIIgRWIAEgBFEbca18IgEgAlStfCAMhCEMCyAAIAE3AwAgACAMNwMIIAVB0AJqJAAL0QYCBH8DfiMAQYABayIFJAACQAJAAkAgAyAEQgBCABDcAkUNAAJ/IARC////////P4MhCQJ/IARCMIinQf//AXEiBkH//wFHBEBBBCAGDQEaQQJBAyADIAmEUBsMAgsgAyAJhFALCyEHIAJCMIinIghB//8BcSIGQf//AUYNACAHDQELIAVBEGogASACIAMgBBDZAiAFIAUpAxAiBCAFKQMYIgMgBCADEOQCIAUpAwghAiAFKQMAIQQMAQsgASACQv///////////wCDIgogAyAEQv///////////wCDIgkQ3AJBAEwEQCABIAogAyAJENwCBEAgASEEDAILIAVB8ABqIAEgAkIAQgAQ2QIgBSkDeCECIAUpA3AhBAwBCyAEQjCIp0H//wFxIQcgBgR+IAEFIAVB4ABqIAEgCkIAQoCAgICAgMC7wAAQ2QIgBSkDaCIKQjCIp0H4AGshBiAFKQNgCyEEIAdFBEAgBUHQAGogAyAJQgBCgICAgICAwLvAABDZAiAFKQNYIglCMIinQfgAayEHIAUpA1AhAwsgCUL///////8/g0KAgICAgIDAAIQhCyAKQv///////z+DQoCAgICAgMAAhCEKIAYgB0oEQANAAn4gCiALfSADIARWrX0iCUIAWQRAIAkgBCADfSIEhFAEQCAFQSBqIAEgAkIAQgAQ2QIgBSkDKCECIAUpAyAhBAwFCyAJQgGGIARCP4iEDAELIApCAYYgBEI/iIQLIQogBEIBhiEEIAZBAWsiBiAHSg0ACyAHIQYLAkAgCiALfSADIARWrX0iCUIAUwRAIAohCQwBCyAJIAQgA30iBIRCAFINACAFQTBqIAEgAkIAQgAQ2QIgBSkDOCECIAUpAzAhBAwBCyAJQv///////z9YBEADQCAEQj+IIQMgBkEBayEGIARCAYYhBCADIAlCAYaEIglCgICAgICAwABUDQALCyAIQYCAAnEhByAGQQBMBEAgBUFAayAEIAlC////////P4MgBkH4AGogB3KtQjCGhEIAQoCAgICAgMDDPxDZAiAFKQNIIQIgBSkDQCEEDAELIAlC////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gICAwMA/fSACQoCAgICAgMC/wAB9VARAIAFCGYinIQUgAFAgAUL///8PgyICQoCAgAhUIAJCgICACFEbRQRAIAVBgYCAgARqIQMMAgsgBUGAgICABGohAyAAIAJCgICACIWEQgBSDQEgAyAFQQFxaiEDDAELIABQIAJCgICAgICAwP//AFQgAkKAgICAgIDA//8AURtFBEAgAUIZiKdB////AXFBgICA/gdyIQMMAQtBgICA/AchAyACQv///////7+/wABWDQBBACEDIAJCMIinIgVBkf4ASQ0AIARBEGogACABQv///////z+DQoCAgICAgMAAhCICIAVBgf4AaxCGASAEIAAgAkGB/wAgBWsQhwEgBCkDCCICQhmIpyEDIAQpAwAgBCkDECAEKQMYhEIAUq2EIgBQIAJC////D4MiAkKAgIAIVCACQoCAgAhRG0UEQCADQQFqIQMMAQsgACACQoCAgAiFhEIAUg0AIANBAXEgA2ohAwsgBEEgaiQAIAMgAUIgiKdBgICAgHhxcr4LQwACQCAARQ0AAkACQAJAAkAgAUECag4GAAECAgQDBAsgACACPAAADwsgACACPQEADwsgACACPgIADwsgACACNwMACwv+HgIQfwV+IwBBkAFrIgMkACADQQBBkAEQYyIDQX82AkwgAyAANgIsIANBkAE2AiAgAyAANgJUIAEhBCACIRBBACEAIwBBsAJrIgckACADKAJMGgJAAkAgAygCBEUEQCADEJUBGiADKAIERQ0BCyAELQAAIgFFDQEgB0EQaiESAkACQAJAAkACQANAAkACQCABQf8BcSIBEGQEQANAIAQiAUEBaiEEIAEtAAEQZA0ACyADQgAQ1gIDQAJ/IAMoAgQiBCADKAJoRwRAIAMgBEEBajYCBCAELQAADAELIAMQ1wILEGQNAAsgAygCBCEEIAMpA3BCAFkEQCADIARBAWsiBDYCBAsgBCADKAIsa6wgAykDeCAWfHwhFgwBCwJ/AkACQCABQSVGBEAgBC0AASIBQSpGDQEgAUElRw0CCyADQgAQ1gICQCAELQAAQSVGBEADQAJ/IAMoAgQiASADKAJoRwRAIAMgAUEBajYCBCABLQAADAELIAMQ1wILIgEQZA0ACyAEQQFqIQQMAQsgAygCBCIBIAMoAmhHBEAgAyABQQFqNgIEIAEtAAAhAQwB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ACABEKcFCwkAIAFBBBCSAgsKACAAIAEgAhBlC08BAX8jAEEQayIDJAAgAyABNgIIIAMgADYCDCADIAI2AgRBACEBIANBBGogA0EMahCOAUUEQCADQQRqIANBCGoQjgEhAQsgA0EQaiQAIAELBwAgABCrBQsnAQF/IwBBEGsiASQAIAEgADYCDCABQQxqEK0FIQAgAUEQaiQAIAALBwAgABCtBQsuAQF/IAAoAgAhACMAQRBrIgEkACABIAA2AgwgAUEMaigCACEAIAFBEGokACAACzcBAX8jAEEQayIDJAAgAyABEKoFNgIMIAMgAhCqBTYCCCAAIANBDGogA0EIahCLAiADQRBqJAALCwAgAEEANgIAIAALRAEBfyMAQRBrIgEkACAAELIFGiABQf////8DNgIMIAFB/////wc2AgggAUEMaiABQQhqEPgBKAIAIQAgAUEQaiQAIAALCQBBrQsQjAEACwcAIABBEGoLSwEBfyMAQRBrIgMkAAJAAkAgAkEeSw0AIAEtAHgNACABQQE6AHgMAQsgA0EPaiACEKQFIQELIANBEGokACAAIAI2AgQgACABNgIACwcAIABBCGoLJgAgACgCABogACgCABogABC2BRogACgCABogABC2BRogACgCABoLEwAgABC0BSgCACAAKAIAa0ECdQsJACAAQQA2AgALLAEBfyAAKAIEIQIDQCABIAJHBEAgABCyBRogAkEEayECDAELCyAAIAE2AgQLLAAgACgCABogACgCABogABC2BRogACgCABogABC6BBogACgCABogABC2BRoLMAAjAEEQayICJAACQCAAIAFGBEAgAUEAOgB4DAELIAJBD2ogARCnBQsgAkEQaiQACwoAIABBDGoQvQULBwAgAEEMagsKACAAQQRqKAIACwoAIAAoAgBBBGsLDwAgACAAKAIAQQRrNgIACyMBAn8gACEBA0AgASICQQRqIQEgAigCAA0ACyACIABrQQJ1CwoAIAAQpgM2AgALFgAgACABIAJCgICAgICAgICAfxD3AgsNACAAIAEgAkJ/EPcCCwMAAAs3AQF/QQEgACAAQQFNGyEBAkADQCABEIMBIgANAUGIywQoAgAiAARAIAARDAAMAQsLEBAACyAACw0AIABBpIgENgIAIAALSwECfyAAEMYFIgBBlIkENgIAIAEQaSICQQ1qEMUFIgNBADYCCCADIAI2AgQgAyACNgIAIABBBGogA0EMaiABIAJBAWoQYTYCACAACwsAIAAgASACEIwCC5gCAQN/IwBBEGsiCCQAIAJB7////wciCSABQX9zak0EQCAAEOUBIQogCEEEaiAAIAEgCUEBdkEQa0kEfyAIIAFBAXQ2AgwgCCABIAJqNgIEIAhBBGogCEEMahDyASgCABCXAkEBagUgCQsQmAIgCCgCBCEJIAgoAggaIAQEQCAJIAogBBCiAQsgBgRAIAQgCWogByAGEKIBCyADIAQgBWoiB2shAiADIAdHBEAgBCAJaiAGaiAEIApqIAVqIAIQogELIAFBAWoiAUELRwRAIAAgCiABEI8CCyAAIAkQmQIgACAIKAIIEJoCIAAgBCAGaiACaiIEEJsCIAhBADoADCAEIAlqIAhBDGoQkQIgCEEQaiQADwsQnAIACxsAIAAQ6gEEQCAAIAAoAgAgABDzARCPAgsgAAtEAQF/IwBBEGsiAyQAIAMgAjoADyADQQ9qIQIDQCABBEAgACACLQAAOgAAIAFBAWshASAAQQFqIQAMAQsLIANBEGokAAuAAQECfyMAQRBrIgMkAAJAAkAgAhCWAgRAIAAhBCAAIAIQkAIMAQsgAkHv////B0sNASADQQhqIAAgAhCXAkEBahCYAiADKAIMGiAAIAMoAggiBBCZAiAAIAMoAgwQmgIgACACEJsCCyAEIAEgAkEBahCiASADQRBqJAAPCxCcAgALfwEDfyMAQRBrIgUkAAJAIAIgABDsASIEIAAQ6wEiA2tNBEAgAkUNASAAEOUBIgQgA2ogASACEKIBIAAgAiADaiICEJUEIAVBADoADyACIARqIAVBD2oQkQIMAQsgACAEIAIgBGsgA2ogAyADQQAgAiABEMkFCyAFQRBqJAAgAAttAQR/IAAQ5QEhAyAAEOsBIQQjAEEQayIAJAAgAEEiOgAPQX8hAiABIARJBEACfyABIANqIQIgAEEPaiEFQQAgBCABayIBRQ0AGiACIAUsAAAgARCoBQsiASADa0F/IAEbIQILIABBEGokACACC70BAQR/An8gARBpIQIjAEEQayIFJAAgABDrASIEQQBPBEACQCACIAAQ7AEiAyAEa00EQCACRQ0BIAAQ5QEiAyAEBH8gAiADaiADIAQQyAUgASACQQAgAyAEaiABSxtBACABIANPG2oFIAELIAIQyAUgACACIARqIgIQlQQgBUEAOgAPIAIgA2ogBUEPahCRAgwBCyAAIAMgAiAEaiADayAEQQBBACACIAEQyQULIAVBEGokACAADAELEJwCAAsLcgECfyMAQRBrIgQkAAJAIAIgABDzASIDSQRAIAAoAgAhAyAAIAIQmwIgAyABIAIQogEgBEEAOgAPIAIgA2ogBEEPahCRAgwBCyAAIANBAWsgAiADa0EBaiAAKAIEIgNBACADIAIgARDJBQsgBEEQaiQAC2ABAX8jAEEQayIDJAACQCACQQpNBEAgACACEJACIAAgASACEKIBIANBADoADyAAIAJqIANBD2oQkQIMAQsgAEEKIAJBCmsgABD0ASIAQQAgACACIAEQyQULIANBEGokAAu0AQEDfyMAQRBrIgMkACADIAE6AA8CQAJAAn8gABDqASIERQRAQQohAiAAEPQBDAELIAAQ8wFBAWshAiAAKAIECyIBIAJGBEAgACACQQEgAiACEJQEIAAQ5QEaDAELIAAQ5QEaIAQNACAAIQIgACABQQFqEJACDAELIAAoAgAhAiAAIAFBAWoQmwILIAEgAmoiACADQQ9qEJECIANBADoADiAAQQFqIANBDmoQkQIgA0EQaiQACw0AIAAgASABEGkQzQULkQEBA38gABDrASICIAFJBEAjAEEQayIEJAAgASACayICBEAgAiAAEOwBIgMgABDrASIBa0sEQCAAIAMgAiADayABaiABIAEQlAQLIAEgABDlASIDaiACQQAQywUgACABIAJqIgIQlQQgBEEAOgAPIAIgA2ogBEEPahCRAgsgBEEQaiQADwsgACAAEOUBIAEQpQULqAIBA38jAEEQayIIJAAgAiAAEKAFIgkgAUF/c2pNBEAgABDlASEKIAhBBGogACABIAlBAXZBEGtJBH8gCCABQQF0NgIMIAggASACajYCBCAIQQRqIAhBDGoQ8gEoAgAQogVBAWoFIAkLEKMFIAgoAgQhCSAIKAIIGiAEBEAgCSAKIAQQ0AELIAYEQCAEQQJ0IAlqIAcgBhDQAQsgAyAEIAVqIgdrIQIgAyAHRwRAIARBAnQiAyAJaiAGQQJ0aiADIApqIAVBAnRqIAIQ0AELIAFBAWoiAUECRwRAIAAgCiABEKYFCyAAIAkQmQIgACAIKAIIEJoC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bnYAVGh1AHVuc3VwcG9ydGVkIGxvY2FsZSBmb3Igc3RhbmRhcmQgaW5wdXQAQXVndXN0AHVuc2lnbmVkIHNob3J0AG1lbV9hbGxvY19jb3VudABNZW1vcnkgYWxsb2NhdGlvbnMgY291bnQAdW5zaWduZWQgaW50AENhbGxKc1Jlc3VsdABPY3QAZmxvYXQAU2F0AHVpbnQ2NF90AFNjb3BlU3RhY2tBbGxvY1N0YXRzAG1zAEVuYWJsZWRGYXN0RmxhZ3MAYnl0ZXMAJTMuMmYlcwAlbGxkJXMAQXByAHZlY3RvcgBPY3RvYmVyAE5vdmVtYmVyAFNlcHRlbWJlcgBEZWNlbWJlcgB1bnNpZ25lZCBjaGFyAGlvc19iYXNlOjpjbGVhcgBNYXIAU2xlZXAAU2VwACVJOiVNOiVTICVwAFN1bgBKdW4Ac3RkOjpleGNlcHRpb24AOiBubyBjb252ZXJzaW9uAE1vbgBuYW4ASmFuAEp1bABib29sAHN0ZDo6YmFkX2Z1bmN0aW9uX2NhbGwAQXByaWwARnJpAHN0b2kAYmFkX2FycmF5X25ld19sZW5ndGgATWFyY2gAQXVnAHVuc2lnbmVkIGxvbmcAc3RkOjp3c3RyaW5nAGJhc2ljX3N0cmluZwBzdGQ6OnN0cmluZwBzdGQ6OnUxNnN0cmluZwBzdGQ6OnUzMnN0cmluZwBpbmYAMDEyMzQ1Njc4OWFiY2RlZgAlLjBMZgAlTGYAJWYAbWVtX2FsbG9jX3NpemUATWVtb3J5IGFsbG9jYXRpb25zIHNpemUAdHJ1ZQBUdWUAZmFsc2UASnVuZQBjcHVfdGltZQBDUFUgdGltZQBmaWxlTmFtZQBkb3VibGUAOiBvdXQgb2YgcmFuZ2UAdm9pZABXZWQAbG9jYWxHcm91cElkAGxvY2FsSWQAc3RkOjpiYWRfYWxsb2MAQ2FsbEpzRXhlYwBEZWMAemIAeWIAdGIAcGIAbWIAa2IAZ2IARmViACJuYW1lIjogU3RyaW5nLnJhd2AAImdyb3VwTmFtZSI6IFN0cmluZy5yYXdgAFsKICAgICAgICB7CiAgICAgICAgICAgICJmdW5jTmFtZSI6ICJFeHBvcnRGbGFtZWdyYXBoQ29tYm9EaWZmIiwKICAgICAgICAgICAgInNob3J0TmFtZSI6ICJDb21ib0RpZmYiLAogICAgICAgICAgICAiZGlzcGxheU5hbWUiOiAiJiN4MjZBMTtEaWZmIC8gQ29tYmluZSIsCiAgICAgICAgICAgICJjb21ib0RpZmYiOiB0cnVlLAogICAgICAgICAgICAibXVsdGlSYXciOiB0cnVlLAogICAgICAgICAgICAiaGlkZGVuIjogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAiZnVuY05hbWUiOiAiRXhwb3J0RmxhbWVncmFwaENwdSIsCiAgICAgICAgICAgICJzaG9ydE5hbWUiOiAiRmxhbWVncmFwaENwdSIsCiAgICAgICAgICAgICJkaXNwbGF5TmFtZSI6ICImI3gxRjUyNTtDUFUgRmxhbWVncmFwaCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgImZ1bmNOYW1lIjogIkV4cG9ydEZsYW1lZ3JhcGhNZW0iLAogICAgICAgICAgICAic2hvcnROYW1lIjogIkZsYW1lZ3JhcGhNZW0iLAogICAgICAgICAgICAiZGlzcGxheU5hbWUiOiAiJiN4MUY1MjU7TWVtb3J5IEZsYW1lZ3JhcGgiLAogICAgICAgICAgICAiZXZlbnRJZHNOZWVkZWQiOiBbMjBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJmdW5jTmFtZSI6ICJFeHBvcnRGbGFtZWdyYXBoTGl2ZU1lbSIsCiAgICAgICAgICAgICJzaG9ydE5hbWUiOiAiRmxhbWVncmFwaExpdmVNZW0iLAogICAgICAgICAgICAiZGlzcGxheU5hbWUiOiAiTGl2ZSBNZW1vcnkgRmxhbWVncmFwaCIsCiAgICAgICAgICAgICJyYXdFeHRlbnNpb25zTmVlZGVkIjogWyJTY29wZVN0YWNrQWxsb2NTdGF0cyJdCiAgICAgICAgfQogICAgXQAiY2hpbGRyZW4iOlsATWFrZVRpbWVzKCVlLFsATWFrZVRpbWVzRXh0cmEoJWUsJWUsUy50dCVkWyVkXSxbAE1ha2VUaW1lc1R5cGUoJWUsUy50dCVkWyVkXSxbAAolc1RocmVhZEdwdSA9IFsAJXNFeHRlbnNpb25MaXN0ID0gWwAlc0VuYWJsZWRGYXN0RmxhZ3MgPSBbAAolc1RocmVhZEJ1ZmZlclNpemVzID0gWwAKJXNUaHJlYWROYW1lcyA9IFsACiVzTWV0YU5hbWVzID0gWwAKJXNUaHJlYWRJZHMgPSBbAAolc0NvdW50ZXJJbmZvID0gWwAKVGhyZWFkQ2xvYmJlcmVkID0gWwAiY2hpbGRyZW4iOiBbAE1ha2VDb3VudGVyKCVkLCAlZCwgJWQsICVkLCAlZCwgJyVzJywgJWxsZCwgJWxsZCwgJWxsZCwgJyVzJywgJWxsZCwgJyVzJywgJWQsICVmLCAlZiwgWwAJWwAlYSAlYiAlZCAlSDolTTolUyAlWQBQT1NJWAAlSDolTTolUwBOQU4AUE0AQU0ATENfQUxMAExBTkcASU5GAEMAZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZmxvYXQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ4X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ2NF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ2NF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8Y2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgY2hhcj4Ac3RkOjpiYXNpY19zdHJpbmc8dW5zaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGRvdWJsZT4AXTsAImRpc3BsYXlDb3VudCI6ACAgICAiYm90dG9tVXAiOgAgICAgInRvcERvd24iOgAidmFsdWUiOgAiZGlzcGxheVZhbHVlIjoAQy5VVEYtOAAjRDNEM0QzADAAPGEgaHJlZj0iaHR0cHM6Ly93d3cucm9ibG94LmNvbS9nYW1lcy8ALgAlbGxkOnsndGlkJzolbGxkLCdwaWQnOiVsbGQsJ3QnOiclcycsJ3AnOiclcyd9LABudWxsLAAlZiwAYCwAJyVzJywAICAgICJ1bml0cyI6ICJtcyIsACAgICAidW5pdHMiOiAiJXMiLAAgICAgInNob3J0TmFtZSI6ICIlcyIsACAgICAidGl0bGUiOiAiJXMiLAAgICAgInRpdGxlIjogIkNQVSB0aW1lIiwAKG51bGwpAChFeGNsKQAjACJjb2xvciI6IgAibmFtZSI6IgAiY29sb3IiOiAiACAgICAiZmlsZU5hbWUiOiAiACAgICAicGxhY2VJZCI6ICIAUHVyZSB2aXJ0dWFsIGZ1bmN0aW9uIGNhbGxlZCEAdGltZXN0YW1wIHN0YWNrIGVtcHR5IGF0IGVudHJ5IABJbnZhbGlkIHRpbWVyIGluZGV4IAAgaW4gZnJhbWUgAE1pc21hdGNoZWQgbG9nIGVudHJpZXMgZm9yIHRocmVhZCAAIGluIHRocmVhZCAAY29uc3QgYWxsb2NDb3VudEpzb24gPSAAY29uc3QgbGl2ZUFsbG9jQ291bnRKc29uID0gAGNvbnN0IGFsbG9jQnl0ZXNKc29uID0gAGNvbnN0IGxpdmVBbGxvY0J5dGVzSnNvbiA9IABjb25zdCBEdW1wRGF0ZSA9IABsaWJjKythYmk6IAAidGltZXJJbmRleCI6IAAgICAgIm51bWJlck9mRnJhbWVzIjogACJ2YWx1ZSI6IAAgICAgInV0Y0NhcHR1cmVUaW1lIjogACAgICAibG9jYWxHcm91cElkIjogACAgICAibG9jYWxJZCI6IAAKJXNUaHJlYWRHcm91cFRpbWVBcnJheSA9IFsKACVzQ1N3aXRjaFRocmVhZEluT3V0Q3B1ID0gWwoAJXNDR2xvYmFsTGFiZWxzID0gWwoAY29uc3Qgc291cmNlX2NvbnRhaW5lcnNfanNvbiA9IFsKACVzQ1N3aXRjaFRpbWUgPSBbCgBTLnR0JWQgPSBbCgBTLnRzJWQgPSBbCgBTLnRsJWQgPSBbCgBTLnRpJWQgPSBbCgBTID0ge307CgAlc0FnZ3JlZ2F0ZUluZm8gPSB7J0ZyYW1lcyc6JWQsICdUaW1lJzolZn07CgAlc0R1bXBVdGNDYXB0dXJlVGltZSA9ICVsbGQ7CgBdOwoAJXNGcmFtZXMgPSBBcnJheSglZCk7CgAlc0NhdGVnb3J5SW5mbyA9IEFycmF5KCVkKTsKAF0pOwoAR3JvdXBJbmZvWyVkXSA9IE1ha2VHcm91cCglZCwgIiVzIiwgJWQsICVkLCAlZCwgJWYsICVmLCAlZiwgJyMlMDZ4Jyk7CgAlc0R1bXBIb3N0ID0gJyVzJzsKACVzUGxhdGZvcm1JbmZvID0gJyVzJzsKAENhdGVnb3J5SW5mb1slZF0gPSAiJXMiOwoAfSwKAFRpbWVySW5mb1slZF0gPSBNYWtlVGltZXIoJWQsICIlcyIsICVkLCAnIyUwNngnLCcjJTA2eCcsICVmLCAlZiwgJWYsICVmLCAlZiwgJWYsICVkLCAlZiwKAF0sCgBdKSwKAEZyYW1lc1slZF0gPSBNYWtlRnJhbWUoJWQsICVmLCAlZiwgJWYsICVmLCBTLnRzJWQsIFMudHQlZCwgUy50aSVkLCBTLnRsJWQsICVkLCAlZCwgJTYuMWYsICU2LjFmLCAlNi4xZiwgJTQuM2YsICVkLCAlNC4zZiwgJWQsICU2LjJmLCAlNi4yZiwgJTYuMmYsICU2LjJmKTsgCgBdOwoKAAolc1RpbWVySW5mbyA9IEFycmF5KCVkKTsKCgAlc0dyb3VwSW5mbyA9IEFycmF5KCVkKTsKCgAKJXNUaHJlYWRDbG9iYmVyZWQgPSBBcnJheSgpOwoKAAAAAHACAQAkFgAATlN0M19fMjEyYmFzaWNfc3RyaW5nSWNOU18xMWNoYXJfdHJhaXRzSWNFRU5TXzlhbGxvY2F0b3JJY0VFRUUAABwDAQDkFQAAaWlpAHACAQBpaQAAAAAAABAXAAAMAAAADQAAAA4AAAAPAAAAEAAAABEAAAASAAAAEwAAABQAAABOU3QzX18yMTBfX2Z1bmN0aW9uNl9fZnVuY0laMjVldmFsdWF0ZUV4Y2x1c2l2ZVRpbWVEYXRhUjEzVGltZXJOb2RlRGF0YUUzJF8wTlNfOWFsbG9jYXRvcklTNF9FRUZqUDEwVGltZXJOb2Rlc2pFRUUATlN0M19fMjEwX19mdW5jdGlvbjZfX2Jhc2VJRmpQMTBUaW1lck5vZGVzakVFRQAAABwDAQDXFgAARAMBAGQWAAAIFwAAAFoyNWV2YWx1YXRlRXhjbHVzaXZlVGltZURhdGFSMTNUaW1lck5vZGVEYXRhRTMkXzAAABwDAQAdFwBB4C4LgCQ8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iPgo8aGVhZD4KPG1ldGEgY2hhcnNldD0idXRmLTgiPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgoKPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjMuNy9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiPgo8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2QzLWZsYW1lLWdyYXBoQDQuMS4zL2Rpc3QvZDMtZmxhbWVncmFwaC5jc3MiPgo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbm91aXNsaWRlckAxNS44LjEvZGlzdC9ub3Vpc2xpZGVyLm1pbi5jc3MiPgoKPHN0eWxlPgovKiBTcGFjZSBvdXQgY29udGVudCBhIGJpdCAqLwpib2R5IHsKICAgIHBhZGRpbmctdG9wOiAyMHB4OwogICAgcGFkZGluZy1ib3R0b206IDIwcHg7Cn0KCi8qIEN1c3RvbSBwYWdlIGhlYWRlciAqLwouaGVhZGVyIHsKICAgIHBhZGRpbmctYm90dG9tOiAyMHB4OwogICAgcGFkZGluZy1yaWdodDogMTVweDsKICAgIHBhZGRpbmctbGVmdDogMTVweDsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTVlNWU1Owp9CgovKiBNYWtlIHRoZSBtYXN0aGVhZCBoZWFkaW5nIHRoZSBzYW1lIGhlaWdodCBhcyB0aGUgbmF2aWdhdGlvbiAqLwouaGVhZGVyIGgzIHsKICAgIG1hcmdpbi10b3A6IDA7CiAgICBtYXJnaW4tYm90dG9tOiAwOwogICAgbGluZS1oZWlnaHQ6IDMycHg7Cn0KCi8qIEN1c3RvbWl6ZSBjb250YWluZXIgKi8KLmNvbnRhaW5lciB7CiAgICBtYXgtd2lkdGg6IDExMDBweDsKfQoKLmMtMS1jb2xvciB7CiAgICBiYWNrZ3JvdW5kOiAjZDJkMmQyOwp9Cjwvc3R5bGU+Cgo8dGl0bGU+TWljcm9Qcm9maWxlIEZsYW1lR3JhcGg8L3RpdGxlPgo8L2hlYWQ+Cjxib2R5Pgo8ZGl2IGlkPSJTcGlubmVyIiBzdHlsZT0id2lkdGg6MTAwJTsgdGV4dC1hbGlnbjpjZW50ZXI7IGRpc3BsYXk6YmxvY2s7Ij5Mb2FkaW5nLi4uPC9kaXY+CjxkaXYgY2xhc3M9ImNvbnRhaW5lciIgaWQ9Ik1haW5WaWV3IiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgICA8ZGl2IGNsYXNzPSJoZWFkZXIgY2xlYXJmaXgiPgogICAgPG5hdj4KICAgICAgICA8ZGl2IGNsYXNzPSJwdWxsLXJpZ2h0Ij4KICAgICAgICA8Zm9ybSBjbGFzcz0iZm9ybS1pbmxpbmUiIGlkPSJmb3JtIj4KICAgICAgICAgICAgPGEgaWQ9IlRvcERvd25CdXR0b24iIGNsYXNzPSJidG4iIHN0eWxlPSJkaXNwbGF5Om5vbmU7IHZlcnRpY2FsLWFsaWduOiB0b3A7IiBocmVmPSJqYXZhc2NyaXB0OiB0b3BEb3duVG9nZ2xlKCk7Ij5Ub3AgZG93bjwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biIgc3R5bGU9InZlcnRpY2FsLWFsaWduOiB0b3A7IiBocmVmPSJqYXZhc2NyaXB0OiByZXNldFpvb20oKTsiPlJlc2V0IHpvb208L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJidG4iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogdG9wOyIgaHJlZj0iamF2YXNjcmlwdDogY2xlYXIoKTsiPkNsZWFyPC9hPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJ0ZXJtIj4KICAgICAgICAgICAgPGJyPgogICAgICAgICAgICA8c2VsZWN0IGlkPSJHcmFwaFNlbGVjdG9yIiBzdHlsZT0iZGlzcGxheTpub25lOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAzMnB4OyIgb25jaGFuZ2U9Ik9uU2VsZWN0R3JhcGgoKTsiPgogICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgPGJyPgogICAgICAgICAgICA8c2VsZWN0IGlkPSJTZW5zTW9kZVNlbGVjdG9yIiBzdHlsZT0iZGlzcGxheTpub25lOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAzMnB4OyIgb25jaGFuZ2U9Ik9uU2VsZWN0U2Vuc01vZGUoKTsiPgogICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjogdG9wOyIgaHJlZj0iamF2YXNjcmlwdDogc2VhcmNoKCk7Ij5TZWFyY2g8L2E+CiAgICAgICAgPC9mb3JtPgogICAgICAgIDwvZGl2PgogICAgPC9uYXY+CiAgICA8aDMgaWQ9IlBsYWNlSWQiIGNsYXNzPSJ0ZXh0LW11dGVkIj5NaWNyb3Byb2ZpbGVyIEZsYW1lZ3JhcGggUGxhY2UgSUQgPTwvaDM+CiAgICA8aDQgaWQ9IkR1bXBzSW5mbyI+PC9oND4KICAgIDxoNSBpZD0iQ29sbGVjdGlvblRpbWUiIGNsYXNzPSJ0ZXh0LW11dGVkIj5Db2xsZWN0aW9uIHRpbWU6IDwvaDU+CiAgICA8aDUgaWQ9IkNvbGxlY3Rpb25UaW1lQWdlIiBjbGFzcz0idGV4dC1tdXRlZCI+IGFnbzwvaDU+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9InNsaWRlckNvbnRhaW5lciIgc3R5bGU9ImRpc3BsYXk6bm9uZTsiPgogICAgPC9kaXY+CiAgICA8ZGl2IGlkPSJjaGFydCI+CiAgICA8L2Rpdj4KICAgIDxocj4KICAgIDxkaXYgaWQ9ImRldGFpbHMtaGlkZGVuIiBzdHlsZT0iZGlzcGxheTpub25lOyI+CiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9ImRldGFpbHMiPgogICAgPC9kaXY+CjwvZGl2PgoKPCEtLSBEMy5qcyAtLT4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vZDNqcy5vcmcvZDMudjcuanMiIGNoYXJzZXQ9InV0Zi04Ij48L3NjcmlwdD4KCjwhLS0gZDMtdGlwIC0tPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9kMy10aXAvMC45LjEvZDMtdGlwLm1pbi5qcyI+PC9zY3JpcHQ+Cgo8IS0tIGQzLWZsYW1lZ3JhcGggLS0+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vZDMtZmxhbWUtZ3JhcGhANC4xLjMvZGlzdC9kMy1mbGFtZWdyYXBoLm1pbi5qcyI+PC9zY3JpcHQ+Cgo8IS0tIHNsaWRlciAtLT4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbm91aXNsaWRlckAxNS44LjEvZGlzdC9ub3Vpc2xpZGVyLm1pbi5qcyI+PC9zY3JpcHQ+Cgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CmlmIChnbG9iYWxUaGlzLmdfY2xpTW9kZSkgewogICAgZ2xvYmFsVGhpcy53aW5kb3cgPSBnbG9iYWxUaGlzOwogICAgZ2xvYmFsVGhpcy5kb2N1bWVudCA9IHsKICAgICAgICBjaGlsZE5vZGVzOiBbXSwKICAgICAgICBnZXRFbGVtZW50QnlJZDogZnVuY3Rpb24oeCkgeyByZXR1cm4ge307IH0sCiAgICAgICAgY3JlYXRlRWxlbWVudDogZnVuY3Rpb24oeCkgeyByZXR1cm4ge307IH0sCiAgICB9OwogICAgZ2xvYmFsVGhpcy5uYXZpZ2F0b3IgPSB7CiAgICAgICAgcGxhdGZvcm06ICIiLAogICAgfTsKICAgIGlmICghd2luZG93LmxvY2F0aW9uKSB7CiAgICAgICAgd2luZG93LmxvY2F0aW9uID0gewogICAgICAgICAgICBoYXNoOiAiIiwKICAgICAgICAgICAgcGF0aG5hbWU6ICIiLAogICAgICAgIH07CiAgICB9Cn0KCi8vIENvbnN0YW50cwpjb25zdCBub3JtYWxpemVkTnVtYmVyT2ZGcmFtZXMgPSAxOwpjb25zdCBkZWZhdWx0U2Vuc2l0aXZpdHkwID0gNTsKY29uc3QgZGVmYXVsdFNlbnNpdGl2aXR5MSA9IDcwOwpjb25zdCBtaXNtYXRjaENvbG9yID0gIiNkMmQyZDJmZiI7IC8vIEFscGhhIHNlcnZlcyBhcyBhIG1pc21hdGNoIG1hcmtlcgoKLy8gRW51bXMKY29uc3QgVmlld01vZGVzID0gewogICAgRGVmYXVsdDogMCwKICAgIENvbWJvOiAxLAogICAgRGlmZjogMiwKfTsKCi8vIENvbnRleHQKdmFyIGNvbnRhaW5lcnNfanNvbiA9IFtdOwp2YXIgc2VsZWN0ZWRfY29udGFpbmVyID0ge307CnZhciBzZWxlY3RlZF9ncmFwaCA9IHt9OwoKdmFyIHZpZXdNb2RlID0gMDsKdmFyIGNvbnRhaW5lcklkID0gMDsKdmFyIHRvcERvd24gPSB0cnVlOwogICAgCnZhciBzZW5zaXRpdml0eTAgPSBkZWZhdWx0U2Vuc2l0aXZpdHkwOwp2YXIgc2Vuc2l0aXZpdHkxID0gZGVmYXVsdFNlbnNpdGl2aXR5MTsKCnZhciBzZWFyY2hTdHIgPSAiIjsKCi8vIFRlbXAuIGRhdGEKdmFyIGhhc2gybm9kZSA9IFtdOwoKLy8gRWxlbWVudHMKdmFyIGZsYW1lR3JhcGggPSBudWxsOwoKdmFyIGNvbGxlY3Rpb25UaW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0NvbGxlY3Rpb25UaW1lJyk7CnZhciBjb2xsZWN0aW9uVGltZUFnbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdDb2xsZWN0aW9uVGltZUFnZScpOwp2YXIgcGxhY2VJZFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1BsYWNlSWQnKTsKdmFyIGR1bXBzSW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdEdW1wc0luZm8nKTsKCnZhciBkZXRhaWxzSGlkZGVuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImRldGFpbHMtaGlkZGVuIik7CnZhciBkZXRhaWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImRldGFpbHMiKTsKCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwoAQfDSAAvGwAEKLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCmZ1bmN0aW9uIEdldFNlbnNpdGl2aXR5Q29lZnMoKSB7CiAgICB2YXIgcmVzID0ge307CgogICAgdmFyIGNvbWJvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1NlbnNNb2RlU2VsZWN0b3InKTsKICAgIHJlcy5pc0FicyA9IChjb21iby5zZWxlY3RlZEluZGV4ID4gMCk7CiAgICB2YXIgZm9ybWF0ID0gR2V0U2VsZWN0ZWRVbml0c0Zvcm1hdCgpOwoKICAgIGNvbnN0IGNvZWZCYXNlID0gcmVzLmlzQWJzID8gZm9ybWF0LnNlbnNBYnNNYXggOiAxLjA7CiAgICBjb25zdCB1aU1pbiA9IHNlbnNpdGl2aXR5MCAvIDEwMDsKICAgIGNvbnN0IHVpTWF4ID0gc2Vuc2l0aXZpdHkxIC8gMTAwOwogICAgcmVzLm1heCA9IGNvZWZCYXNlICogdWlNYXg7CiAgICByZXMubWluID0gY29lZkJhc2UgKiB1aU1pbjsKCiAgICByZXR1cm4gcmVzOwp9CiAgICAKZnVuY3Rpb24gQ2xlYXJEZXRhaWxzTGFiZWwoKSB7CiAgICBkZXRhaWxzLmlubmVySFRNTCA9ICcnOwp9CgpmdW5jdGlvbiBVcGRhdGVTbGlkZXJMYWJlbCgpIHsKICAgIHZhciBsYWJlbCA9ICdTZW5zaXRpdml0eSBhZGp1c3RtZW50LCAnOwogICAgdmFyIGZvcm1hdCA9IEdldFNlbGVjdGVkVW5pdHNGb3JtYXQoKTsKICAgIHZhciBjb2VmcyA9IEdldFNlbnNpdGl2aXR5Q29lZnMoKTsKICAgIGlmIChjb2Vmcy5pc0FicykgewogICAgICAgIGxhYmVsICs9IGQzLmZvcm1hdChmb3JtYXQudG90YWwpKGNvZWZzLm1pbikgKyAnICZtZGFzaDsgJyArIGQzLmZvcm1hdChmb3JtYXQudG90YWwpKGNvZWZzLm1heCkgKyAnICcgKyBmb3JtYXQudW5pdHM7CiAgICB9IGVsc2UgewogICAgICAgIGxhYmVsICs9IHNlbnNpdGl2aXR5MCArICcgJm1kYXNoOyAnICsgc2Vuc2l0aXZpdHkxICsgJyUnOwogICAgfQogICAgZGV0YWlscy5pbm5lckhUTUwgPSBsYWJlbDsKfQoKZnVuY3Rpb24gSW5pdFNsaWRlcihjYWxsYmFjaykgewogICAgZnVuY3Rpb24gT25TbGlkZXJVcGRhdGUodmFsdWVzLCBoYW5kbGUsIGNhbGxiYWNrKSB7CiAgICAgICAgaWYgKGhhbmRsZSA9PT0gMCkgewogICAgICAgICAgICBzZW5zaXRpdml0eTAgPSB2YWx1ZXNbMF07CiAgICAgICAgfSBlbHNlIGlmIChoYW5kbGUgPT09IDEpIHsKICAgICAgICAgICAgc2Vuc2l0aXZpdHkxID0gdmFsdWVzWzFdOwogICAgICAgIH0KICAgICAgICBVcGRhdGVTbGlkZXJMYWJlbCgpOwogICAgICAgIGlmIChjYWxsYmFjaykgewogICAgICAgICAgICBjYWxsYmFjaygpOwogICAgICAgIH0KICAgIH0KCiAgICB2YXIgc2xpZGVyQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NsaWRlckNvbnRhaW5lcicpOwogICAgc2xpZGVyQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAiIjsKCiAgICB2YXIgZm9ybWF0ID0gewogICAgICAgIHRvOiBmdW5jdGlvbih2YWx1ZSkgewogICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSk7CiAgICAgICAgfSwKICAgICAgICBmcm9tOiBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUpOwogICAgICAgIH0KICAgIH07CgogICAgbm9VaVNsaWRlci5jcmVhdGUoc2xpZGVyQ29udGFpbmVyLCB7CiAgICAgICAgc3RhcnQ6IFtkZWZhdWx0U2Vuc2l0aXZpdHkwLCBkZWZhdWx0U2Vuc2l0aXZpdHkxXSwgLy8gSW5pdGlhbCBwb3NpdGlvbnMgb2YgdGhlIGhhbmRsZXMKICAgICAgICBjb25uZWN0OiB0cnVlLCAvLyBEaXNwbGF5IGEgY29sb3JlZCBiYXIgYmV0d2VlbiB0aGUgaGFuZGxlcwogICAgICAgIHN0ZXA6IDEsCiAgICAgICAgbWFyZ2luOiA1LAogICAgICAgIHRvb2x0aXBzOiBmYWxzZSwKICAgICAgICBmb3JtYXQ6IGZvcm1hdCwKICAgICAgICByYW5nZTogewogICAgICAgICAgICAnbWluJzogMCwKICAgICAgICAgICAgJ21heCc6IDEwMAogICAgICAgIH0KICAgIH0pOwoKICAgIC8vIERpc3BsYXkgaW5pdGlhbCB2YWx1ZXMgaW4gdGhlIGlucHV0IGZpZWxkcwogICAgc2xpZGVyQ29udGFpbmVyLm5vVWlTbGlkZXIub24oJ2NoYW5nZScsICh2YWx1ZXMsIGhhbmRsZSkgPT4geyBPblNsaWRlclVwZGF0ZSh2YWx1ZXMsIGhhbmRsZSwgY2FsbGJhY2spOyB9KTsKICAgIHNsaWRlckNvbnRhaW5lci5ub1VpU2xpZGVyLm9uKCd1cGRhdGUnLCAodmFsdWVzLCBoYW5kbGUpID0+IHsgT25TbGlkZXJVcGRhdGUodmFsdWVzLCBoYW5kbGUpOyB9KTsKCiAgICB2YXIgY29ubmVjdCA9IHNsaWRlckNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcubm9VaS1jb25uZWN0Jyk7CiAgICB2YXIgY2xhc3NlcyA9IFsnYy0xLWNvbG9yJ107CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbm5lY3QubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25uZWN0W2ldLmNsYXNzTGlzdC5hZGQoY2xhc3Nlc1tpXSk7CiAgICB9CgogICAgc2xpZGVyQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBmdW5jdGlvbihldmVudCkgewogICAgICAgIFVwZGF0ZVNsaWRlckxhYmVsKCk7CiAgICB9KTsKICAgIHNsaWRlckNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICBDbGVhckRldGFpbHNMYWJlbCgpOwogICAgfSk7CgogICAgQ2xlYXJEZXRhaWxzTGFiZWwoKTsKfQoKZnVuY3Rpb24gSW5pdEZsYW1lR3JhcGgoKSB7CiAgICB2YXIgZmxhbWVHcmFwaFRpcCA9ICgoKSA9PiB7CiAgICAgICAgZnVuY3Rpb24gbygpIHt9CiAgICAgICAgby5zaG93ID0gKGQgPT4gbyk7CiAgICAgICAgby5oaWRlID0gKCgpID0+IG8pOwogICAgICAgIG8udGV4dCA9IChkID0+ICIiKTsKICAgICAgICBvLmh0bWwgPSAoZCA9PiAiIik7CiAgICAgICAgby5kZXN0cm95ID0gKCgpID0+IHt9KTsKICAgICAgICByZXR1cm4gbzsKICAgIH0pOwoKICAgIGZsYW1lR3JhcGggPSBmbGFtZWdyYXBoKCkKICAgICAgICAud2lkdGgoMTA3MCkKICAgICAgICAuY2VsbEhlaWdodCgxOCkKICAgICAgICAudHJhbnNpdGlvbkR1cmF0aW9uKDc1MCkKICAgICAgICAubWluRnJhbWVTaXplKDApCiAgICAgICAgLnRyYW5zaXRpb25FYXNlKGQzLmVhc2VDdWJpYykKICAgICAgICAuc29ydCh0cnVlKQogICAgICAgIC50aXRsZSgiIikKICAgICAgICAub25DbGljayhvbkNsaWNrKQogICAgICAgIC5zZWxmVmFsdWUoZmFsc2UpOwoKICAgIGZsYW1lR3JhcGgubGFiZWwobGFiZWxIYW5kbGVyKTsKICAgIGZsYW1lR3JhcGgudG9vbHRpcChmbGFtZUdyYXBoVGlwKCkpOwogICAgZmxhbWVHcmFwaC5zZXRDb2xvck1hcHBlcihmdW5jdGlvbihkLCBvcmlnaW5hbENvbG9yKSB7CiAgICAgICAgcmV0dXJuIGQuaGlnaGxpZ2h0PyAiI2ZmMDAwMCIgOiBkLmRhdGEuY29sb3I7IC8vIG9yaWdpbmFsIHNlYXJjaCgpIGZ1bmN0aW9uYWxpdHkKICAgIH0pOwogICAgZmxhbWVHcmFwaC5zZXREZXRhaWxzRWxlbWVudChkZXRhaWxzSGlkZGVuKTsKfQoKZnVuY3Rpb24gSW5pdERpZmZVaSgpIHsKICAgIGlmICh2aWV3TW9kZSA9PSBWaWV3TW9kZXMuRGlmZikgewogICAgICAgIEluaXRTbGlkZXIoVXBkYXRlRGlmZkNvbG9ycyk7CiAgICB9CgogICAgLy8gQ3JlYXRlIGFuIG9ic2VydmVyIGluc3RhbmNlCiAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbihtdXRhdGlvbnNMaXN0LCBvYnNlcnZlcikgewogICAgICAgIGZvcih2YXIgbXV0YXRpb24gb2YgbXV0YXRpb25zTGlzdCkgewogICAgICAgICAgICBkZXRhaWxzLmlubmVySFRNTCA9IG11dGF0aW9uLnRhcmdldC50ZXh0Q29udGVudDsKICAgICAgICB9CiAgICB9KTsKICAgIC8vIENvbmZpZ3VyYXRpb24gb2YgdGhlIG9ic2VydmVyOgogICAgdmFyIGNvbmZpZyA9IHsgYXR0cmlidXRlczogdHJ1ZSwgY2hpbGRMaXN0OiB0cnVlLCBjaGFyYWN0ZXJEYXRhOiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH07CiAgICAvLyBTdGFydCBvYnNlcnZpbmcgdGhlIHRhcmdldCBub2RlIGZvciBjb25maWd1cmVkIG11dGF0aW9ucwogICAgb2JzZXJ2ZXIub2JzZXJ2ZShkZXRhaWxzSGlkZGVuLCBjb25maWcpOwp9CgpmdW5jdGlvbiBBZGRTZWxlY3Rvck9wdGlvbihzZWxlY3RvckVsLCB0ZXh0LCB2YWwpIHsKICAgIHZhciBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKICAgIG9wdGlvbi50ZXh0ID0gdGV4dDsKICAgIG9wdGlvbi52YWx1ZSA9IHZhbDsKICAgIHNlbGVjdG9yRWwuYWRkKG9wdGlvbik7Cn0KCmZ1bmN0aW9uIEluaXRVaSgpIHsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmb3JtIikuYWRkRXZlbnRMaXN0ZW5lcigic3VibWl0IiwgZnVuY3Rpb24oZXZlbnQpewogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgc2VhcmNoKCk7CiAgICB9KTsKCiAgICB2YXIgaGFzQm90dG9tVXAgPSAoY29udGFpbmVyc19qc29uWzBdLmJvdHRvbVVwICE9IHVuZGVmaW5lZCk7CiAgICBpZiAoaGFzQm90dG9tVXApIHsKICAgICAgICB2YXIgdG9wRG93bkJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdUb3BEb3duQnV0dG9uJyk7CiAgICAgICAgdG9wRG93bkJ1dHRvbi5zdHlsZS5kaXNwbGF5ID0gIiI7CiAgICB9CgogICAgdmFyIGdyYXBoU2VsZWN0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnR3JhcGhTZWxlY3RvcicpOwogICAgY29udGFpbmVyc19qc29uLmZvckVhY2goKGVudHJ5LCBpKSA9PiB7CiAgICAgICAgQWRkU2VsZWN0b3JPcHRpb24oZ3JhcGhTZWxlY3RvciwgZW50cnkudGl0bGUsIGkpOwogICAgfSk7CgogICAgdmFyIGhhc011bHRpcGxlR3JhcGhzID0gKGNvbnRhaW5lcnNfanNvbi5sZW5ndGggPiAxKTsKICAgIGlmIChoYXNNdWx0aXBsZUdyYXBocykgewogICAgICAgIGdyYXBoU2VsZWN0b3Iuc3R5bGUuZGlzcGxheSA9ICIiOwogICAgfQoKICAgIHZhciBzZW5zU2VsZWN0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnU2Vuc01vZGVTZWxlY3RvcicpOwogICAgQWRkU2VsZWN0b3JPcHRpb24oc2Vuc1NlbGVjdG9yLCAiQ29tcGFyaXNvbjogcmVsYXRpdmUiLCAwKTsKICAgIEFkZFNlbGVjdG9yT3B0aW9uKHNlbnNTZWxlY3RvciwgIkNvbXBhcmlzb246IGFic29sdXRlIiwgMSk7CiAgICBpZiAodmlld01vZGUgPT0gVmlld01vZGVzLkRpZmYpIHsKICAgICAgICBzZW5zU2VsZWN0b3Iuc3R5bGUuZGlzcGxheSA9ICIiOwogICAgfQoKICAgIEluaXREaWZmVWkoKTsKfQoKZnVuY3Rpb24gU2hvd1VpKCkgewogICAgdmFyIHNwaW5uZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnU3Bpbm5lcicpOwogICAgdmFyIG1haW5WaWV3ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ01haW5WaWV3Jyk7CiAgICBzcGlubmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICBtYWluVmlldy5zdHlsZS5kaXNwbGF5ID0gIiI7Cn0KCmZ1bmN0aW9uIFNlbGVjdEdyYXBoKCkgewogICAgdmFyIGNvbnRhaW5lciA9IGNvbnRhaW5lcnNfanNvbltjb250YWluZXJJZF07CiAgICBVcGRhdGVEaWZmR3JhcGgoY29udGFpbmVyLnRpdGxlKTsKCiAgICBzZWxlY3RlZF9jb250YWluZXIgPSBjb250YWluZXI7CiAgICBzZWxlY3RlZF9ncmFwaCA9IHRvcERvd24gPyBjb250YWluZXIudG9wRG93biA6IGNvbnRhaW5lci5ib3R0b21VcDsKICAgIFVwZGF0ZUdyYXBoQ29sb3JzKHNlbGVjdGVkX2dyYXBoKTsKfQoKZnVuY3Rpb24gVXBkYXRlTm9kZVRleHRDb2xvcigpIHsKICAgIGNvbnN0IHJlY3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgicmVjdCIpOwogICAgcmVjdHMuZm9yRWFjaChyZWN0ID0+IHsKICAgICAgICBjb25zdCBmaWxsQ29sb3IgPSByZWN0LmdldEF0dHJpYnV0ZSgiZmlsbCIpOwogICAgICAgIGlmICghZmlsbENvbG9yKQogICAgICAgICAgICByZXR1cm47CiAgICAgICAgaWYgKHZpZXdNb2RlID09IFZpZXdNb2Rlcy5EaWZmKSB7CiAgICAgICAgICAgIGlmIChzZWFyY2hTdHIgJiYgZmlsbENvbG9yLmxlbmd0aCA8IG1pc21hdGNoQ29sb3IubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICByZWN0LnNldEF0dHJpYnV0ZSgic3R5bGUiLCAic3Ryb2tlOiAjREYwMEZGOyBzdHJva2Utd2lkdGg6IDI7Iik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZWN0LnNldEF0dHJpYnV0ZSgic3R5bGUiLCAiIik7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdmFyIGsgPSBOdW1iZXIoZmlsbENvbG9yLnN1YnN0cmluZygxLCAyKSk7CiAgICAgICAgdmFyIGlzRGFya0ZpbGwgPSAoayA8PSA0KTsKICAgICAgICBjb25zdCByciA9IGZpbGxDb2xvci5zdWJzdHJpbmcoMSwgMyk7CiAgICAgICAgY29uc3QgZ2cgPSBmaWxsQ29sb3Iuc3Vic3RyaW5nKDMsIDUpOwogICAgICAgIHZhciBpc0JsdWVGaWxsID0gKHJyID09IGdnKTsKICAgICAgICBjb25zdCBmb3JlaWduT2JqZWN0ID0gcmVjdC5uZXh0RWxlbWVudFNpYmxpbmc7CiAgICAgICAgaWYgKGZvcmVpZ25PYmplY3QpIHsKICAgICAgICAgICAgY29uc3QgZGl2ID0gZm9yZWlnbk9iamVjdC5xdWVyeVNlbGVjdG9yKCIuZDMtZmxhbWUtZ3JhcGgtbGFiZWwiKTsKICAgICAgICAgICAgaWYgKGRpdikgewogICAgICAgICAgICAgICAgZGl2LnN0eWxlLmNvbG9yID0gKGlzRGFya0ZpbGwgJiYgaXNCbHVlRmlsbCkgPyAid2hpdGUiIDogIiI7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9KTsKfQoKZnVuY3Rpb24gU2V0RmxhbWVHcmFwaERhdGEoKSB7CiAgICBmbGFtZUdyYXBoLmludmVydGVkKCF0b3BEb3duKTsKICAgIGQzLnNlbGVjdCgiI2NoYXJ0IikKICAgIC5kYXR1bShzZWxlY3RlZF9ncmFwaCkKICAgIC5jYWxsKGZsYW1lR3JhcGgpOwogICAgVXBkYXRlTm9kZVRleHRDb2xvcigpOwp9CgpmdW5jdGlvbiBPblNlbGVjdEdyYXBoKCkgewogICAgdmFyIGNvbWJvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIkdyYXBoU2VsZWN0b3IiKTsKICAgIGNvbnRhaW5lcklkID0gY29tYm8uc2VsZWN0ZWRJbmRleDsKICAgIFNlbGVjdEdyYXBoKCk7CiAgICBTZXRGbGFtZUdyYXBoRGF0YSgpOwp9CgpmdW5jdGlvbiBPblNlbGVjdFNlbnNNb2RlKCkgewogICAgVXBkYXRlRGlmZkNvbG9ycygpOwp9CgovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KZnVuY3Rpb24gR2V0U2VsZWN0ZWRVbml0c0Zvcm1hdCgpIHsKICAgIHZhciByZXMgPSB7fTsKICAgIHJlcy51bml0cyA9IHNlbGVjdGVkX2NvbnRhaW5lci51bml0czsKICAgIHJlcy5zZW5zQWJzTWF4ID0gMTAwOwogICAgcmVzLnRvdGFsID0gKHZpZXdNb2RlID09IFZpZXdNb2Rlcy5EZWZhdWx0KSA/ICIsZCIgOiAiLC4xZiI7CiAgICByZXMuYXZnID0gIiwuMmYiOwogICAgaWYgKHJlcy51bml0cyA9PSAibXMiKSB7CiAgICAgICAgcmVzLnNlbnNBYnNNYXggPSAxMDsKICAgICAgICByZXMudG90YWwgPSAiLjNmIjsKICAgICAgICByZXMuYXZnID0gIi4zZiI7CiAgICB9IGVsc2UgaWYgKHJlcy51bml0cyA9PSAiYnl0ZXMiKSB7CiAgICAgICAgcmVzLnNlbnNBYnNNYXggPSAxMDAwMDsKICAgIH0KICAgIHJldHVybiByZXM7Cn0KCnZhciBsYWJlbEhhbmRsZXIgPSBmdW5jdGlvbiAoZCkgewogICAgdmFyIGZvcm1hdCA9IEdldFNlbGVjdGVkVW5pdHNGb3JtYXQoKTsKCiAgICBmdW5jdGlvbiBHZXRMYWJlbExpbmVTdHlsZShzaWRlSWQpIHsKICAgICAgICBjb25zdCB0aXRsZXMgPSBbJ0xlZnQ6Jm5ic3A7Jm5ic3A7JywgJ1JpZ2h0OiddOwogICAgICAgIGNvbnN0IGNvbG9ycyA9IFsnIzMyZDIzMicsICcjNTI1MmQyJ107CiAgICAgICAgdmFyIG90aGVySWQgPSAxIC0gc2lkZUlkOwogICAgICAgIHZhciBzdHlsZSA9ICIiOwogICAgICAgIHZhciBwb3N0Zml4ID0gIiI7ICAgICAgICAgICAKICAgICAgICB2YXIgc2lkZVZhbHVlcyA9IGQuZGF0YS5zaWRlVmFsdWVzW3NpZGVJZF07CiAgICAgICAgdmFyIG90aGVyU2lkZVZhbHVlcyA9IGQuZGF0YS5zaWRlVmFsdWVzW290aGVySWRdOwogICAgICAgIGlmIChzaWRlVmFsdWVzLmlzSGlnaGxpZ2h0ZWQpIHsKICAgICAgICAgICAgc3R5bGUgPSAnIHN0eWxlPSJjb2xvcjp3aGl0ZTtiYWNrZ3JvdW5kLWNvbG9yOicgKyBjb2xvcnNbc2lkZUlkXSArICc7Iic7CiAgICAgICAgICAgIHBvc3RmaXggPSAiICYjeDJCNjA7ICI7CiAgICAgICAgICAgIGlmIChvdGhlclNpZGVWYWx1ZXMuZGlzcGxheVZhbHVlID09IDAgJiYgc2lkZVZhbHVlcy5kaXNwbGF5VmFsdWUgPiAwKSB7CiAgICAgICAgICAgICAgICBwb3N0Zml4ICs9ICJleGlzdHMgb25seSBoZXJlIjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBkaWZmSGlnaGVyID0gc2lkZVZhbHVlcy5kaXNwbGF5VmFsdWUgLSBvdGhlclNpZGVWYWx1ZXMuZGlzcGxheVZhbHVlOwogICAgICAgICAgICAgICAgdmFyIGRpZmZIaWdoZXJTdHIgPSBkMy5mb3JtYXQoZm9ybWF0LnRvdGFsKShkaWZmSGlnaGVyKSArICgnICcgKyBmb3JtYXQudW5pdHMpLnRyaW1FbmQoKTsKICAgICAgICAgICAgICAgIHZhciBwZXJjZW50SGlnaGVyID0gKHNpZGVWYWx1ZXMuZGlzcGxheVZhbHVlIC8gb3RoZXJTaWRlVmFsdWVzLmRpc3BsYXlWYWx1ZSAtIDEpICogMTAwOwogICAgICAgICAgICAgICAgdmFyIHBlcmNlbnRIaWdoZXJTdHIgPSAocGVyY2VudEhpZ2hlciA+PSAxMDAwMCkgPyAiTVVDSCIgOiAoZDMuZm9ybWF0KCcuMmYnKShwZXJjZW50SGlnaGVyKSArICIlIik7CiAgICAgICAgICAgICAgICBwb3N0Zml4ICs9ICJ0b3RhbCBpcyAiICsgcGVyY2VudEhpZ2hlclN0ciArICIgKCIgKyBkaWZmSGlnaGVyU3RyICsgIikgaGlnaGVyIjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICB2YXIgcHJlZml4ID0gJzxzcGFuJyArIHN0eWxlICsgJz4nICsgdGl0bGVzW3NpZGVJZF0gKyAnPC9zcGFuPiZuYnNwOyc7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcHJlZml4OiBwcmVmaXgsCiAgICAgICAgICAgIHBvc3RmaXg6IHBvc3RmaXgKICAgICAgICB9OwogICAgfQoKICAgIGZ1bmN0aW9uIENvbXBvc2VMYWJlbExpbmUocHJlZml4LCBwb3N0Zml4LCBwZXJjZW50LCB0b3RhbCwgYXZnKSB7CiAgICAgICAgcmV0dXJuIHByZWZpeCArCiAgICAgICAgICAgIGQzLmZvcm1hdCgnLjJmJykocGVyY2VudCkgKyAnJSB8ICcgKwogICAgICAgICAgICBkMy5mb3JtYXQoZm9ybWF0LnRvdGFsKSh0b3RhbCkgKyAoJyAnICsgZm9ybWF0LnVuaXRzKS50cmltRW5kKCkgKyAnIHRvdGFsIHwgJyArCiAgICAgICAgICAgIGQzLmZvcm1hdChmb3JtYXQuYXZnKShhdmcpICsgKCcgJyArIGZvcm1hdC51bml0cykudHJpbUVuZCgpICsgJyBhdmcnICsKICAgICAgICAgICAgcG9zdGZpeDsKICAgIH0KCiAgICB2YXIgdGlQb3N0Zml4ID0gKHZpZXdNb2RlID09IFZpZXdNb2Rlcy5EZWZhdWx0KSA/ICgnLCBUaW1lciBJbmRleDogJyArIGQuZGF0YS50aW1lckluZGV4KSA6ICIiOwogICAgdmFyIGlkZW50aWZpZXIgPSBkLmRhdGEubmFtZSArICcgKEdyb3VwIE5hbWU6ICcgKyBkLmRhdGEuZ3JvdXBOYW1lICsgdGlQb3N0Zml4ICsgJyknOwoKICAgIGlmICh2aWV3TW9kZSA9PSBWaWV3TW9kZXMuRGlmZiB8fCB2aWV3TW9kZSA9PSBWaWV3TW9kZXMuQ29tYm8pIHsKICAgICAgICBjb25zdCBpc0RpZmYgPSAodmlld01vZGUgPT0gVmlld01vZGVzLkRpZmYpOwogICAgICAgIGNvbnN0IHNpZGVzID0gaXNEaWZmID8gMiA6IDE7CiAgICAgICAgZm9yICh2YXIgc2lkZUlkID0gMDsgc2lkZUlkIDwgc2lkZXM7IHNpZGVJZCsrKSB7CiAgICAgICAgICAgIHZhciByb290RGlzcGxheVZhbHVlID0gc2VsZWN0ZWRfZ3JhcGguc2lkZVZhbHVlc1tzaWRlSWRdLmRpc3BsYXlWYWx1ZTsKICAgICAgICAgICAgdmFyIHNpZGVWYWx1ZXMgPSBkLmRhdGEuc2lkZVZhbHVlc1tzaWRlSWRdOwogICAgICAgICAgICB2YXIgc3R5bGUgPSBpc0RpZmYgPyBHZXRMYWJlbExpbmVTdHlsZShzaWRlSWQpIDogeyBwcmVmaXg6ICIiLCBwb3N0Zml4OiAiIiB9OwogICAgICAgICAgICB2YXIgcGVyY2VudCA9IDEwMCAqIHNpZGVWYWx1ZXMuZGlzcGxheVZhbHVlIC8gcm9vdERpc3BsYXlWYWx1ZTsKICAgICAgICAgICAgdmFyIHRvdGFsID0gc2lkZVZhbHVlcy5kaXNwbGF5VmFsdWU7CiAgICAgICAgICAgIHZhciBhdmcgPSBzaWRlVmFsdWVzLmRpc3BsYXlDb3VudCA+IDAgPyBzaWRlVmFsdWVzLmRpc3BsYXlWYWx1ZSAvIHNpZGVWYWx1ZXMuZGlzcGxheUNvdW50IDogMDsKICAgICAgICAgICAgaWRlbnRpZmllciArPSAnPGJyLz4nOwogICAgICAgICAgICBpZGVudGlmaWVyICs9IENvbXBvc2VMYWJlbExpbmUoc3R5bGUucHJlZml4LCBzdHlsZS5wb3N0Zml4LCBwZXJjZW50LCB0b3RhbCwgYXZnKTsKICAgICAgICB9CiAgICAgICAgaWRlbnRpZmllciArPSAnPGJyLz4nOwogICAgICAgIGlkZW50aWZpZXIgKz0gJ3BlciAnICsgbm9ybWFsaXplZE51bWJlck9mRnJhbWVzICsgJyBmcmFtZScgKyAobm9ybWFsaXplZE51bWJlck9mRnJhbWVzID4gMSA/ICJzIiA6ICIiKTsKICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHBlcmNlbnQgPSAxMDAgKiAoZC54MSAtIGQueDApOwogICAgICAgIHZhciB0b3RhbCA9IGQuZGF0YS5kaXNwbGF5VmFsdWU7CiAgICAgICAgdmFyIGF2ZyA9IGQuZGF0YS5kaXNwbGF5VmFsdWUgLyBkLmRhdGEuZGlzcGxheUNvdW50OwogICAgICAgIGlkZW50aWZpZXIgKz0gJzxici8+JzsKICAgICAgICBpZGVudGlmaWVyICs9IENvbXBvc2VMYWJlbExpbmUoIiIsICIiLCBwZXJjZW50LCB0b3RhbCwgYXZnKTsKICAgIH0KCiAgICByZXR1cm4gaWRlbnRpZmllcjsKfQoKLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCmZ1bmN0aW9uIFRpbWVTdHJpbmcoRGlmZikgewogICAgdmFyIERpZmZTdHJpbmcgPSAiMCBzZWMiOwogICAgdmFyIERpZmZUYWJsZSA9IFsxLCA2MCwgNjAqNjAsIDYwKjYwKjI0XTsKICAgIHZhciBEaWZmTmFtZVRhYmxlID0gWyJzZWMiLCAibWluIiwgImhyIiwgImRheSJdOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBEaWZmVGFibGUubGVuZ3RoOyArK2kpIHsKICAgICAgICBpZihEaWZmID49IERpZmZUYWJsZVtpXSkgewogICAgICAgICAgICB2YXIgdmFsID0gRGlmZiAvIERpZmZUYWJsZVtpXTsKICAgICAgICAgICAgdmFyIGRpZmZOYW1lID0gRGlmZk5hbWVUYWJsZVtpXTsKICAgICAgICAgICAgRGlmZlN0cmluZyA9IE1hdGguZmxvb3IodmFsKSArICIgIiArIGRpZmZOYW1lOwogICAgICAgICAgICBpZiAoZGlmZk5hbWUgPT0gImRheSIgJiYgdmFsID4gMSkgewogICAgICAgICAgICAgICAgRGlmZlN0cmluZyArPSAncyc7IC8vZGF5cwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgcmV0dXJuIERpZmZTdHJpbmc7Cn0KCmZ1bmN0aW9uIEdldFRpbWVJbmZvKHV0Yywgbm9Qb3N0Zml4KSB7CiAgICB2YXIgcmVzID0ge307CiAgICB2YXIgQ3VycmVudERhdGUgPSBEYXRlLm5vdygpIC8gMTAwMDsKICAgIHZhciBEaWZmID0gQ3VycmVudERhdGUgLSB1dGM7CiAgICB2YXIgcG9zdGZpeCA9IG5vUG9zdGZpeCA/ICIiIDogIiBhZ28iOwogICAgcmVzLmRpZmZTdHIgPSBUaW1lU3RyaW5nKERpZmYpICsgcG9zdGZpeDsKICAgIHJlcy5kYXRlU3RyID0gbmV3IERhdGUodXRjICogMTAwMCkudG9Mb2NhbGVTdHJpbmcoKTsKICAgIHJldHVybiByZXM7Cn0KCmZ1bmN0aW9uIEl0ZXJhdGVTb3VyY2VDb250YWluZXJzKGZ1bmMpIHsKICAgIHZhciBkZWZhdWx0VGl0bGUgPSBzb3VyY2VfY29udGFpbmVyc19qc29uWzBdLnRpdGxlOwogICAgc291cmNlX2NvbnRhaW5lcnNfanNvbi5mb3JFYWNoKHNvdXJjZV9jb250YWluZXIgPT4gewogICAgICAgIGlmIChzb3VyY2VfY29udGFpbmVyLnRpdGxlICE9IGRlZmF1bHRUaXRsZSkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIGZ1bmMoc291cmNlX2NvbnRhaW5lcik7CiAgICB9KTsKfQoKZnVuY3Rpb24gU2V0UGxhY2VJZFRleHQoKSB7CiAgICBmdW5jdGlvbiBHZXRQbGFjZUlkSW5mbyhzaWRlSWQpIHsKICAgICAgICBjb25zdCBwbGFjZUlkU2V0ID0gbmV3IFNldCgpOwogICAgICAgIEl0ZXJhdGVTb3VyY2VDb250YWluZXJzKHNvdXJjZV9jb250YWluZXIgPT4gewogICAgICAgICAgICBpZiAoc291cmNlX2NvbnRhaW5lci5kdW1wSW5mby5sb2NhbEdyb3VwSWQgIT0gc2lkZUlkKQogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICBwbGFjZUlkU2V0LmFkZChzb3VyY2VfY29udGFpbmVyLmR1bXBJbmZvLnBsYWNlSWQpOwogICAgICAgIH0pOwogICAgICAgIHZhciByZXMgPSB7fTsKICAgICAgICB2YXIgaXNTaW5nbGVJZCA9IChwbGFjZUlkU2V0LnNpemUgPT0gMSk7CiAgICAgICAgcmVzLnBsYWNlSWRUZXh0ID0gaXNTaW5nbGVJZCA/IFN0cmluZyhwbGFjZUlkU2V0LnZhbHVlcygpLm5leHQoKS52YWx1ZSkgOiAnbWl4ZWQnOwogICAgICAgIHJlcy5wbGFjZUlkVXJsID0gKGlzU2luZ2xlSWQgJiYgcmVzLnBsYWNlSWRUZXh0ICE9ICcwJykgPyAnaHR0cHM6Ly93d3cucm9ibG94LmNvbS9nYW1lcy8nICsgcmVzLnBsYWNlSWRUZXh0IDogJyMnOwogICAgICAgIHJldHVybiByZXM7CiAgICB9CgogICAgZnVuY3Rpb24gR2V0UGxhY2VJZEh0bWwoc2lkZUlkLCBiZ0NvbG9yLCB3aGl0ZVByZWZpeCwgcHJlZml4LCB1cmwsIHRleHQpIHsKICAgICAgICBjb25zdCBpZHMgPSBbJ2xlZnRUaXRsZScsICdyaWdodFRpdGxlJ107CiAgICAgICAgY29uc3QgcHJlZml4Q29sb3IgPSB3aGl0ZVByZWZpeCA/ICd3aGl0ZScgOiAnYmxhY2snOwogICAgICAgIHZhciBzdHlsZSA9IGJnQ29sb3IgPyAoJ2NvbG9yOicgKyBwcmVmaXhDb2xvciArICc7YmFja2dyb3VuZC1jb2xvcjonICsgYmdDb2xvciArICc7JykgOiAnYm9yZGVyOiAxcHggc29saWQgYmxhY2s7JzsKICAgICAgICBzdHlsZSArPSAnY3Vyc29yOiBkZWZhdWx0Oyc7CiAgICAgICAgdmFyIGh0bWwgPSAnPHNwYW4gaWQ9IicgKyBpZHNbc2lkZUlkXSArICciIHN0eWxlPSInICsgc3R5bGUgKyAnIj4mbmJzcDsnICsgcHJlZml4ICsgJyZuYnNwOzwvc3Bhbj4gUGxhY2VJZDo8YSBocmVmPSInICsgdXJsICsgJyI+JyArIHRleHQgKyAnPC9hPic7CiAgICAgICAgcmV0dXJuIGh0bWw7CiAgICB9CgogICAgdmFyIGh0bWwgPSAnJzsKICAgIHZhciBwaWQwID0gR2V0UGxhY2VJZEluZm8oMCk7CiAgICB2YXIgcGlkMSA9IEdldFBsYWNlSWRJbmZvKDEpOwogICAgaWYgKHZpZXdNb2RlID09IFZpZXdNb2Rlcy5EaWZmKSB7CiAgICAgICAgaHRtbCArPSBHZXRQbGFjZUlkSHRtbCgwLCAnIzMyZDIzMicsIHRydWUsICdMZWZ0JywgcGlkMC5wbGFjZUlkVXJsLCBwaWQwLnBsYWNlSWRUZXh0KTsKICAgICAgICBodG1sICs9ICcgJm5ic3A7ICc7CiAgICAgICAgaHRtbCArPSBHZXRQbGFjZUlkSHRtbCgxLCAnIzUyNTJkMicsIHRydWUsICdSaWdodCcsIHBpZDEucGxhY2VJZFVybCwgcGlkMS5wbGFjZUlkVGV4dCk7CiAgICB9IGVsc2UgaWYgKHZpZXdNb2RlID09IFZpZXdNb2Rlcy5Db21ibykgewogICAgICAgIGh0bWwgKz0gR2V0UGxhY2VJZEh0bWwoMCwgJyNkMmQyZDInLCBmYWxzZSwgJ0R1bXBzJywgcGlkMC5wbGFjZUlkVXJsLCBwaWQwLnBsYWNlSWRUZXh0KTsKICAgIH0gZWxzZSB7CiAgICAgICAgaHRtbCArPSBHZXRQbGFjZUlkSHRtbCgwLCAiIiwgZmFsc2UsICdEdW1wJywgcGlkMC5wbGFjZUlkVXJsLCBwaWQwLnBsYWNlSWRUZXh0KTsKICAgIH0KICAgIGR1bXBzSW5mby5pbm5lckhUTUwgPSBodG1sOwoKICAgIHZhciBsZWZ0VGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibGVmdFRpdGxlIik7CiAgICB2YXIgcmlnaHRUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyaWdodFRpdGxlIik7CiAgICBpZiAobGVmdFRpdGxlKSB7CiAgICAgICAgbGVmdFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBmdW5jdGlvbihldmVudCkgewogICAgICAgICAgICBVcGRhdGVUaXRsZUxhYmVsKDApOwogICAgICAgIH0pOwogICAgICAgIGxlZnRUaXRsZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICAgICAgQ2xlYXJEZXRhaWxzTGFiZWwoKTsKICAgICAgICB9KTsKICAgIH0KICAgIGlmIChyaWdodFRpdGxlKSB7CiAgICAgICAgcmlnaHRUaXRsZS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgZnVuY3Rpb24oZXZlbnQpIHsKICAgICAgICAgICAgVXBkYXRlVGl0bGVMYWJlbCgxKTsKICAgICAgICB9KTsKICAgICAgICByaWdodFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCBmdW5jdGlvbihldmVudCkgewogICAgICAgICAgICBDbGVhckRldGFpbHNMYWJlbCgpOwogICAgICAgIH0pOwogICAgfQp9CgAAAAAAAAAKZnVuY3Rpb24gU2V0VGltZVRleHQoKSB7CiAgICBmdW5jdGlvbiBHZXRDYXB0dXJlVGltZUluZm8oKSB7CiAgICAgICAgY29uc3QgdGltZXMgPSBbXTsKICAgICAgICBJdGVyYXRlU291cmNlQ29udGFpbmVycyhzb3VyY2VfY29udGFpbmVyID0+IHsKICAgICAgICAgICAgdGltZXMucHVzaChzb3VyY2VfY29udGFpbmVyLmR1bXBJbmZvLnV0Y0NhcHR1cmVUaW1lKTsKICAgICAgICB9KTsKICAgICAgICB2YXIgcmVzID0ge307CiAgICAgICAgcmVzLm1pblRpbWUgPSBNYXRoLm1pbiguLi50aW1lcyk7CiAgICAgICAgcmVzLm1heFRpbWUgPSBNYXRoLm1heCguLi50aW1lcyk7CiAgICAgICAgcmV0dXJuIHJlczsKICAgIH0KCiAgICBmdW5jdGlvbiBHZXRHcmFwaHNDb3VudChzaWRlSWQpIHsKICAgICAgICB2YXIgcmVzID0gMDsKICAgICAgICBJdGVyYXRlU291cmNlQ29udGFpbmVycyhzb3VyY2VfY29udGFpbmVyID0+IHsKICAgICAgICAgICAgaWYgKHNvdXJjZV9jb250YWluZXIuZHVtcEluZm8ubG9jYWxHcm91cElkICE9IHNpZGVJZCkKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgcmVzKys7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIHJlczsKICAgIH0KCiAgICB2YXIgY2FwdHVyZVRpbWVJbmZvID0gR2V0Q2FwdHVyZVRpbWVJbmZvKCk7CiAgICB2YXIgbWluVGltZUluZm8gPSBHZXRUaW1lSW5mbyhjYXB0dXJlVGltZUluZm8ubWluVGltZSk7CiAgICB2YXIgbWF4VGltZUluZm8gPSBHZXRUaW1lSW5mbyhjYXB0dXJlVGltZUluZm8ubWF4VGltZSk7CiAgICB2YXIgY291bnRTaWRlMCA9IEdldEdyYXBoc0NvdW50KDApOwogICAgdmFyIGNvdW50U2lkZTEgPSBHZXRHcmFwaHNDb3VudCgxKTsKCiAgICB2YXIgbGluZTEgPSAnJzsKICAgIHZhciBsaW5lMiA9ICcnOwogICAgaWYgKHZpZXdNb2RlID09IFZpZXdNb2Rlcy5EaWZmIHx8IHZpZXdNb2RlID09IFZpZXdNb2Rlcy5Db21ibykgewogICAgICAgIGNvbnN0IGlzRGlmZiA9ICh2aWV3TW9kZSA9PSBWaWV3TW9kZXMuRGlmZik7CiAgICAgICAgY29uc3QgZHVtcHNDb3VudCA9IGlzRGlmZiA/IGNvdW50U2lkZTAgKyAiKyIgKyBjb3VudFNpZGUxIDogY291bnRTaWRlMDsKICAgICAgICBsaW5lMSA9ICIjIG9mIGR1bXBzOiAiICsgZHVtcHNDb3VudCArICImbmJzcDsgQ29sbGVjdGlvbiB0aW1lIHJhbmdlOiAiICsgbWluVGltZUluZm8uZGlmZlN0ciArICIgJm1kYXNoOyAiICsgbWF4VGltZUluZm8uZGlmZlN0cjsKICAgICAgICBsaW5lMiA9IG1pblRpbWVJbmZvLmRhdGVTdHIgKyAiICZtZGFzaDsgIiArIG1heFRpbWVJbmZvLmRhdGVTdHI7CiAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IG51bWJlck9mRnJhbWVzID0gc291cmNlX2NvbnRhaW5lcnNfanNvblswXS5kdW1wSW5mby5udW1iZXJPZkZyYW1lczsKICAgICAgICBsaW5lMSA9ICIjIG9mIGZyYW1lczogIiArIG51bWJlck9mRnJhbWVzICsgIiZuYnNwOyBDb2xsZWN0aW9uIHRpbWU6ICIgKyBtaW5UaW1lSW5mby5kaWZmU3RyOwogICAgICAgIGxpbmUyID0gbWluVGltZUluZm8uZGF0ZVN0cjsKICAgIH0KICAgIGNvbGxlY3Rpb25UaW1lLmlubmVySFRNTCA9IGxpbmUxOwogICAgY29sbGVjdGlvblRpbWVBZ28uaW5uZXJIVE1MID0gbGluZTI7Cn0KCmZ1bmN0aW9uIFVwZGF0ZVRpdGxlTGFiZWwoc2lkZUlkKSB7CiAgICB2YXIgbGFiZWwgPSAnJzsKICAgIGxhYmVsICs9ICc8dGFibGUgc3R5bGU9IndpZHRoOjEwMCU7Ij5cbic7CiAgICBsYWJlbCArPSAnPHRoZWFkPlxuJzsKICAgIGxhYmVsICs9ICc8dHI+XG4nOwogICAgbGFiZWwgKz0gJyAgICA8dGg+RHVtcCBmaWxlIG5hbWU8L3RoPlxuJzsKICAgIGxhYmVsICs9ICcgICAgPHRoPk51bWJlciBvZiBmcmFtZXM8L3RoPlxuJzsKICAgIGxhYmVsICs9ICcgICAgPHRoPlBsYWNlIElEPC90aD5cbic7CiAgICBsYWJlbCArPSAnICAgIDx0aD5EYXRlPC90aD5cbic7CiAgICBsYWJlbCArPSAnICAgIDx0aD5BZ2U8L3RoPlxuJzsKICAgIGxhYmVsICs9ICc8L3RyPlxuJzsKICAgIGxhYmVsICs9ICc8L3RoZWFkPlxuJzsKICAgIGxhYmVsICs9ICc8dGJvZHk+XG4nOwoKICAgIEl0ZXJhdGVTb3VyY2VDb250YWluZXJzKHNvdXJjZV9jb250YWluZXIgPT4gewogICAgICAgIGlmIChzb3VyY2VfY29udGFpbmVyLmR1bXBJbmZvLmxvY2FsR3JvdXBJZCAhPSBzaWRlSWQpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB2YXIgZGkgPSBzb3VyY2VfY29udGFpbmVyLmR1bXBJbmZvOwogICAgICAgIHZhciB0aW1lSW5mbyA9IEdldFRpbWVJbmZvKGRpLnV0Y0NhcHR1cmVUaW1lKTsKICAgICAgICBsYWJlbCArPSAnPHRyPlxuJzsKICAgICAgICBsYWJlbCArPSAnPHRkPicgKyBkaS5maWxlTmFtZSArICc8L3RkPic7CiAgICAgICAgbGFiZWwgKz0gJzx0ZD4nICsgZGkubnVtYmVyT2ZGcmFtZXMgKyAnPC90ZD4nOwogICAgICAgIGxhYmVsICs9ICc8dGQ+JyArIGRpLnBsYWNlSWQgKyAnPC90ZD4nOwogICAgICAgIGxhYmVsICs9ICc8dGQ+JyArIHRpbWVJbmZvLmRhdGVTdHIgKyAnPC90ZD4nOwogICAgICAgIGxhYmVsICs9ICc8dGQ+JyArIHRpbWVJbmZvLmRpZmZTdHIgKyAnPC90ZD4nOwogICAgICAgIGxhYmVsICs9ICc8L3RyPlxuJzsKICAgIH0pOwoKICAgIGxhYmVsICs9ICc8L3Rib2R5PlxuJzsKICAgIGxhYmVsICs9ICI8L3RhYmxlPlxuIjsKICAgIGRldGFpbHMuaW5uZXJIVE1MID0gbGFiZWw7Cn0KCmZ1bmN0aW9uIE1ha2VHcmFkaWVudFRleHQoc3RyLCByTWFzaywgZ01hc2ssIGJNYXNrKSB7CiAgICB2YXIgcmVzID0gJyc7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBjb2VmID0gMSAtIGkgLyBzdHIubGVuZ3RoOwogICAgICAgIHZhciBjb2xvciA9IFJnYkNvZWZmc1RvQ29sb3IoY29lZiAqIHJNYXNrLCBjb2VmICogZ01hc2ssIGNvZWYgKiBiTWFzayk7CiAgICAgICAgdmFyIGMgPSBzdHJbaV07CiAgICAgICAgcmVzICs9ICc8c3BhbiBzdHlsZT0iY29sb3I6JyArIGNvbG9yICsgJzsiPicgKyBjICsgJzwvc3Bhbj4nOwogICAgfQogICAgcmV0dXJuIHJlczsKfQoKZnVuY3Rpb24gSW5pdFBhZ2VIZWFkZXIoKSB7CiAgICB2YXIgdGl0bGVIdG1sID0gJ01pY3JvcHJvZmlsZXIgRmxhbWVncmFwaCc7CiAgICBpZiAodmlld01vZGUgPT0gVmlld01vZGVzLkRpZmYpIHsKICAgICAgICB0aXRsZUh0bWwgPSBNYWtlR3JhZGllbnRUZXh0KCdEaWZmJywgMSwgMCwgMSkgKyAnICcgKyBNYWtlR3JhZGllbnRUZXh0KCdGbGFtZWdyYXBoJywgMSwgMSwgMCk7CiAgICB9IGVsc2UgaWYgKHZpZXdNb2RlID09IFZpZXdNb2Rlcy5Db21ibykgewogICAgICAgIHRpdGxlSHRtbCA9ICdDb21ibyBGbGFtZWdyYXBoJzsKICAgIH0KICAgIHBsYWNlSWRUaXRsZS5pbm5lckhUTUwgPSB0aXRsZUh0bWw7CiAgICAgICAgCiAgICBTZXRQbGFjZUlkVGV4dCgpOwogICAgU2V0VGltZVRleHQoKTsKfQoKZnVuY3Rpb24gRGV0ZWN0Vmlld01vZGUoKSB7CiAgICBjb25zdCBsb2NhbElkc1NldCA9IG5ldyBTZXQoKTsKICAgIGNvbnN0IGxvY2FsR3JvdXBJZHNTZXQgPSBuZXcgU2V0KCk7CiAgICBJdGVyYXRlU291cmNlQ29udGFpbmVycyhzb3VyY2VfY29udGFpbmVyID0+IHsKICAgICAgICBsb2NhbElkc1NldC5hZGQoc291cmNlX2NvbnRhaW5lci5kdW1wSW5mby5sb2NhbElkKTsKICAgICAgICBsb2NhbEdyb3VwSWRzU2V0LmFkZChzb3VyY2VfY29udGFpbmVyLmR1bXBJbmZvLmxvY2FsR3JvdXBJZCk7CiAgICB9KTsKICAgIGNvbnN0IHNpbmdsZUxvY2FsSWQgPSAobG9jYWxJZHNTZXQuc2l6ZSA9PSAxKTsKICAgIGNvbnN0IHNpbmdsZUxvY2FsR3JvdXBJZCA9IChsb2NhbEdyb3VwSWRzU2V0LnNpemUgPT0gMSk7CgogICAgdmlld01vZGUgPSBWaWV3TW9kZXMuRGVmYXVsdDsKICAgIGlmICghc2luZ2xlTG9jYWxHcm91cElkKSB7CiAgICAgICAgdmlld01vZGUgPSBWaWV3TW9kZXMuRGlmZjsKICAgIH0gZWxzZSBpZiAoIXNpbmdsZUxvY2FsSWQpIHsKICAgICAgICB2aWV3TW9kZSA9IFZpZXdNb2Rlcy5Db21ibzsKICAgIH0KfQoKLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCmZ1bmN0aW9uIE5vcm1hbGl6ZUJ5TnVtYmVyT2ZGcmFtZXModmFsLCBudW1iZXJPZkZyYW1lcykgewogICAgdmFyIHJlcyA9IChudW1iZXJPZkZyYW1lcyA+IDApID8gdmFsICogKG5vcm1hbGl6ZWROdW1iZXJPZkZyYW1lcyAvIG51bWJlck9mRnJhbWVzKSA6IDA7CiAgICByZXR1cm4gcmVzOwp9CgpmdW5jdGlvbiBQcm9jZXNzRGlmZkdyYXBoTm9kZShpbl9ub2RlLCBoYXNoLCBzaWRlSWQsIG51bWJlck9mRnJhbWVzKSB7CiAgICB2YXIgb3V0Tm9kZTsKICAgIHZhciBpc091dE5vZGVOZXc7CgogICAgdmFyIGRpc3BsYXlWYWx1ZU5vcm1hbGl6ZWQgPSBOb3JtYWxpemVCeU51bWJlck9mRnJhbWVzKGluX25vZGUuZGlzcGxheVZhbHVlLCBudW1iZXJPZkZyYW1lcyk7CiAgICB2YXIgZGlzcGxheUNvdW50Tm9ybWFsaXplZCA9IE5vcm1hbGl6ZUJ5TnVtYmVyT2ZGcmFtZXMoaW5fbm9kZS5kaXNwbGF5Q291bnQsIG51bWJlck9mRnJhbWVzKTsKCiAgICB2YXIgb3V0Tm9kZUNhY2hlZCA9IGhhc2gybm9kZVtoYXNoXTsKICAgIGlmIChvdXROb2RlQ2FjaGVkKSB7CiAgICAgICAgaXNPdXROb2RlTmV3ID0gZmFsc2U7CiAgICAgICAgb3V0Tm9kZSA9IG91dE5vZGVDYWNoZWQ7CiAgICB9IGVsc2UgewogICAgICAgIGlzT3V0Tm9kZU5ldyA9IHRydWU7CiAgICAgICAgb3V0Tm9kZSA9IHsKICAgICAgICAgICAgbmFtZTogaW5fbm9kZS5uYW1lLAogICAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgICAgc2lkZVZhbHVlczogWwogICAgICAgICAgICAgICAgeyBkaXNwbGF5VmFsdWU6IDAsIGRpc3BsYXlDb3VudDogMCwgaXNIaWdobGlnaHRlZDogZmFsc2UgfSwKICAgICAgICAgICAgICAgIHsgZGlzcGxheVZhbHVlOiAwLCBkaXNwbGF5Q291bnQ6IDAsIGlzSGlnaGxpZ2h0ZWQ6IGZhbHNlIH0sCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGNvbG9yOiBpbl9ub2RlLmNvbG9yLAogICAgICAgICAgICBncm91cE5hbWU6IGluX25vZGUuZ3JvdXBOYW1lLAogICAgICAgICAgICB0aW1lckluZGV4OiAgaW5fbm9kZS50aW1lckluZGV4LAogICAgICAgICAgICBjaGlsZHJlbjogW10KICAgICAgICB9OwogICAgICAgIGhhc2gybm9kZVtoYXNoXSA9IG91dE5vZGU7CiAgICB9CiAgICBvdXROb2RlLnNpZGVWYWx1ZXNbc2lkZUlkXS5kaXNwbGF5VmFsdWUgKz0gZGlzcGxheVZhbHVlTm9ybWFsaXplZDsKICAgIG91dE5vZGUuc2lkZVZhbHVlc1tzaWRlSWRdLmRpc3BsYXlDb3VudCArPSBkaXNwbGF5Q291bnROb3JtYWxpemVkOwoKICAgIGluX25vZGUuY2hpbGRyZW4uZm9yRWFjaChpbl9ub2RlX2NoaWxkID0+IHsKICAgICAgICB2YXIgY2hpbGRfaGFzaCA9IGhhc2ggKyAifCIgKyBpbl9ub2RlX2NoaWxkLm5hbWU7CiAgICAgICAgdmFyIHByb2Nlc3NlZF9jaGlsZCA9IFByb2Nlc3NEaWZmR3JhcGhOb2RlKGluX25vZGVfY2hpbGQsIGNoaWxkX2hhc2gsIHNpZGVJZCwgbnVtYmVyT2ZGcmFtZXMpOwogICAgICAgIGlmIChwcm9jZXNzZWRfY2hpbGQuaXNPdXROb2RlTmV3KSB7CiAgICAgICAgICAgIG91dE5vZGUuY2hpbGRyZW4ucHVzaChwcm9jZXNzZWRfY2hpbGQub3V0Tm9kZSk7CiAgICAgICAgfQogICAgfSk7CgogICAgcmV0dXJuIHsKICAgICAgICBvdXROb2RlOiBvdXROb2RlLAogICAgICAgIGlzT3V0Tm9kZU5ldzogaXNPdXROb2RlTmV3CiAgICB9Owp9CgovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KZnVuY3Rpb24gQ2xhbXAodiwgYSwgYikgewogICAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KHYsIGEpLCBiKTsKfQoKZnVuY3Rpb24gQ29sb3JDb2VmVG9IZXgoY29lZikgewogICAgdmFyIHZNaW4gPSAzMDsKICAgIHZhciB2TWF4ID0gKGNvZWYgPiAwID8gMTkwIDogMjEwKTsKICAgIHZhciB2RGVsdGEgPSB2TWF4IC0gdk1pbjsKICAgIHZhciBjb2VmMjU1ID0gQ2xhbXAodk1heCAtIE1hdGguZmxvb3IoY29lZiAqIHZEZWx0YSksIHZNaW4sIHZNYXgpOwogICAgbGV0IGNvZWZIZXggPSBjb2VmMjU1LnRvU3RyaW5nKDE2KTsKICAgIGlmIChjb2VmSGV4Lmxlbmd0aCA8IDIpIHsKICAgICAgICBjb2VmSGV4ID0gIjAiICsgY29lZkhleDsKICAgIH0KICAgIHJldHVybiBjb2VmSGV4Owp9CgpmdW5jdGlvbiBSZ2JDb2VmZnNUb0NvbG9yKHIsIGcsIGIpIHsKICAgIHJldHVybiAiIyIgKyBDb2xvckNvZWZUb0hleChyKSArIENvbG9yQ29lZlRvSGV4KGcpICsgQ29sb3JDb2VmVG9IZXgoYik7Cn0KCmZ1bmN0aW9uIFNpZGVWYWx1ZXNUb0NvbG9yKHNpZGVWYWx1ZXMpIHsKICAgIHZhciBjb2VmcyA9IEdldFNlbnNpdGl2aXR5Q29lZnMoKTsKICAgIHZhciB2MCA9IHNpZGVWYWx1ZXNbMF0uZGlzcGxheVZhbHVlOwogICAgdmFyIHYxID0gc2lkZVZhbHVlc1sxXS5kaXNwbGF5VmFsdWU7CiAgICB2YXIgdk1heCA9IE1hdGgubWF4KHYwLCB2MSk7CiAgICB2YXIgdk1pbiA9IE1hdGgubWluKHYwLCB2MSk7CiAgICB2YXIgY29lZiA9ICh2TWluID09IDAgPyAxIDogKE1hdGgubWluKHZNYXggLyB2TWluLCAyLjApIC0gMSkpOwogICAgaWYgKGNvZWZzLmlzQWJzKSB7CiAgICAgICAgY29lZiA9ICh2TWluID09IDAgPyBjb2Vmcy5tYXggOiAodk1heCAtIHZNaW4pKTsKICAgIH0KICAgIGNvZWYgPSBNYXRoLm1heChNYXRoLm1pbihjb2VmLCBjb2Vmcy5tYXgpIC0gY29lZnMubWluLCAwKSAvIChjb2Vmcy5tYXggLSBjb2Vmcy5taW4pOwogICAgY29lZiA9IE1hdGgubWluKGNvZWYsIDEpOwoKICAgIHZhciBjb2xvcjsKICAgIHZhciBoaWdobGlnaHQgPSBbZmFsc2UsIGZhbHNlXTsKICAgIGlmIChjb2VmID09IDApIHsKICAgICAgICBjb2xvciA9IFJnYkNvZWZmc1RvQ29sb3IoMCwgMCwgMCk7CiAgICB9IGVsc2UgaWYgKHYwID4gdjEpIHsKICAgICAgICBjb2xvciA9IFJnYkNvZWZmc1RvQ29sb3IoY29lZiwgMCwgY29lZik7CiAgICAgICAgaGlnaGxpZ2h0WzBdID0gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgICAgY29sb3IgPSBSZ2JDb2VmZnNUb0NvbG9yKGNvZWYsIGNvZWYsIDApOwogICAgICAgIGhpZ2hsaWdodFsxXSA9IHRydWU7CiAgICB9CgogICAgc2lkZVZhbHVlc1swXS5pc0hpZ2hsaWdodGVkID0gaGlnaGxpZ2h0WzBdOwogICAgc2lkZVZhbHVlc1sxXS5pc0hpZ2hsaWdodGVkID0gaGlnaGxpZ2h0WzFdOwogICAgcmV0dXJuIGNvbG9yOwp9CgovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KZnVuY3Rpb24gUmVzZXRHZW5lcmF0ZWRHcmFwaFZhbHVlcygpIHsKICAgIGhhc2gybm9kZSA9IFtdOwp9CgpmdW5jdGlvbiBOb3JtYWxpemVTaWRlVmFsdWVzKHNpZGVWYWx1ZXMsIHNpZGVJZCwgcm9vdFNpZGVWYWx1ZXMpIHsKICAgIHZhciBzdiA9IHNpZGVWYWx1ZXNbc2lkZUlkXTsKICAgIHN2LmRpc3BsYXlWYWx1ZSA9IE5vcm1hbGl6ZUJ5TnVtYmVyT2ZGcmFtZXMoc3YuZGlzcGxheVZhbHVlLCByb290U2lkZVZhbHVlc1tzaWRlSWRdLm51bWJlck9mRnJhbWVzKTsKICAgIHN2LmRpc3BsYXlDb3VudCA9IE5vcm1hbGl6ZUJ5TnVtYmVyT2ZGcmFtZXMoc3YuZGlzcGxheUNvdW50LCByb290U2lkZVZhbHVlc1tzaWRlSWRdLm51bWJlck9mRnJhbWVzKTsKfQoKZnVuY3Rpb24gTm9ybWFsaXplR3JhcGhWYWx1ZXMoaW5fbm9kZSwgcm9vdFNpZGVWYWx1ZXMpIHsKICAgIE5vcm1hbGl6ZVNpZGVWYWx1ZXMoaW5fbm9kZS5zaWRlVmFsdWVzLCAwLCByb290U2lkZVZhbHVlcyk7CiAgICBOb3JtYWxpemVTaWRlVmFsdWVzKGluX25vZGUuc2lkZVZhbHVlcywgMSwgcm9vdFNpZGVWYWx1ZXMpOwogICAgaW5fbm9kZS52YWx1ZSA9IGluX25vZGUuc2lkZVZhbHVlc1swXS5kaXNwbGF5VmFsdWUgKyBpbl9ub2RlLnNpZGVWYWx1ZXNbMV0uZGlzcGxheVZhbHVlOwogICAgaW5fbm9kZS5jaGlsZHJlbi5mb3JFYWNoKGluX25vZGVfY2hpbGQgPT4gewogICAgICAgIE5vcm1hbGl6ZUdyYXBoVmFsdWVzKGluX25vZGVfY2hpbGQsIHJvb3RTaWRlVmFsdWVzKTsKICAgIH0pOwp9CgpmdW5jdGlvbiBVcGRhdGVHcmFwaENvbG9ycyhpbl9ub2RlKSB7CiAgICBpZiAodmlld01vZGUgIT0gVmlld01vZGVzLkRpZmYpCiAgICAgICAgcmV0dXJuOwogICAgaW5fbm9kZS5jb2xvciA9ICghc2VhcmNoU3RyIHx8IGluX25vZGUubmFtZS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoc2VhcmNoU3RyKSkgPyBTaWRlVmFsdWVzVG9Db2xvcihpbl9ub2RlLnNpZGVWYWx1ZXMpIDogbWlzbWF0Y2hDb2xvcjsKICAgIGluX25vZGUuY2hpbGRyZW4uZm9yRWFjaChpbl9ub2RlX2NoaWxkID0+IHsKICAgICAgICBVcGRhdGVHcmFwaENvbG9ycyhpbl9ub2RlX2NoaWxkKTsKICAgIH0pOwp9CgpmdW5jdGlvbiBJbml0RGlmZkdyYXBocygpIHsKICAgIGlmICh2aWV3TW9kZSA9PSBWaWV3TW9kZXMuRGVmYXVsdCkgewogICAgICAgIGNvbnRhaW5lcnNfanNvbiA9IHNvdXJjZV9jb250YWluZXJzX2pzb247CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGNvbnN0IHRpdGxlc1NldCA9IG5ldyBTZXQoKTsKICAgIHNvdXJjZV9jb250YWluZXJzX2pzb24uZm9yRWFjaChzb3VyY2VfY29udGFpbmVyID0+IHsKICAgICAgICBpZiAoIXRpdGxlc1NldC5oYXMoc291cmNlX2NvbnRhaW5lci50aXRsZSkpIHsKICAgICAgICAgICAgdmFyIGlkID0gdGl0bGVzU2V0LnNpemU7CiAgICAgICAgICAgIHZhciBnID0gY29udGFpbmVyc19qc29uW2lkXSA9IHt9OwogICAgICAgICAgICBnLmR1bXBJbmZvID0ge307CiAgICAgICAgICAgIGcudGl0bGUJPSBzb3VyY2VfY29udGFpbmVyLnRpdGxlOwogICAgICAgICAgICBnLnNob3J0TmFtZQk9IHNvdXJjZV9jb250YWluZXIuc2hvcnROYW1lOwogICAgICAgICAgICBnLnVuaXRzCT0gc291cmNlX2NvbnRhaW5lci51bml0czsKICAgICAgICAgICAgZy50b3BEb3duID0gdW5kZWZpbmVkOwogICAgICAgICAgICB0aXRsZXNTZXQuYWRkKHNvdXJjZV9jb250YWluZXIudGl0bGUpOwogICAgICAgIH0KICAgIH0pOwp9CgpmdW5jdGlvbiBVcGRhdGVEaWZmR3JhcGgodGl0bGUpIHsKICAgIHZhciBmb3VuZF9jb250YWluZXI7CiAgICBjb250YWluZXJzX2pzb24uZm9yRWFjaChjb250YWluZXIgPT4gewogICAgICAgIGlmIChjb250YWluZXIudGl0bGUgIT0gdGl0bGUpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICBmb3VuZF9jb250YWluZXIgPSBjb250YWluZXI7CiAgICB9KTsKCiAgICBpZiAoZm91bmRfY29udGFpbmVyLnRvcERvd24pCiAgICAgICAgcmV0dXJuOwoKICAgIHZhciByb290U2lkZVZhbHVlcyA9IFt7IG51bWJlck9mRnJhbWVzOiAwIH0sIHsgbnVtYmVyT2ZGcmFtZXM6IDAgfV07CiAgICB2YXIgdGQ7CiAgICBzb3VyY2VfY29udGFpbmVyc19qc29uLmZvckVhY2goc291cmNlX2NvbnRhaW5lciA9PiB7CiAgICAgICAgaWYgKHNvdXJjZV9jb250YWluZXIudGl0bGUgIT0gdGl0bGUpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB2YXIgc2lkZUlkID0gc291cmNlX2NvbnRhaW5lci5kdW1wSW5mby5sb2NhbEdyb3VwSWQ7CiAgICAgICAgdGQgPSBQcm9jZXNzRGlmZkdyYXBoTm9kZShzb3VyY2VfY29udGFpbmVyLnRvcERvd24sIHNvdXJjZV9jb250YWluZXIudG9wRG93bi5uYW1lLCBzaWRlSWQsIHNvdXJjZV9jb250YWluZXIuZHVtcEluZm8ubnVtYmVyT2ZGcmFtZXMpLm91dE5vZGU7CiAgICAgICAgcm9vdFNpZGVWYWx1ZXNbc2lkZUlkXS5udW1iZXJPZkZyYW1lcyArPSBub3JtYWxpemVkTnVtYmVyT2ZGcmFtZXM7CiAgICB9KTsKICAgIE5vcm1hbGl6ZUdyYXBoVmFsdWVzKHRkLCByb290U2lkZVZhbHVlcyk7CiAgICB0ZC5zaWRlVmFsdWVzWzBdLmRpc3BsYXlDb3VudCA9IDE7CiAgICB0ZC5zaWRlVmFsdWVzWzFdLmRpc3BsYXlDb3VudCA9IDE7CgogICAgZm91bmRfY29udGFpbmVyLnRvcERvd24gPSB0ZDsKICAgIFJlc2V0R2VuZXJhdGVkR3JhcGhWYWx1ZXMoKTsKfQoKZnVuY3Rpb24gVXBkYXRlRGlmZkNvbG9ycygpIHsKICAgIFVwZGF0ZUdyYXBoQ29sb3JzKHNlbGVjdGVkX2dyYXBoKTsKICAgIFNldEZsYW1lR3JhcGhEYXRhKCk7Cn0KAEHAkwILp1gKLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vCmZ1bmN0aW9uIHNlYXJjaCgpIHsKICAgIGxldCB0ZXJtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRlcm0iKS52YWx1ZTsKICAgIGlmICh2aWV3TW9kZSA9PSBWaWV3TW9kZXMuRGlmZikgewogICAgICAgIHNlYXJjaFN0ciA9IHRlcm0udG9Mb3dlckNhc2UoKTsKICAgICAgICBVcGRhdGVEaWZmQ29sb3JzKCk7CiAgICB9IGVsc2UgewogICAgICAgIGZsYW1lR3JhcGguc2VhcmNoKHRlcm0pOwogICAgfQp9CgpmdW5jdGlvbiBjbGVhcigpIHsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZXJtJykudmFsdWUgPSAnJzsKICAgIGlmICh2aWV3TW9kZSA9PSBWaWV3TW9kZXMuRGlmZikgewogICAgICAgIHNlYXJjaFN0ciA9ICcnOwogICAgICAgIFVwZGF0ZURpZmZDb2xvcnMoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgZmxhbWVHcmFwaC5jbGVhcigpOwogICAgfQp9CgpmdW5jdGlvbiByZXNldFpvb20oKSB7CiAgICBmbGFtZUdyYXBoLnJlc2V0Wm9vbSgpOwp9CgpmdW5jdGlvbiBvbkNsaWNrKGQpIHsKICAgIGNvbnNvbGUuaW5mbygiQ2xpY2tlZCBvbiAiICsgZC5kYXRhLm5hbWUpOwp9CgpmdW5jdGlvbiB0b3BEb3duVG9nZ2xlKCkgewogICAgdmFyIHRvcERvd25CdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnVG9wRG93bkJ1dHRvbicpOwogICAgaWYgKHRvcERvd24gPT0gdHJ1ZSkgewogICAgICAgIHRvcERvd25CdXR0b24udGV4dENvbnRlbnQgPSAiQm90dG9tIFVwIjsKICAgICAgICB0b3BEb3duID0gZmFsc2U7CiAgICB9IGVsc2UgewogICAgICAgIHRvcERvd25CdXR0b24udGV4dENvbnRlbnQgPSAiVG9wIERvd24iOwogICAgICAgIHRvcERvd24gPSB0cnVlOwogICAgfQogICAgT25TZWxlY3RHcmFwaCgpOwp9CgovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KZnVuY3Rpb24gUHJpbnRUb3BEaWZmcyhjb250YWluZXJTaG9ydE5hbWUsIHRvcENvdW50LCBwYXJzZWRSdWxlcykgewogICAgbGV0IGRpZmZzID0gQXJyYXkoKTsKICAgIGxldCByb290U2lkZVZhbHVlcyA9IHNlbGVjdGVkX2dyYXBoLnNpZGVWYWx1ZXM7CgogICAgZnVuY3Rpb24gQ2FsY0RpZmYoaW5fbm9kZSwgbmFtZSkgewogICAgICAgIGxldCBpc0luY3JlYXNlID0gZmFsc2U7CiAgICAgICAgbGV0IHZNaW4gPSAwOwogICAgICAgIGxldCB2TWF4ID0gMDsKICAgICAgICAKICAgICAgICBsZXQgdjAgPSBpbl9ub2RlLnNpZGVWYWx1ZXNbMF0uZGlzcGxheVZhbHVlOwogICAgICAgIGxldCB2MSA9IGluX25vZGUuc2lkZVZhbHVlc1sxXS5kaXNwbGF5VmFsdWU7ICAgICAgICAKICAgICAgICBpZiAodjEgPiB2MCkgewogICAgICAgICAgICBpc0luY3JlYXNlID0gdHJ1ZTsKICAgICAgICAgICAgdk1pbiA9IHYwOwogICAgICAgICAgICB2TWF4ID0gdjE7CiAgICAgICAgfSBlbHNlIGlmICh2MCA+IHYxKSB7CiAgICAgICAgICAgIHZNaW4gPSB2MTsKICAgICAgICAgICAgdk1heCA9IHYwOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGxldCBkaWZmID0gewogICAgICAgICAgICByYXdWYWw6IHYxIC0gdjAsCiAgICAgICAgICAgIGFic1ZhbDogdk1heCAtIHZNaW4sCiAgICAgICAgICAgIHJhd1BlcmNlbnQ6IDAsCiAgICAgICAgICAgIGFic1BlcmNlbnQ6IDAsCiAgICAgICAgICAgIGlzTXVjaDogZmFsc2UsCiAgICAgICAgICAgIGlzQXJpc2VkOiBpc0luY3JlYXNlICYmIHYwID09IDAsCiAgICAgICAgICAgIGlzR29uZTogIWlzSW5jcmVhc2UgJiYgdjEgPT0gMCwKICAgICAgICAgICAgbmFtZTogbmFtZSwKICAgICAgICAgICAgbm9kZTogaW5fbm9kZSwKICAgICAgICB9OwogICAgICAgIAogICAgICAgIGlmICghZGlmZi5pc0FyaXNlZCAmJiAhZGlmZi5pc0dvbmUpIHsKICAgICAgICAgICAgZGlmZi5hYnNQZXJjZW50ID0gKHZNYXggLyB2TWluIC0gMSkgKiAxMDA7CiAgICAgICAgICAgIGRpZmYucmF3UGVyY2VudCA9IGRpZmYuYWJzUGVyY2VudCAqIChpc0luY3JlYXNlID8gMSA6IC0xKTsKICAgICAgICAgICAgZGlmZi5pc011Y2ggPSAoZGlmZi5hYnNQZXJjZW50ID49IDEwMDAwKTsKICAgICAgICB9CiAgICAgICAgCiAgICAgICAgZGlmZnMucHVzaChkaWZmKTsKCiAgICAgICAgaW5fbm9kZS5jaGlsZHJlbi5mb3JFYWNoKGluX25vZGVfY2hpbGQgPT4gewogICAgICAgICAgICBDYWxjRGlmZihpbl9ub2RlX2NoaWxkLCBkaWZmLm5hbWUgKyAoZGlmZi5uYW1lICE9ICIvIiA/ICIvIiA6ICIiKSArIGluX25vZGVfY2hpbGQubmFtZSk7CiAgICAgICAgfSk7CiAgICB9CiAgICAKICAgIENhbGNEaWZmKHNlbGVjdGVkX2dyYXBoLCAiLyIpOwogICAgZGlmZnMuc29ydCgoYSwgYikgPT4gYi5hYnNWYWwgLSBhLmFic1ZhbCk7CiAgICAKICAgIGZ1bmN0aW9uIEdldFNlbGVjdGVkVW5pdHNGb3JtYXRTaW1wbGUoKSB7CiAgICAgICAgbGV0IHVuaXRzID0gc2VsZWN0ZWRfY29udGFpbmVyLnVuaXRzOwogICAgICAgIGxldCByZXMgPSB7IAogICAgICAgICAgICB1bml0c05hbWU6IHVuaXRzLAogICAgICAgICAgICB1bml0c1Nob3J0TmFtZTogdW5pdHMsCiAgICAgICAgICAgIGRpZ2l0TnVtOiAyLAogICAgICAgIH07CiAgICAgICAgaWYgKHVuaXRzID09ICJtcyIpIHsKICAgICAgICAgICAgcmVzLmRpZ2l0TnVtID0gMzsKICAgICAgICB9IGVsc2UgaWYgKHVuaXRzID09ICJieXRlcyIpIHsKICAgICAgICAgICAgcmVzLnVuaXRzU2hvcnROYW1lID0gImIiOwogICAgICAgICAgICByZXMuZGlnaXROdW0gPSAxOwogICAgICAgIH0gZWxzZSBpZiAodW5pdHMgPT0gIiIpIHsKICAgICAgICAgICAgcmVzLmRpZ2l0TnVtID0gMTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHJlczsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gVG9QcmludGFibGUoeCwgZGlnaXROdW0sIHVuaXQpIHsKICAgICAgICBsZXQgc3RyID0geC50b0ZpeGVkKGRpZ2l0TnVtKS50b1N0cmluZygpICsgdW5pdDsKICAgICAgICBpZiAoeCA+IDApIHsKICAgICAgICAgICAgc3RyID0gIisiICsgc3RyOwogICAgICAgIH0KICAgICAgICByZXR1cm4gc3RyOwogICAgfQogICAgCiAgICBmdW5jdGlvbiBVbmRlZmluZWRUb051bWJlcih4KSB7CiAgICAgICAgcmV0dXJuIHggPyB4IDogMDsKICAgIH0KCiAgICBmdW5jdGlvbiBQdXNoRmllbGRzKGZpZWxkcykgewogICAgICAgIG91dExpbmVzLnB1c2goZmllbGRzKTsKICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGZpZWxkcy5sZW5ndGggLSAxOyBqKyspIHsKICAgICAgICAgICAgbWF4RmllbGRMZW5zW2pdID0gTWF0aC5tYXgoVW5kZWZpbmVkVG9OdW1iZXIobWF4RmllbGRMZW5zW2pdKSwgZmllbGRzW2pdLmxlbmd0aCk7CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIENoZWNrUnVsZXMoZGlmZikgewogICAgICAgIGZvciAoY29uc3QgW2lkLCBydWxlXSBvZiBwYXJzZWRSdWxlcy5lbnRyaWVzKCkpIHsKICAgICAgICAgICAgaWYgKHJ1bGUuY29udGFpbmVyU2hvcnROYW1lICE9IGNvbnRhaW5lclNob3J0TmFtZSkKICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICBsZXQgcmVzID0gZmFsc2U7CiAgICAgICAgICAgIGlmIChydWxlLmlzTW9yZSAmJiBkaWZmLnJhd1ZhbCA+IHJ1bGUudmFsKQogICAgICAgICAgICAgICAgcmVzID0gdHJ1ZTsKICAgICAgICAgICAgaWYgKCFydWxlLmlzTW9yZSAmJiBkaWZmLnJhd1ZhbCA8IHJ1bGUudmFsKQogICAgICAgICAgICAgICAgcmVzID0gdHJ1ZTsKICAgICAgICAgICAgaWYgKHJlcyAmJiBydWxlLm5hbWVNYXNrUmVnZXhwLnRlc3QoZGlmZi5uYW1lKSkKICAgICAgICAgICAgICAgIHJldHVybiBpZDsKICAgICAgICB9ICAgIAogICAgICAgIHJldHVybiAtMTsKICAgIH0KCiAgICBsZXQgb3V0TGluZXMgPSBBcnJheSgpOwogICAgbGV0IG1heEZpZWxkTGVucyA9IFtdOwogICAgbGV0IGhlYWRlckZpZWxkcyA9IFsKICAgICAgICAiICIsCiAgICAgICAgIkRpZmYscmF3IiwKICAgICAgICAiRGlmZiwlIiwKICAgICAgICAiU2NvcGUgbmFtZSIsCiAgICBdOwogICAgUHVzaEZpZWxkcyhoZWFkZXJGaWVsZHMpOwogICAgbGV0IHVuaXRzRm9ybWF0ID0gR2V0U2VsZWN0ZWRVbml0c0Zvcm1hdFNpbXBsZSgpOwogICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkaWZmcy5sZW5ndGg7IGkrKykgewogICAgICAgIGNvbnN0IGRpZmYgPSBkaWZmc1tpXTsKICAgICAgICAKICAgICAgICBjb25zdCBydWxlTWF0Y2hJZCA9IENoZWNrUnVsZXMoZGlmZik7CiAgICAgICAgY29uc3QgcnVsZU1hdGNoID0gKHJ1bGVNYXRjaElkID49IDApOwogICAgICAgIGNvbnN0IHJ1bGVNYXRjaFN0ciA9IHJ1bGVNYXRjaCA/ICIqIiA6ICIgIjsKICAgICAgICBpZiAocnVsZU1hdGNoICYmIGNwcCkgewogICAgICAgICAgICBjcHAuUnVsZVRyaWdnZXJlZChydWxlTWF0Y2hJZCk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIGlmICgodG9wQ291bnQgPiAwKSAmJiAoaSA+PSB0b3BDb3VudCkgJiYgIXJ1bGVNYXRjaCkKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgCiAgICAgICAgbGV0IHJhd1BlcmNlbnRTdHIgPSBUb1ByaW50YWJsZShkaWZmLnJhd1BlcmNlbnQsIDIsICIlIik7CiAgICAgICAgaWYgKGRpZmYuaXNNdWNoKSB7CiAgICAgICAgICAgIHJhd1BlcmNlbnRTdHIgPSAiTVVDSCUiCiAgICAgICAgfQogICAgICAgIGlmIChkaWZmLmlzQXJpc2VkKSB7CiAgICAgICAgICAgIHJhd1BlcmNlbnRTdHIgPSAiKGFyaXNlZCkiCiAgICAgICAgfSBlbHNlIGlmIChkaWZmLmlzR29uZSkgewogICAgICAgICAgICByYXdQZXJjZW50U3RyID0gIihnb25lKSIKICAgICAgICB9CiAgICAgICAgbGV0IGZpZWxkcyA9IFsKICAgICAgICAgICAgcnVsZU1hdGNoU3RyLAogICAgICAgICAgICBUb1ByaW50YWJsZShkaWZmLnJhd1ZhbCwgdW5pdHNGb3JtYXQuZGlnaXROdW0sIHVuaXRzRm9ybWF0LnVuaXRzU2hvcnROYW1lKSwKICAgICAgICAgICAgcmF3UGVyY2VudFN0ciwKICAgICAgICAgICAgZGlmZi5uYW1lLAogICAgICAgIF07CiAgICAgICAgUHVzaEZpZWxkcyhmaWVsZHMpOwogICAgfQoKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3V0TGluZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBsZXQgbGluZSA9ICIiOwogICAgICAgIGxldCBmaWVsZHMgPSBvdXRMaW5lc1tpXTsKICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGZpZWxkcy5sZW5ndGg7IGorKykgewogICAgICAgICAgICBsZXQgZmllbGQgPSBmaWVsZHNbal07CiAgICAgICAgICAgIGxldCBpc0ZpcnN0ID0gKGogPT0gMCk7CiAgICAgICAgICAgIGxldCBpc0xhc3QgPSAoaiA9PSBmaWVsZHMubGVuZ3RoIC0gMSk7CiAgICAgICAgICAgIGNvbnN0IHBhZGRpbmcgPSBpc0ZpcnN0ID8gIiIgOiAiICAiOwogICAgICAgICAgICBsaW5lICs9IHBhZGRpbmc7CiAgICAgICAgICAgIGlmIChpc0xhc3QpIHsKICAgICAgICAgICAgICAgIGxpbmUgKz0gZmllbGQ7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBsaW5lICs9IGZpZWxkLnBhZFN0YXJ0KG1heEZpZWxkTGVuc1tqXSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2cobGluZSk7CiAgICB9Cn0KCmZ1bmN0aW9uIFByb2Nlc3NDb250YWluZXJzKHRvcENvdW50LCBydWxlcykgewogICAgY29uc3QgZGVmYXVsdFRvcENvdW50ID0gMDsKICAgIHRvcENvdW50ID0gdG9wQ291bnQgPyB0b3BDb3VudCA6IGRlZmF1bHRUb3BDb3VudDsKICAgIHJ1bGVzID0gcnVsZXMgPyBydWxlcyA6IFtdOwogICAgCiAgICBmdW5jdGlvbiBSZW1vdmVOb25EaWdpdHNGcm9tUmlnaHQoc3RyKSB7CiAgICAgICAgbGV0IGkgPSBzdHIubGVuZ3RoIC0gMTsKICAgICAgICB3aGlsZSAoaSA+PSAwICYmIChzdHJbaV0gPCAnMCcgfHwgc3RyW2ldID4gJzknKSkgewogICAgICAgICAgICBpLS07CiAgICAgICAgfQogICAgICAgIHJldHVybiBzdHIuc2xpY2UoMCwgaSArIDEpOwogICAgfQoKICAgIGZ1bmN0aW9uIFBhcnNlUnVsZShpbnB1dCkgewogICAgICAgIGNvbnN0IHBhcnRzID0gaW5wdXQuc3BsaXQoJzsnKS5tYXAocGFydCA9PiBwYXJ0LnRyaW0oKSk7CiAgICAgICAgbGV0IGxhc3RQYXJ0ID0gcGFydHNbMl0gfHwgJyc7CiAgICAgICAgY29uc3QgcmVzdWx0ID0gewogICAgICAgICAgICBuYW1lTWFzazogcGFydHNbMF0gfHwgJycsCiAgICAgICAgICAgIG5hbWVNYXNrUmVnZXhwOiBudWxsLAogICAgICAgICAgICBjb250YWluZXJTaG9ydE5hbWU6IHBhcnRzWzFdIHx8ICcnLAogICAgICAgICAgICB2YWw6IFJlbW92ZU5vbkRpZ2l0c0Zyb21SaWdodChsYXN0UGFydCkuc2xpY2UoMSksCiAgICAgICAgICAgIGlzTW9yZTogbGFzdFBhcnQuc3RhcnRzV2l0aCgnPicpLAogICAgICAgICAgICBpc1BlcmNlbnQ6IGxhc3RQYXJ0LmVuZHNXaXRoKCclJyksCiAgICAgICAgfTsKICAgICAgICBjb25zdCByZWdleFBhdHRlcm4gPSAnXicgKyByZXN1bHQubmFtZU1hc2suc3BsaXQoJyonKS5qb2luKCcuKicpLnNwbGl0KCc/Jykuam9pbignLicpICsgJyQnOwogICAgICAgIHJlc3VsdC5uYW1lTWFza1JlZ2V4cCA9IG5ldyBSZWdFeHAocmVnZXhQYXR0ZXJuKTsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgCiAgICBsZXQgcGFyc2VkUnVsZXMgPSBbXTsKICAgIGZvciAoY29uc3QgcnVsZSBvZiBydWxlcykgewogICAgICAgIHBhcnNlZFJ1bGVzLnB1c2goUGFyc2VSdWxlKHJ1bGUpKTsKICAgIH0KCiAgICBjb25zb2xlLmxvZygiIik7CiAgICBjb25zb2xlLmxvZygiPT0gVG9wIGRpZmZzIChMZWZ0ID0+IFJpZ2h0LiBUb3RhbCB2YWx1ZXMgY29tcGFyZWQuIFBlciAxIGZyYW1lKSA9PSIpOwogICAgY29uc29sZS5sb2coIiIpOwogICAgCiAgICBjb250YWluZXJzX2pzb24uZm9yRWFjaCgoZW50cnksIGkpID0+IHsKICAgICAgICBsZXQgdGl0bGUgPSAiIyMgIiArIGVudHJ5LnRpdGxlICsgIiBbIiArIGVudHJ5LnNob3J0TmFtZSArICJdIjsKICAgICAgICBsZXQgY29udGFpbmVyU2hvcnROYW1lID0gZW50cnkuc2hvcnROYW1lOwogICAgICAgIGNvbnNvbGUubG9nKHRpdGxlKTsKICAgICAgICBjb25zb2xlLmxvZygiLSIucmVwZWF0KHRpdGxlLmxlbmd0aCkpOwoKICAgICAgICBjb250YWluZXJJZCA9IGk7CiAgICAgICAgU2VsZWN0R3JhcGgoKTsKICAgICAgICBQcmludFRvcERpZmZzKGNvbnRhaW5lclNob3J0TmFtZSwgdG9wQ291bnQsIHBhcnNlZFJ1bGVzKTsKCiAgICAgICAgY29uc29sZS5sb2coIiIpOwogICAgfSk7ICAgIAp9CgovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KaWYgKGdsb2JhbFRoaXMuZ19jbGlNb2RlKSB7CiAgICBEZXRlY3RWaWV3TW9kZSgpOwogICAgSW5pdERpZmZHcmFwaHMoKTsKfSBlbHNlIHsKICAgIEluaXRGbGFtZUdyYXBoKCk7CiAgICBEZXRlY3RWaWV3TW9kZSgpOwogICAgSW5pdFBhZ2VIZWFkZXIoKTsKICAgIEluaXREaWZmR3JhcGhzKCk7CiAgICBJbml0VWkoKTsKICAgIE9uU2VsZWN0R3JhcGgoKTsKICAgIFNob3dVaSgpOwp9Cjwvc2NyaXB0Pgo8L2JvZHk+CjwvaHRtbD4KAAAAAAAAAACgqAAAGAAAABkAAAAaAAAAGwAAABwAAAAdAAAAHgAAAB8AAAAgAAAATlN0M19fMjEwX19mdW5jdGlvbjZfX2Z1bmNJWjI0Y29uc3RydWN0UmV2ZXJzZU5vZGVEYXRhUjEzVGltZXJOb2RlRGF0YVMzX0UzJF8wTlNfOWFsbG9jYXRvcklTNF9FRUZ2UDEwVGltZXJOb2Rlc0VFRQBOU3QzX18yMTBfX2Z1bmN0aW9uNl9fYmFzZUlGdlAxMFRpbWVyTm9kZXNFRUUAAAAcAwEAaKgAAEQDAQD0pwAAmKgAAFoyNGNvbnN0cnVjdFJldmVyc2VOb2RlRGF0YVIxM1RpbWVyTm9kZURhdGFTMF9FMyRfMAAcAwEArKgAAAAAAACQqQAAGAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAATlN0M19fMjEwX19mdW5jdGlvbjZfX2Z1bmNJWjIyc2VsZWN0U2FtcGxlU2l6ZVNvdXJjZVIxM1RpbWVyTm9kZURhdGExMEV4cG9ydE1vZGVFMyRfME5TXzlhbGxvY2F0b3JJUzVfRUVGdlAxMFRpbWVyTm9kZXNFRUUAAEQDAQAUqQAAmKgAAFoyMnNlbGVjdFNhbXBsZVNpemVTb3VyY2VSMTNUaW1lck5vZGVEYXRhMTBFeHBvcnRNb2RlRTMkXzAAABwDAQCcqQAACjwhZG9jdHlwZSBodG1sPgo8aHRtbCBsYW5nPSJlbiI+CiAgPGhlYWQ+CiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgIDxtZXRhIGh0dHAtZXF1aXY9IlgtVUEtQ29tcGF0aWJsZSIgY29udGVudD0iSUU9ZWRnZSIgLz4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSIgLz4KICAgIDxsaW5rCiAgICAgIHJlbD0ic3R5bGVzaGVldCIKICAgICAgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4zLjcvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIgogICAgLz4KICAgIDxsaW5rCiAgICAgIHJlbD0ic3R5bGVzaGVldCIKICAgICAgdHlwZT0idGV4dC9jc3MiCiAgICAgIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vZDMtZmxhbWUtZ3JhcGhANC4xLjMvZGlzdC9kMy1mbGFtZWdyYXBoLmNzcyIKICAgIC8+CgogICAgPHN0eWxlPgogICAgICAvKiBTcGFjZSBvdXQgY29udGVudCBhIGJpdCAqLwogICAgICBib2R5IHsKICAgICAgICBwYWRkaW5nLXRvcDogMjBweDsKICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsKICAgICAgfQoKICAgICAgLyogQ3VzdG9tIHBhZ2UgaGVhZGVyICovCiAgICAgIC5oZWFkZXIgewogICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4OwogICAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7CiAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4OwogICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTVlNWU1OwogICAgICB9CgogICAgICAvKiBNYWtlIHRoZSBtYXN0aGVhZCBoZWFkaW5nIHRoZSBzYW1lIGhlaWdodCBhcyB0aGUgbmF2aWdhdGlvbiAqLwogICAgICAuaGVhZGVyIGgzIHsKICAgICAgICBtYXJnaW4tdG9wOiAwOwogICAgICAgIG1hcmdpbi1ib3R0b206IDA7CiAgICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgICAgIH0KCiAgICAgIC8qIEN1c3RvbWl6ZSBjb250YWluZXIgKi8KICAgICAgLmNvbnRhaW5lciB7CiAgICAgICAgbWF4LXdpZHRoOiA5OTBweDsKICAgICAgfQoKICAgICAgLm1vZGVTd2l0Y2ggewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7CiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICBtYXJnaW4tbGVmdDogMjBweDsKICAgICAgfQoKICAgICAgLm5hdkNvbnRhaW5lciB7CiAgICAgICAgZmxvYXQ6IHJpZ2h0OwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7CiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgfQogICAgPC9zdHlsZT4KCiAgICA8dGl0bGU+ZDMtZmxhbWUtZ3JhcGg8L3RpdGxlPgoKICAgIDwhLS0gSFRNTDUgc2hpbSBhbmQgUmVzcG9uZC5qcyBmb3IgSUU4IHN1cHBvcnQgb2YgSFRNTDUgZWxlbWVudHMgYW5kIG1lZGlhIHF1ZXJpZXMgLS0+CiAgICA8IS0tW2lmIGx0IElFIDldPgogICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9vc3MubWF4Y2RuLmNvbS9odG1sNXNoaXYvMy43LjIvaHRtbDVzaGl2Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL29zcy5tYXhjZG4uY29tL3Jlc3BvbmQvMS40LjIvcmVzcG9uZC5taW4uanMiPjwvc2NyaXB0PgogICAgPCFbZW5kaWZdLS0+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgPGRpdiBjbGFzcz0iaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgICA8bmF2PgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2Q29udGFpbmVyIj4KICAgICAgICAgICAgPGZvcm0gY2xhc3M9ImZvcm0taW5saW5lIiBpZD0iZm9ybSI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biIgaHJlZj0iamF2YXNjcmlwdDogcmVzZXRab29tKCk7Ij5SZXNldCB6b29tPC9hPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4iIGhyZWY9ImphdmFzY3JpcHQ6IGNsZWFyKCk7Ij5DbGVhcjwvYT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0idGVybSIgLz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBocmVmPSJqYXZhc2NyaXB0OiBzZWFyY2goKTsiPlNlYXJjaDwvYT4KICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RlU3dpdGNoIj4KICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9InRleHQtbXV0ZWQiIGZvcj0ibW9kZVNlbGVjdCI+TW9kZTwvbGFiZWw+CiAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ibW9kZVNlbGVjdCIgbmFtZT0ibW9kZXMiPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0ibGl2ZUFsbG9jQnl0ZXMiPkxpdmUgQWxsb2MgQnl0ZXM8L29wdGlvbj4KICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImxpdmVBbGxvY0NvdW50Ij5MaXZlIEFsbG9jIENvdW50PC9vcHRpb24+CiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJhbGxvY0J5dGVzIj5BbGxvYyBCeXRlczwvb3B0aW9uPgogICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iYWxsb2NDb3VudCI+QWxsb2MgQ291bnQ8L29wdGlvbj4KICAgICAgICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L25hdj4KICAgICAgICA8aDUgaWQ9IkNvbGxlY3Rpb25UaW1lIiBjbGFzcz0idGV4dC1tdXRlZCI+Q29sbGVjdGlvbiB0aW1lOjwvaDU+CiAgICAgICAgPGg1IGlkPSJDb2xsZWN0aW9uVGltZUFnZSIgY2xhc3M9InRleHQtbXV0ZWQiPmFnbzwvaDU+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGlkPSJjaGFydCI+PC9kaXY+CiAgICAgIDxociAvPgogICAgICA8ZGl2IGlkPSJkZXRhaWxzIj48L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxzY3JpcHQgdHlwZT10ZXh0L2phdmFzY3JpcHQ+CgBB8OsCC7IpCiAgICA8L3NjcmlwdD4KCiAgICA8IS0tIEQzLmpzIC0tPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vZDNqcy5vcmcvZDMudjcuanMiIGNoYXJzZXQ9InV0Zi04Ij48L3NjcmlwdD4KCiAgICA8IS0tIGQzLXRpcCAtLT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2QzLXRpcC8wLjkuMS9kMy10aXAubWluLmpzIj48L3NjcmlwdD4KCiAgICA8IS0tIGQzLWZsYW1lZ3JhcGggLS0+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2QzLWZsYW1lLWdyYXBoQDQuMS4zL2Rpc3QvZDMtZmxhbWVncmFwaC5taW4uanMiPjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIHZhciBjb2xsZWN0aW9uVGltZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdDb2xsZWN0aW9uVGltZScpOwogICAgdmFyIGNvbGxlY3Rpb25UaW1lQWdvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0NvbGxlY3Rpb25UaW1lQWdlJyk7CgogICAgZnVuY3Rpb24gVGltZVN0cmluZyhEaWZmKQogICAgewogICAgICB2YXIgRGlmZlN0cmluZyA9ICIwIHNlYyI7CiAgICAgIHZhciBEaWZmVGFibGUgPSBbMSw2MCw2MCo2MCw2MCo2MCoyNF07CiAgICAgIHZhciBEaWZmTmFtZVRhYmxlID0gWyJzZWMiLCAibWluIiwgImhyIiwgImRheSJdOwogICAgICBmb3IodmFyIGkgPSAwOyBpIDwgRGlmZlRhYmxlLmxlbmd0aDsgKytpKQogICAgICB7CiAgICAgICAgaWYoRGlmZiA+PSBEaWZmVGFibGVbaV0pCiAgICAgICAgewogICAgICAgICAgRGlmZlN0cmluZyA9IE1hdGguZmxvb3IoRGlmZiAvIERpZmZUYWJsZVtpXSkgKyAiICIgKyBEaWZmTmFtZVRhYmxlW2ldOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gRGlmZlN0cmluZzsKICAgIH0KCiAgICB2YXIgZmxhbWVHcmFwaCA9IGZsYW1lZ3JhcGgoKQogICAgICAud2lkdGgoOTYwKQogICAgICAuY2VsbEhlaWdodCgxOCkKICAgICAgLnRyYW5zaXRpb25EdXJhdGlvbig3NTApCiAgICAgIC5taW5GcmFtZVNpemUoMCkKICAgICAgLnRyYW5zaXRpb25FYXNlKGQzLmVhc2VDdWJpYykKICAgICAgLnNvcnQodHJ1ZSkKICAgICAgLnRpdGxlKCIiKQogICAgICAub25DbGljayhvbkNsaWNrKQogICAgICAuc2VsZlZhbHVlKGZhbHNlKTsKCiAgICB2YXIgbGFiZWxIYW5kbGVyID0gZnVuY3Rpb24gKGQpIHsKICAgICAgdmFyIG1vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibW9kZVNlbGVjdCIpLnZhbHVlOwogICAgICB2YXIgaWRlbnRpZmllciA9IGQuZGF0YS5uYW1lICsgJyAoR3JvdXAgTmFtZTogJyArIGQuZGF0YS5ncm91cE5hbWUgKyAnLCBUaW1lciBJbmRleDogJyArIGQuZGF0YS50aW1lckluZGV4ICsgJyksICc7CiAgICAgIGlmIChtb2RlID09PSAibGl2ZUFsbG9jQnl0ZXMiIHx8IG1vZGUgPT09ICJhbGxvY0J5dGVzIikgewogICAgICAgIGlmIChkLnZhbHVlID49IDEwKio5KSB7CiAgICAgICAgICAgIC8vIGRpc3BsYXkgaW4gR0IKICAgICAgICAgICAgcmV0dXJuIGlkZW50aWZpZXIgKyAnICgnICsgZDMuZm9ybWF0KCcuM2YnKSgxMDAgKiAoZC54MSAtIGQueDApLCAzKSArICclLCAnICsgZDMuZm9ybWF0KCcuM2YnKShkLnZhbHVlIC8gMTAqKjksIDMpICsgJyBHQiwgJyArIGQudmFsdWUgKyAnIGJ5dGVzKSc7CiAgICAgICAgfSBlbHNlIGlmIChkLnZhbHVlID49IDEwKio2KSB7CiAgICAgICAgICAgIC8vIGRpc3BsYXkgaW4gTUIKICAgICAgICAgICAgcmV0dXJuIGlkZW50aWZpZXIgKyAnICgnICsgZDMuZm9ybWF0KCcuM2YnKSgxMDAgKiAoZC54MSAtIGQueDApLCAzKSArICclLCAnICsgZDMuZm9ybWF0KCcuM2YnKShkLnZhbHVlIC8gMTAqKjYsIDMpICsgJyBNQiwgJyArIGQudmFsdWUgKyAnIGJ5dGVzKSc7CiAgICAgICAgfSBlbHNlIGlmIChkLnZhbHVlID49IDEwKiozKSB7CiAgICAgICAgICAgIC8vIGRpc3BsYXkgaW4gS0IKICAgICAgICAgICAgcmV0dXJuIGlkZW50aWZpZXIgKyAnICgnICsgZDMuZm9ybWF0KCcuM2YnKSgxMDAgKiAoZC54MSAtIGQueDApLCAzKSArICclLCAnICsgZDMuZm9ybWF0KCcuM2YnKShkLnZhbHVlIC8gMTAqKjMsIDMpICsgJyBLQiwgJyArIGQudmFsdWUgKyAnIGJ5dGVzKSc7CiAgICAgICAgfQogICAgICAgIHJldHVybiBpZGVudGlmaWVyICsgJyAoJyArIGQzLmZvcm1hdCgnLjNmJykoMTAwICogKGQueDEgLSBkLngwKSwgMykgKyAnJSwgJyArIGQudmFsdWUgKyAnIGJ5dGVzKSc7CiAgICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gImxpdmVBbGxvY0NvdW50IiB8fCBtb2RlID09PSAiYWxsb2NDb3VudCIpIHsKICAgICAgICByZXR1cm4gaWRlbnRpZmllciArICcgKCcgKyBkMy5mb3JtYXQoJy4zZicpKDEwMCAqIChkLngxIC0gZC54MCksIDMpICsgJyUsICcgKyBkLnZhbHVlICsgJyBhbGxvY3MpJzsKICAgICAgfQogICAgfQogICAgZmxhbWVHcmFwaC5sYWJlbChsYWJlbEhhbmRsZXIpCgogICAgZmxhbWVHcmFwaC5zZXRDb2xvck1hcHBlcihmdW5jdGlvbihkLCBvcmlnaW5hbENvbG9yKSB7CiAgICAgICAgcmV0dXJuIGQuaGlnaGxpZ2h0PyAiI2ZmMDAwMCIgOiBkLmRhdGEuY29sb3I7CiAgICB9KTsKCiAgICB2YXIgZGV0YWlscyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJkZXRhaWxzIik7CiAgICBmbGFtZUdyYXBoLnNldERldGFpbHNFbGVtZW50KGRldGFpbHMpOwoKICAgIHZhciBDdXJyZW50RGF0ZSA9IERhdGUubm93KCkgLyAxMDAwOwogICAgdmFyIERpZmYgPSBDdXJyZW50RGF0ZSAtIER1bXBEYXRlOwogICAgdmFyIERpZmZTdHJpbmcgPSBUaW1lU3RyaW5nKERpZmYpICsgIiBhZ28iOwoKICAgIGNvbGxlY3Rpb25UaW1lLnRleHRDb250ZW50ID0gIiBDb2xsZWN0aW9uIHRpbWU6ICIgKyBuZXcgRGF0ZShEdW1wRGF0ZSoxMDAwKS50b0xvY2FsZVN0cmluZygpOwogICAgY29sbGVjdGlvblRpbWVBZ28udGV4dENvbnRlbnQgPSBEaWZmU3RyaW5nOwoKCiAgICB2YXIgdG9wRG93biA9IHRydWU7CiAgICBkMy5zZWxlY3QoIiNjaGFydCIpCiAgICAgICAgLmRhdHVtKGxpdmVBbGxvY0J5dGVzSnNvbikKICAgICAgICAuY2FsbChmbGFtZUdyYXBoKTsKCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZm9ybSIpLmFkZEV2ZW50TGlzdGVuZXIoInN1Ym1pdCIsIGZ1bmN0aW9uKGV2ZW50KXsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgc2VhcmNoKCk7CiAgICB9KTsKCiAgICBmdW5jdGlvbiBzZWFyY2goKSB7CiAgICAgIHZhciB0ZXJtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRlcm0iKS52YWx1ZTsKICAgICAgZmxhbWVHcmFwaC5zZWFyY2godGVybSk7CiAgICB9CgogICAgZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZXJtJykudmFsdWUgPSAnJzsKICAgICAgZmxhbWVHcmFwaC5jbGVhcigpOwogICAgfQoKICAgIGZ1bmN0aW9uIHJlc2V0Wm9vbSgpIHsKICAgICAgZmxhbWVHcmFwaC5yZXNldFpvb20oKTsKICAgIH0KCiAgICBmdW5jdGlvbiBvbkNsaWNrKGQpIHsKICAgICAgY29uc29sZS5pbmZvKCJDbGlja2VkIG9uICIgKyBkLmRhdGEubmFtZSk7CiAgICB9CgogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1vZGVTZWxlY3QiKS5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgbW9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtb2RlU2VsZWN0IikudmFsdWU7CiAgICAgICAgaWYgKG1vZGUgPT09ICJsaXZlQWxsb2NCeXRlcyIpIHsKICAgICAgICAgICAgZDMuc2VsZWN0KCIjY2hhcnQiKQogICAgICAgICAgICAgICAgLmRhdHVtKGxpdmVBbGxvY0J5dGVzSnNvbikKICAgICAgICAgICAgICAgIC5jYWxsKGZsYW1lR3JhcGgpOwogICAgICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gImxpdmVBbGxvY0NvdW50IikgewogICAgICAgICAgICBkMy5zZWxlY3QoIiNjaGFydCIpCiAgICAgICAgICAgICAgICAuZGF0dW0obGl2ZUFsbG9jQ291bnRKc29uKQogICAgICAgICAgICAgICAgLmNhbGwoZmxhbWVHcmFwaCk7CiAgICAgICAgfSBlbHNlIGlmIChtb2RlID09PSAiYWxsb2NCeXRlcyIpIHsKICAgICAgICAgICAgZDMuc2VsZWN0KCIjY2hhcnQiKQogICAgICAgICAgICAgICAgLmRhdHVtKGFsbG9jQnl0ZXNKc29uKQogICAgICAgICAgICAgICAgLmNhbGwoZmxhbWVHcmFwaCk7CiAgICAgICAgfSBlbHNlIGlmIChtb2RlID09PSAiYWxsb2NDb3VudCIpIHsKICAgICAgICAgICAgZDMuc2VsZWN0KCIjY2hhcnQiKQogICAgICAgICAgICAgICAgLmRhdHVtKGFsbG9jQ291bnRKc29uKQogICAgICAgICAgICAgICAgLmNhbGwoZmxhbWVHcmFwaCk7CiAgICAgICAgfQogICAgfSk7CgogICAgPC9zY3JpcHQ+CiAgPC9ib2R5Pgo8L2h0bWw+CgBOU3QzX18yMTJiYXNpY19zdHJpbmdJaE5TXzExY2hhcl90cmFpdHNJaEVFTlNfOWFsbG9jYXRvckloRUVFRQAAAAAcAwEAVscAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0l3TlNfMTFjaGFyX3RyYWl0c0l3RUVOU185YWxsb2NhdG9ySXdFRUVFAAAcAwEAoMcAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0lEc05TXzExY2hhcl90cmFpdHNJRHNFRU5TXzlhbGxvY2F0b3JJRHNFRUVFAAAAHAMBAOjHAABOU3QzX18yMTJiYXNpY19zdHJpbmdJRGlOU18xMWNoYXJfdHJhaXRzSURpRUVOU185YWxsb2NhdG9ySURpRUVFRQAAABwDAQA0yAAATjEwZW1zY3JpcHRlbjN2YWxFAAAcAwEAgMgAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWNFRQAAHAMBAJzIAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lhRUUAABwDAQDEyAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJaEVFAAAcAwEA7MgAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXNFRQAAHAMBABTJAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0l0RUUAABwDAQA8yQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJaUVFAAAcAwEAZMkAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWpFRQAAHAMBAIzJAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lsRUUAABwDAQC0yQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbUVFAAAcAwEA3MkAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXhFRQAAHAMBAATKAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0l5RUUAABwDAQAsygAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJZkVFAAAcAwEAVMoAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWRFRQAAHAMBAHzKAEGwlQMLQRkACgAZGRkAAAAABQAAAAAAAAkAAAAACwAAAAAAAAAAGQARChkZGQMKBwABAAkLGAAACQYLAAALAAYZAAAAGRkZAEGBlgMLIQ4AAAAAAAAAABkACg0ZGRkADQAAAgAJDgAAAAkADgAADgBBu5YDCwEMAEHHlgMLFRMAAAAAEwAAAAAJDAAAAAAADAAADABB9ZYDCwEQAEGBlwMLFQ8AAAAEDwAAAAAJEAAAAAAAEAAAEABBr5cDCwESAEG7lwMLHhEAAAAAEQAAAAAJEgAAAAAAEgAAEgAAGgAAABoaGgBB8pcDCw4aAAAAGhoaAAAAAAAACQBBo5gDCwEUAEGvmAMLFRcAAAAAFwAAAAAJFAAAAAAAFAAAFABB3ZgDCwEWAEHpmAMLzhAVAAAAABUAAAAACRYAAAAAABYAABYAADAxMjM0NTY3ODlBQkNERUZIBQEAAAAAAMTMAAALAAAAMAAAADEAAABOU3QzX18yMTdiYWRfZnVuY3Rpb25fY2FsbEUARAMBAKjMAABABAEAAAAAAAIAAAADAAAABQAAAAcAAAALAAAADQAAABEAAAATAAAAFwAAAB0AAAAfAAAAJQAAACkAAAArAAAALwAAADUAAAA7AAAAPQAAAEMAAABHAAAASQAAAE8AAABTAAAAWQAAAGEAAABlAAAAZwAAAGsAAABtAAAAcQAAAH8AAACDAAAAiQAAAIsAAACVAAAAlwAAAJ0AAACjAAAApwAAAK0AAACzAAAAtQAAAL8AAADBAAAAxQAAAMcAAADTAAAAAQAAAAsAAAANAAAAEQAAABMAAAAXAAAAHQAAAB8AAAAlAAAAKQAAACsAAAAvAAAANQAAADsAAAA9AAAAQwAAAEcAAABJAAAATwAAAFMAAABZAAAAYQAAAGUAAABnAAAAawAAAG0AAABxAAAAeQAAAH8AAACDAAAAiQAAAIsAAACPAAAAlQAAAJcAAACdAAAAowAAAKcAAACpAAAArQAAALMAAAC1AAAAuwAAAL8AAADBAAAAxQAAAMcAAADRAAAAAAAAAKTQAAAyAAAAMwAAADQAAAA1AAAANgAAADcAAAA4AAAAOQAAADoAAAA7AAAAPAAAAD0AAAA+AAAAPwAAAAgAAAAAAAAA3NAAAEAAAABBAAAA+P////j////c0AAAQgAAAEMAAACczgAAsM4AAAQAAAAAAAAAJNEAAEQAAABFAAAA/P////z///8k0QAARgAAAEcAAADMzgAA4M4AAAwAAAAAAAAAvNEAAEgAAABJAAAABAAAAPj///+80QAASgAAAEsAAAD0////9P///7zRAABMAAAATQAAAPzOAABI0QAAXNEAAHDRAACE0QAAJM8AABDPAAAAAAAAWNIAAE4AAABPAAAAUAAAAFEAAABSAAAAUwAAAFQAAABVAAAAVgAAAFcAAABYAAAAWQAAAFoAAABbAAAACAAAAAAAAACQ0gAAXAAAAF0AAAD4////+P///5DSAABeAAAAXwAAAJTPAACozwAABAAAAAAAAADY0gAAYAAAAGEAAAD8/////P///9jSAABiAAAAYwAAAMTPAADYzwAAAAAAADTTAABkAAAAZQAAADQAAAA1AAAAZgAAAGcAAAA4AAAAOQAAADoAAABoAAAAPAAAAGkAAAA+AAAAagAAAAAAAABk0AAAawAAAGwAAABOU3QzX18yOWJhc2ljX2lvc0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQAAAEQDAQA40AAAqNQAAE5TdDNfXzIxNWJhc2ljX3N0cmVhbWJ1ZkljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQAAAAAcAwEAcNAAAE5TdDNfXzIxM2Jhc2ljX2lzdHJlYW1JY05TXzExY2hhcl90cmFpdHNJY0VFRUUAAKADAQCs0AAAAAAAAAEAAABk0AAAA/T//05TdDNfXzIxM2Jhc2ljX29zdHJlYW1JY05TXzExY2hhcl90cmFpdHNJY0VFRUUAAKADAQD00AAAAAAAAAEAAABk0AAAA/T//wwAAAAAAAAA3NAAAEAAAABBAAAA9P////T////c0AAAQgAAAEMAAAAEAAAAAAAAACTRAABEAAAARQAAAPz////8////JNEAAEYAAABHAAAATlN0M19fMjE0YmFzaWNfaW9zdHJlYW1JY05TXzExY2hhcl90cmFpdHNJY0VFRUUAoAMBAIzRAAADAAAAAgAAANzQAAACAAAAJNEAAAIIAAAAAAAAGNIAAG0AAABuAAAATlN0M19fMjliYXNpY19pb3NJd05TXzExY2hhcl90cmFpdHNJd0VFRUUAAABEAwEA7NEAAKjUAABOU3QzX18yMTViYXNpY19zdHJlYW1idWZJd05TXzExY2hhcl90cmFpdHNJd0VFRUUAAAAAHAMBACTSAABOU3QzX18yMTNiYXNpY19pc3RyZWFtSXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFAACgAwEAYNIAAAAAAAABAAAAGNIAAAP0//9OU3QzX18yMTNiYXNpY19vc3RyZWFtSXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFAACgAwEAqNIAAAAAAAABAAAAGNIAAAP0//9OU3QzX18yMTViYXNpY19zdHJpbmdidWZJY05TXzExY2hhcl90cmFpdHNJY0VFTlNfOWFsbG9jYXRvckljRUVFRQAAAEQDAQDw0gAApNAAAEAAAAAAAAAAeNQAAG8AAABwAAAAOAAAAPj///941AAAcQAAAHIAAADA////wP///3jUAABzAAAAdAAAAEzTAACw0wAA7NMAAADUAAAU1AAAKNQAANjTAADE0wAAdNMAAGDTAABAAAAAAAAAALzRAABIAAAASQAAADgAAAD4////vNEAAEoAAABLAAAAwP///8D///+80QAATAAAAE0AAABAAAAAAAAAANzQAABAAAAAQQAAAMD////A////3NAAAEIAAABDAAAAOAAAAAAAAAAk0QAARAAAAEUAAADI////yP///yTRAABGAAAARwAAAE5TdDNfXzIxOGJhc2ljX3N0cmluZ3N0cmVhbUljTlNfMTFjaGFyX3RyYWl0c0ljRUVOU185YWxsb2NhdG9ySWNFRUVFAAAAAEQDAQAw1AAAvNEAAAAAAACo1AAAdQAAAHYAAABOU3QzX18yOGlvc19iYXNlRQAAABwDAQCU1AAA4AUBAHAGAQBBwKkDCyPeEgSVAAAAAP///////////////8DUAAAUAAAAQy5VVEYtOABBkKoDCwLU1ABBsKoDC+IEAgAAwAMAAMAEAADABQAAwAYAAMAHAADACAAAwAkAAMAKAADACwAAwAwAAMANAADADgAAwA8AAMAQAADAEQAAwBIAAMATAADAFAAAwBUAAMAWAADAFwAAwBgAAMAZAADAGgAAwBsAAMAcAADAHQAAwB4AAMAfAADAAAAAswEAAMMCAADDAwAAwwQAAMMFAADDBgAAwwcAAMMIAADDCQAAwwoAAMMLAADDDAAAww0AANMOAADDDwAAwwAADLsBAAzDAgAMwwMADMMEAAzbAAAAAFTWAAAyAAAAfAAAAH0AAAA1AAAANgAAADcAAAA4AAAAOQAAADoAAAB+AAAAfwAAAIAAAAA+AAAAPwAAAE5TdDNfXzIxMF9fc3RkaW5idWZJY0VFAEQDAQA81gAApNAAAAAAAAC81gAAMgAAAIEAAACCAAAANQAAADYAAAA3AAAAgwAAADkAAAA6AAAAOwAAADwAAAA9AAAAhAAAAIUAAABOU3QzX18yMTFfX3N0ZG91dGJ1ZkljRUUAAAAARAMBAKDWAACk0AAAAAAAACDXAABOAAAAhgAAAIcAAABRAAAAUgAAAFMAAABUAAAAVQAAAFYAAACIAAAAiQAAAIoAAABaAAAAWwAAAE5TdDNfXzIxMF9fc3RkaW5idWZJd0VFAEQDAQAI1wAAWNIAAAAAAACI1wAATgAAAIsAAACMAAAAUQAAAFIAAABTAAAAjQAAAFUAAABWAAAAVwAAAFgAAABZAAAAjgAAAI8AAABOU3QzX18yMTFfX3N0ZG91dGJ1Zkl3RUUAAAAARAMBAGzXAABY0gBBoK8DC6oD0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAD/////////////////////////////////////////////////////////////////AAECAwQFBgcICf////////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI////////woLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIj/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wABAgQHAwYFAAAAAAAAAExDX0NUWVBFAAAAAExDX05VTUVSSUMAAExDX1RJTUUAAAAAAExDX0NPTExBVEUAAExDX01PTkVUQVJZAExDX01FU1NBR0VTAFDbAEHUtgML+QMBAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAAKQAAACoAAAArAAAALAAAAC0AAAAuAAAALwAAADAAAAAxAAAAMgAAADMAAAA0AAAANQAAADYAAAA3AAAAOAAAADkAAAA6AAAAOwAAADwAAAA9AAAAPgAAAD8AAABAAAAAQQAAAEIAAABDAAAARAAAAEUAAABGAAAARwAAAEgAAABJAAAASgAAAEsAAABMAAAATQAAAE4AAABPAAAAUAAAAFEAAABSAAAAUwAAAFQAAABVAAAAVgAAAFcAAABYAAAAWQAAAFoAAABbAAAAXAAAAF0AAABeAAAAXwAAAGAAAABBAAAAQgAAAEMAAABEAAAARQAAAEYAAABHAAAASAAAAEkAAABKAAAASwAAAEwAAABNAAAATgAAAE8AAABQAAAAUQAAAFIAAABTAAAAVAAAAFUAAABWAAAAVwAAAFgAAABZAAAAWgAAAHsAAAB8AAAAfQAAAH4AAAB/AEHQvgMLAmDhAEHkwgML+QMBAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAANAAAADgAAAA8AAAAQAAAAEQAAABIAAAATAAAAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAcAAAAHQAAAB4AAAAfAAAAIAAAACEAAAAiAAAAIwAAACQAAAAlAAAAJgAAACcAAAAoAAAAKQAAACoAAAArAAAALAAAAC0AAAAuAAAALwAAADAAAAAxAAAAMgAAADMAAAA0AAAA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";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);if(isFileURI(wasmBinaryFile)){err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`)}abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={"env":wasmImports,"wasi_snapshot_preview1":wasmImports};function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports["memory"];assert(wasmMemory,"memory not found in wasm exports");updateMemoryViews();wasmTable=wasmExports["__indirect_function_table"];assert(wasmTable,"table not found in wasm exports");addOnInit(wasmExports["__wasm_call_ctors"]);removeRunDependency("wasm-instantiate");return wasmExports}addRunDependency("wasm-instantiate");var trueModule=Module;function receiveInstantiationResult(result){assert(Module===trueModule,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?");trueModule=null;receiveInstance(result["instance"])}if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function legacyModuleProp(prop,newName,incoming=true){if(!Object.getOwnPropertyDescriptor(Module,prop)){Object.defineProperty(Module,prop,{configurable:true,get(){let extra=incoming?" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)":"";abort(`\`Module.${prop}\` has been replaced by \`${newName}\``+extra)}})}}function ignoredModuleProp(prop){if(Object.getOwnPropertyDescriptor(Module,prop)){abort(`\`Module.${prop}\` was supplied but \`${prop}\` not included in INCOMING_MODULE_JS_API`)}}function isExportedByForceFilesystem(name){return name==="FS_createPath"||name==="FS_createDataFile"||name==="FS_createPreloadedFile"||name==="FS_unlink"||name==="addRunDependency"||name==="FS_createLazyFile"||name==="FS_createDevice"||name==="removeRunDependency"}function missingGlobal(sym,msg){if(typeof globalThis!=="undefined"){Object.defineProperty(globalThis,sym,{configurable:true,get(){warnOnce(`\`${sym}\` is not longer defined by emscripten. ${msg}`);return undefined}})}}missingGlobal("buffer","Please use HEAP8.buffer or wasmMemory.buffer");missingGlobal("asm","Please use wasmExports instead");function missingLibrarySymbol(sym){if(typeof globalThis!=="undefined"&&!Object.getOwnPropertyDescriptor(globalThis,sym)){Object.defineProperty(globalThis,sym,{configurable:true,get(){var msg=`\`${sym}\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;var librarySymbol=sym;if(!librarySymbol.startsWith("_")){librarySymbol="$"+sym}msg+=` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;if(isExportedByForceFilesystem(sym)){msg+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"}warnOnce(msg);return undefined}})}unexportedRuntimeSymbol(sym)}function unexportedRuntimeSymbol(sym){if(!Object.getOwnPropertyDescriptor(Module,sym)){Object.defineProperty(Module,sym,{configurable:true,get(){var msg=`'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;if(isExportedByForceFilesystem(sym)){msg+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"}abort(msg)}})}}function call_js_result(pData,size){if(self.isWorker){if(size>0){postMessage(UTF8ToString(pData,size))}postMessage("")}else{window.SaveExportResult(UTF8ToString(pData,size))}}function call_js_exec(pData,size){if(self.isWorker){postMessage(UTF8ToString(pData,size))}else{window.ExecStatement(UTF8ToString(pData,size))}}function call_js_checkenv(pData,size){self.isWorker=typeof WorkerGlobalScope!="undefined"&&self instanceof WorkerGlobalScope;var SetWorkerMode=Tools.cwrap("SetWorkerMode","number",["number"]);SetWorkerMode(isWorker?1:0);if(self.isWorker){console.log("Wasm module is running in worker mode");self.onmessage=function(event){var funcName=event.data.func?event.data.func:"ParseRaw";var meta=event.data.meta;var dataArr=new Uint8Array(event.data.payload);var dataPtr=Tools._malloc(dataArr.length);Tools.HEAPU8.set(dataArr,dataPtr);var func=Tools.cwrap(funcName,"number",["string","number","number"]);func(meta,dataPtr,dataArr.length);Tools._free(dataPtr)};postMessage(UTF8ToString(pData,size));postMessage("")}else{console.log("Wasm module is running in the main thread");window.SaveExportResult(UTF8ToString(pData,size))}}function ExitStatus(status){this.name="ExitStatus";this.message=`Program terminated with exit(${status})`;this.status=status}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module["noExitRuntime"]||true;var ptrToString=ptr=>{assert(typeof ptr==="number");ptr>>>=0;return"0x"+ptr.toString(16).padStart(8,"0")};var warnOnce=text=>{warnOnce.shown||={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text="warning: "+text;err(text)}};class ExceptionInfo{constructor(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24}set_type(type){HEAPU32[this.ptr+4>>2]=type}get_type(){return HEAPU32[this.ptr+4>>2]}set_destructor(destructor){HEAPU32[this.ptr+8>>2]=destructor}get_destructor(){return HEAPU32[this.ptr+8>>2]}set_caught(caught){caught=caught?1:0;HEAP8[this.ptr+12]=caught}get_caught(){return HEAP8[this.ptr+12]!=0}set_rethrown(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13]=rethrown}get_rethrown(){return HEAP8[this.ptr+13]!=0}init(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)}set_adjusted_ptr(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr}get_adjusted_ptr(){return HEAPU32[this.ptr+16>>2]}get_exception_ptr(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;var ___cxa_throw=(ptr,type,destructor)=>{var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;assert(false,"Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.")};var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret="";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;var throwInternalError=message=>{throw new InternalError(message)};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError("Mismatched type converter count")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type "${name}" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!("argPackAdvance"in registeredInstance)){throw new TypeError("registerType registeredInstance requires argPackAdvance")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function(wt){return!!wt},"toWireType":function(destructors,o){return o?trueValue:falseValue},"argPackAdvance":GenericWireTypeSize,"readValueFromPointer":function(pointer){return this["fromWireType"](HEAPU8[pointer])},destructorFunction:null})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){assert(emval_handles[handle]!==undefined,`Decref for unallocated handle.`);emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);assert(emval_handles.length===5*2);Module["count_emval_handles"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError("Cannot use deleted val. handle = "+handle)}assert(handle===2||emval_handles[handle]!==undefined&&handle%2===0,`invalid handle: ${handle}`);return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};function readPointer(pointer){return this["fromWireType"](HEAPU32[pointer>>2])}var EmValType={name:"emscripten::val","fromWireType":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},"toWireType":(destructors,value)=>Emval.toHandle(value),"argPackAdvance":GenericWireTypeSize,"readValueFromPointer":readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var embindRepr=v=>{if(v===null){return"null"}var t=typeof v;if(t==="object"||t==="array"||t==="function"){return v.toString()}else{return""+v}};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this["fromWireType"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this["fromWireType"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":value=>value,"toWireType":(destructors,value)=>{if(typeof value!="number"&&typeof value!="boolean"){throw new TypeError(`Cannot convert ${embindRepr(value)} to ${this.name}`)}return value},"argPackAdvance":GenericWireTypeSize,"readValueFromPointer":floatReadValueFromPointer(name,size),destructorFunction:null})};var createNamedFunction=(name,body)=>Object.defineProperty(body,"name",{value:name});var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function usesDestructorStack(argTypes){for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){return true}}return false}function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}var dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync){var needsDestructorStack=usesDestructorStack(argTypes);var argCount=argTypes.length;var argsList="";var argsListWired="";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?", ":"")+"arg"+i;argsListWired+=(i!==0?", ":"")+"arg"+i+"Wired"}var invokerFnBody=`\n        return function (${argsList}) {\n        if (arguments.length !== ${argCount-2}) {\n          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${argCount-2}');\n        }`;if(needsDestructorStack){invokerFnBody+="var destructors = [];\n"}var dtorStack=needsDestructorStack?"destructors":"null";var args1=["humanName","throwBindingError","invoker","fn","runDestructors","retType","classParam"];if(isClassMethodFunc){invokerFnBody+="var thisWired = classParam['toWireType']("+dtorStack+", this);\n"}for(var i=0;i<argCount-2;++i){invokerFnBody+="var arg"+i+"Wired = argType"+i+"['toWireType']("+dtorStack+", arg"+i+");\n";args1.push("argType"+i)}if(isClassMethodFunc){argsListWired="thisWired"+(argsListWired.length>0?", ":"")+argsListWired}invokerFnBody+=(returns||isAsync?"var rv = ":"")+"invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";if(needsDestructorStack){invokerFnBody+="runDestructors(destructors);\n"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?"thisWired":"arg"+(i-2)+"Wired";if(argTypes[i].destructorFunction!==null){invokerFnBody+=`${paramName}_dtor(${paramName});\n`;args1.push(`${paramName}_dtor`)}}}if(returns){invokerFnBody+="var ret = retType['fromWireType'](rv);\n"+"return ret;\n"}else{}invokerFnBody+="}\n";invokerFnBody=`if (arguments.length !== ${args1.length}){ throw new Error(humanName + "Expected ${args1.length} closure arguments " + arguments.length + " given."); }\n${invokerFnBody}`;return[args1,invokerFnBody]}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!")}assert(!isAsync,"Async bindings are only supported with JSPI.");var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=usesDestructorStack(argTypes);var returns=argTypes[0].name!=="void";var closureArgs=[humanName,throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];for(var i=0;i<argCount-2;++i){closureArgs.push(argTypes[i+2])}if(!needsDestructorStack){for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){if(argTypes[i].destructorFunction!==null){closureArgs.push(argTypes[i].destructorFunction)}}}let[args,invokerFnBody]=createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync);args.push(invokerFnBody);var invokerFn=newFunc(Function,args)(...closureArgs);return createNamedFunction(humanName,invokerFn)}var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(...args){if(!proto[methodName].overloadTable.hasOwnProperty(args.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[args.length].apply(this,args)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}};var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array};var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError("Replacing nonexistent public symbol")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var dynCallLegacy=(sig,ptr,args)=>{assert("dynCall_"+sig in Module,`bad function pointer type - dynCall function not found for sig '${sig}'`);if(args?.length){assert(args.length===sig.substring(1).replace(/j/g,"--").length)}else{assert(sig.length==1)}var f=Module["dynCall_"+sig];return f(ptr,...args)};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}assert(wasmTable.get(funcPtr)==func,"JavaScript-side Wasm function table mirror is out of date!");return func};var dynCall=(sig,ptr,args=[])=>{if(sig.includes("j")){return dynCallLegacy(sig,ptr,args)}assert(getWasmTableEntry(ptr),`missing table entry in dynCall: ${ptr}`);var rtn=getWasmTableEntry(ptr)(...args);return rtn};var getDynCaller=(sig,ptr)=>{assert(sig.includes("j")||sig.includes("p"),"getDynCaller should only be called with i64 sigs");return(...args)=>dynCall(sig,ptr,args)};var embind__requireFunction=(signature,rawFunction)=>{signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes("j")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!="function"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};var extendError=(baseErrorType,errorName)=>{var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+"\n"+stack.replace(/^Error(:[^\n]*)?\n/,"")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return`${this.name}: ${this.message}`}};return errorClass};var UnboundTypeError;var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([", "]))};var getFunctionName=signature=>{signature=signature.trim();const argsIndex=signature.indexOf("(");if(argsIndex!==-1){assert(signature[signature.length-1]==")","Parentheses for argument names should match.");return signature.substr(0,argsIndex)}else{return signature}};var __embind_register_function=(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync)=>{var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);name=getFunctionName(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,argTypes=>{var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn,isAsync),argCount-1);return[]})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes("unsigned");var checkAssertions=(value,toTypeName)=>{if(typeof value!="number"&&typeof value!="boolean"){throw new TypeError(`Cannot convert "${embindRepr(value)}" to ${toTypeName}`)}if(value<minRange||value>maxRange){throw new TypeError(`Passing a number "${embindRepr(value)}" from JS side to C/C++ side to an argument of type "${name}", which is outside the valid range [${minRange}, ${maxRange}]!`)}};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,"fromWireType":fromWireType,"toWireType":toWireType,"argPackAdvance":GenericWireTypeSize,"readValueFromPointer":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":decodeMemoryView,"argPackAdvance":GenericWireTypeSize,"readValueFromPointer":decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{assert(typeof str==="string",`stringToUTF8Array expects a string (got ${typeof str})`);if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;if(u>1114111)warnOnce("Invalid Unicode code point "+ptrToString(u)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).");heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>{assert(typeof maxBytesToWrite=="number","stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{if((u0&248)!=240)warnOnce("Invalid UTF-8 leading byte "+ptrToString(u0)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!");u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>{assert(typeof ptr=="number",`UTF8ToString expects a number (got ${typeof ptr})`);return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""};var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name==="std::string";registerType(rawType,{name:name,"fromWireType"(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join("")}_free(value);return str},"toWireType"(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value=="string";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError("Cannot pass non-string to std::string")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError("String has UTF-16 code units that do not fit in 8 bits")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},"argPackAdvance":GenericWireTypeSize,"readValueFromPointer":readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{assert(ptr%2==0,"Pointer passed to UTF16ToString must be aligned to two bytes!");var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str="";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{assert(outPtr%2==0,"Pointer passed to stringToUTF16 must be aligned to two bytes!");assert(typeof maxBytesToWrite=="number","stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{assert(ptr%4==0,"Pointer passed to UTF32ToString must be aligned to four bytes!");var i=0;var str="";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{assert(outPtr%4==0,"Pointer passed to stringToUTF32 must be aligned to four bytes!");assert(typeof maxBytesToWrite=="number","stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!");maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name:name,"fromWireType":value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},"toWireType":(destructors,value)=>{if(!(typeof value=="string")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},"argPackAdvance":GenericWireTypeSize,"readValueFromPointer":readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,"argPackAdvance":0,"fromWireType":()=>undefined,"toWireType":(destructors,o)=>undefined})};var _abort=()=>{abort("native code called abort()")};var _emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`)}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;assert(requestedSize>oldSize);var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);return false};var ENV={};var getExecutableName=()=>thisProgram||"./this.program";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8";var env={"USER":"web_user","LOGNAME":"web_user","PATH":"/","PWD":"/","HOME":"/home/web_user","LANG":lang,"_":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===(str.charCodeAt(i)&255));HEAP8[buffer++]=str.charCodeAt(i)}HEAP8[buffer]=0};var _environ_get=(__environ,environ_buf)=>{var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>2]=bufSize;return 0};var PATH={isAbs:path=>path.charAt(0)==="/",splitPath:filename=>{var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(p=>!!p),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path==="/")return"/";path=PATH.normalize(path);path=path.replace(/\/$/,"");var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:(...paths)=>PATH.normalize(paths.join("/")),join2:(l,r)=>PATH.normalize(l+"/"+r)};var initRandomFill=()=>{if(typeof crypto=="object"&&typeof crypto["getRandomValues"]=="function"){return view=>crypto.getRandomValues(view)}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require("crypto");var randomFillSync=crypto_module["randomFillSync"];if(randomFillSync){return view=>crypto_module["randomFillSync"](view)}var randomBytes=crypto_module["randomBytes"];return view=>(view.set(randomBytes(view.byteLength)),view)}catch(e){}}abort("no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };")};var randomFill=view=>(randomFill=initRandomFill())(view);var PATH_FS={resolve:(...args)=>{var resolvedPath="",resolvedAbsolute=false;for(var i=args.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?args[i]:FS.cwd();if(typeof path!="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(p=>!!p),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")}};var FS_stdin_getChar_buffer=[];function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var FS_stdin_getChar=()=>{if(!FS_stdin_getChar_buffer.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc(BUFSIZE);var bytesRead=0;var fd=process.stdin.fd;try{bytesRead=fs.readSync(fd,buf)}catch(e){if(e.toString().includes("EOF"))bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}FS_stdin_getChar_buffer=intArrayFromString(result,true)}return FS_stdin_getChar_buffer.shift()};var TTY={ttys:[],init(){},shutdown(){},register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close(stream){stream.tty.ops.fsync(stream.tty)},fsync(stream){stream.tty.ops.fsync(stream.tty)},read(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char(tty){return FS_stdin_getChar()},put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}},ioctl_tcgets(tty){return{c_iflag:25856,c_oflag:5,c_cflag:191,c_lflag:35387,c_cc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},ioctl_tcsets(tty,optional_actions,data){return 0},ioctl_tiocgwinsz(tty){return[24,80]}},default_tty1_ops:{put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};var mmapAlloc=size=>{abort("internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported")};var MEMFS={ops_table:null,mount(mount){return MEMFS.createNode(null,"/",16384|511,0)},createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}MEMFS.ops_table||={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}};var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup(parent,name){throw FS.genericErrors[44]},mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir(node){var entries=[".",".."];for(var key of Object.keys(node.contents)){entries.push(key)}return entries},symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write(stream,buffer,offset,length,position,canOwn){assert(!(buffer instanceof ArrayBuffer));if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){assert(position===0,"canOwn must imply no weird position inside the file");node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===HEAP8.buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};var asyncLoad=(url,onload,onerror,noRunDep)=>{var dep=!noRunDep?getUniqueRunDependency(`al ${url}`):"";readAsync(url,arrayBuffer=>{assert(arrayBuffer,`Loading data file "${url}" failed (no arrayBuffer).`);onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw`Loading data file "${url}" failed.`}});if(dep)addRunDependency(dep)};var FS_createDataFile=(parent,name,fileData,canRead,canWrite,canOwn)=>{FS.createDataFile(parent,name,fileData,canRead,canWrite,canOwn)};var preloadPlugins=Module["preloadPlugins"]||[];var FS_handledByPreloadPlugin=(byteArray,fullname,finish,onerror)=>{if(typeof Browser!="undefined")Browser.init();var handled=false;preloadPlugins.forEach(plugin=>{if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,onerror);handled=true}});return handled};var FS_createPreloadedFile=(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(`cp ${fullname}`);function processData(byteArray){function finish(byteArray){preFinish?.();if(!dontCreateFile){FS_createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}onload?.();removeRunDependency(dep)}if(FS_handledByPreloadPlugin(byteArray,fullname,finish,()=>{onerror?.();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){asyncLoad(url,processData,onerror)}else{processData(url)}};var FS_modeStringToFlags=str=>{var flagModes={"r":0,"r+":2,"w":512|64|1,"w+":512|64|2,"a":1024|64|1,"a+":1024|64|2};var flags=flagModes[str];if(typeof flags=="undefined"){throw new Error(`Unknown file open mode: ${str}`)}return flags};var FS_getMode=(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode};var ERRNO_MESSAGES={0:"Success",1:"Arg list too long",2:"Permission denied",3:"Address already in use",4:"Address not available",5:"Address family not supported by protocol family",6:"No more processes",7:"Socket already connected",8:"Bad file number",9:"Trying to read unreadable message",10:"Mount device busy",11:"Operation canceled",12:"No children",13:"Connection aborted",14:"Connection refused",15:"Connection reset by peer",16:"File locking deadlock error",17:"Destination address required",18:"Math arg out of domain of func",19:"Quota exceeded",20:"File exists",21:"Bad address",22:"File too large",23:"Host is unreachable",24:"Identifier removed",25:"Illegal byte sequence",26:"Connection already in progress",27:"Interrupted system call",28:"Invalid argument",29:"I/O error",30:"Socket is already connected",31:"Is a directory",32:"Too many symbolic links",33:"Too many open files",34:"Too many links",35:"Message too long",36:"Multihop attempted",37:"File or path name too long",38:"Network interface is not configured",39:"Connection reset by network",40:"Network is unreachable",41:"Too many open files in system",42:"No buffer space available",43:"No such device",44:"No such file or directory",45:"Exec format error",46:"No record locks available",47:"The link has been severed",48:"Not enough core",49:"No message of desired type",50:"Protocol not available",51:"No space left on device",52:"Function not implemented",53:"Socket is not connected",54:"Not a directory",55:"Directory not empty",56:"State not recoverable",57:"Socket operation on non-socket",59:"Not a typewriter",60:"No such device or address",61:"Value too large for defined data type",62:"Previous owner died",63:"Not super-user",64:"Broken pipe",65:"Protocol error",66:"Unknown protocol",67:"Protocol wrong type for socket",68:"Math result not representable",69:"Read only file system",70:"Illegal seek",71:"No such process",72:"Stale file handle",73:"Connection timed out",74:"Text file busy",75:"Cross-device link",100:"Device not a stream",101:"Bad font file fmt",102:"Invalid slot",103:"Invalid request code",104:"No anode",105:"Block device required",106:"Channel number out of range",107:"Level 3 halted",108:"Level 3 reset",109:"Link number out of range",110:"Protocol driver not attached",111:"No CSI structure available",112:"Level 2 halted",113:"Invalid exchange",114:"Invalid request descriptor",115:"Exchange full",116:"No data (for no delay io)",117:"Timer expired",118:"Out of streams resources",119:"Machine is not on the network",120:"Package not installed",121:"The object is remote",122:"Advertise error",123:"Srmount error",124:"Communication error on send",125:"Cross mount point (not really error)",126:"Given log. name not unique",127:"f.d. invalid for this operation",128:"Remote address changed",129:"Can   access a needed shared lib",130:"Accessing a corrupted shared lib",131:".lib section in a.out corrupted",132:"Attempting to link in too many libs",133:"Attempting to exec a shared library",135:"Streams pipe error",136:"Too many users",137:"Socket type not supported",138:"Not supported",139:"Protocol family not supported",140:"Can't send after socket shutdown",141:"Too many references",142:"Host is down",148:"No medium (in tape drive)",156:"Level 2 not synchronized"};var ERRNO_CODES={"EPERM":63,"ENOENT":44,"ESRCH":71,"EINTR":27,"EIO":29,"ENXIO":60,"E2BIG":1,"ENOEXEC":45,"EBADF":8,"ECHILD":12,"EAGAIN":6,"EWOULDBLOCK":6,"ENOMEM":48,"EACCES":2,"EFAULT":21,"ENOTBLK":105,"EBUSY":10,"EEXIST":20,"EXDEV":75,"ENODEV":43,"ENOTDIR":54,"EISDIR":31,"EINVAL":28,"ENFILE":41,"EMFILE":33,"ENOTTY":59,"ETXTBSY":74,"EFBIG":22,"ENOSPC":51,"ESPIPE":70,"EROFS":69,"EMLINK":34,"EPIPE":64,"EDOM":18,"ERANGE":68,"ENOMSG":49,"EIDRM":24,"ECHRNG":106,"EL2NSYNC":156,"EL3HLT":107,"EL3RST":108,"ELNRNG":109,"EUNATCH":110,"ENOCSI":111,"EL2HLT":112,"EDEADLK":16,"ENOLCK":46,"EBADE":113,"EBADR":114,"EXFULL":115,"ENOANO":104,"EBADRQC":103,"EBADSLT":102,"EDEADLOCK":16,"EBFONT":101,"ENOSTR":100,"ENODATA":116,"ETIME":117,"ENOSR":118,"ENONET":119,"ENOPKG":120,"EREMOTE":121,"ENOLINK":47,"EADV":122,"ESRMNT":123,"ECOMM":124,"EPROTO":65,"EMULTIHOP":36,"EDOTDOT":125,"EBADMSG":9,"ENOTUNIQ":126,"EBADFD":127,"EREMCHG":128,"ELIBACC":129,"ELIBBAD":130,"ELIBSCN":131,"ELIBMAX":132,"ELIBEXEC":133,"ENOSYS":52,"ENOTEMPTY":55,"ENAMETOOLONG":37,"ELOOP":32,"EOPNOTSUPP":138,"EPFNOSUPPORT":139,"ECONNRESET":15,"ENOBUFS":42,"EAFNOSUPPORT":5,"EPROTOTYPE":67,"ENOTSOCK":57,"ENOPROTOOPT":50,"ESHUTDOWN":140,"ECONNREFUSED":14,"EADDRINUSE":3,"ECONNABORTED":13,"ENETUNREACH":40,"ENETDOWN":38,"ETIMEDOUT":73,"EHOSTDOWN":142,"EHOSTUNREACH":23,"EINPROGRESS":26,"EALREADY":7,"EDESTADDRREQ":17,"EMSGSIZE":35,"EPROTONOSUPPORT":66,"ESOCKTNOSUPPORT":137,"EADDRNOTAVAIL":4,"ENETRESET":39,"EISCONN":30,"ENOTCONN":53,"ETOOMANYREFS":141,"EUSERS":136,"EDQUOT":19,"ESTALE":72,"ENOTSUP":138,"ENOMEDIUM":148,"EILSEQ":25,"EOVERFLOW":61,"ECANCELED":11,"ENOTRECOVERABLE":56,"EOWNERDEAD":62,"ESTRPIPE":135};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:class extends Error{constructor(errno){super(ERRNO_MESSAGES[errno]);this.name="ErrnoError";this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}}},genericErrors:{},filesystems:null,syncFSRequests:0,FSStream:class{constructor(){this.shared={}}get object(){return this.node}set object(val){this.node=val}get isRead(){return(this.flags&2097155)!==1}get isWrite(){return(this.flags&2097155)!==0}get isAppend(){return this.flags&1024}get flags(){return this.shared.flags}set flags(val){this.shared.flags=val}get position(){return this.shared.position}set position(val){this.shared.position=val}},FSNode:class{constructor(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev;this.readMode=292|73;this.writeMode=146}get read(){return(this.mode&this.readMode)===this.readMode}set read(val){val?this.mode|=this.readMode:this.mode&=~this.readMode}get write(){return(this.mode&this.writeMode)===this.writeMode}set write(val){val?this.mode|=this.writeMode:this.mode&=~this.writeMode}get isFolder(){return FS.isDir(this.mode)}get isDevice(){return FS.isChrdev(this.mode)}},lookupPath(path,opts={}){path=PATH_FS.resolve(path);if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=path.split("/").filter(p=>!!p);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?`${mount}/${path}`:mount+path}path=path?`${node.name}/${path}`:node.name;node=node.parent}},hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode(parent,name){var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode(parent,name,mode,rdev){assert(typeof parent=="object");var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode(node){FS.hashRemoveNode(node)},isRoot(node){return node===node.parent},isMountpoint(node){return!!node.mounted},isFile(mode){return(mode&61440)===32768},isDir(mode){return(mode&61440)===16384},isLink(mode){return(mode&61440)===40960},isChrdev(mode){return(mode&61440)===8192},isBlkdev(mode){return(mode&61440)===24576},isFIFO(mode){return(mode&61440)===4096},isSocket(mode){return(mode&49152)===49152},flagsToPermissionString(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms},nodePermissions(node,perms){if(FS.ignorePermissions){return 0}if(perms.includes("r")&&!(node.mode&292)){return 2}else if(perms.includes("w")&&!(node.mode&146)){return 2}else if(perms.includes("x")&&!(node.mode&73)){return 2}return 0},mayLookup(dir){if(!FS.isDir(dir.mode))return 54;var errCode=FS.nodePermissions(dir,"x");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,"wx")},mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,"wx");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen(node,flags){if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd(){for(var fd=0;fd<=FS.MAX_OPEN_FDS;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStreamChecked(fd){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}return stream},getStream:fd=>FS.streams[fd],createStream(stream,fd=-1){stream=Object.assign(new FS.FSStream,stream);if(fd==-1){fd=FS.nextfd()}stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream(fd){FS.streams[fd]=null},dupStream(origStream,fd=-1){var stream=FS.createStream(origStream,fd);stream.stream_ops?.dup?.(stream);return stream},chrdev_stream_ops:{open(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;stream.stream_ops.open?.(stream)},llseek(){throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push(...m.mounts)}return mounts},syncfs(populate,callback){if(typeof populate=="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`)}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount(type,opts,mountpoint){if(typeof type=="string"){throw type}var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)},lookup(parent,name){return parent.node_ops.lookup(parent,name)},mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev(path,mode,dev){if(typeof dev=="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink(oldpath,newpath){if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,"w");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat(path){return FS.stat(path,true)},chmod(path,mode,dontFollow){var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod(path,mode){FS.chmod(path,mode,true)},fchmod(fd,mode){var stream=FS.getStreamChecked(fd);FS.chmod(stream.node,mode)},chown(path,uid,gid,dontFollow){var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown(path,uid,gid){FS.chown(path,uid,gid,true)},fchown(fd,uid,gid){var stream=FS.getStreamChecked(fd);FS.chown(stream.node,uid,gid)},truncate(path,len){if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path=="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,"w");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate(fd,len){var stream=FS.getStreamChecked(fd);if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open(path,flags,mode){if(path===""){throw new FS.ErrnoError(44)}flags=typeof flags=="string"?FS_modeStringToFlags(flags):flags;mode=typeof mode=="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path=="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed(stream){return stream.fd===null},llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read(stream,buffer,offset,length,position){assert(offset>=0);if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write(stream,buffer,offset,length,position,canOwn){assert(offset>=0);if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap(stream,length,position,prot,flags){if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync(stream,buffer,offset,length,mmapFlags){assert(offset>=0);if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile(path,opts={}){opts.flags=opts.flags||0;opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error(`Invalid encoding type "${opts.encoding}"`)}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret},writeFile(path,data,opts={}){opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data=="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)},cwd:()=>FS.currentPath,chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,"x");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")},createDefaultDevices(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var randomBuffer=new Uint8Array(1024),randomLeft=0;var randomByte=()=>{if(randomLeft===0){randomLeft=randomFill(randomBuffer).byteLength}return randomBuffer[--randomLeft]};FS.createDevice("/dev","random",randomByte);FS.createDevice("/dev","urandom",randomByte);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")},createSpecialDirectories(){FS.mkdir("/proc");var proc_self=FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount(){var node=FS.createNode(proc_self,"fd",16384|511,73);node.node_ops={lookup(parent,name){var fd=+name;var stream=FS.getStreamChecked(fd);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},"/proc/self/fd")},createStandardStreams(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin",0);var stdout=FS.open("/dev/stdout",1);var stderr=FS.open("/dev/stderr",1);assert(stdin.fd===0,`invalid handle for stdin (${stdin.fd})`);assert(stdout.fd===1,`invalid handle for stdout (${stdout.fd})`);assert(stderr.fd===2,`invalid handle for stderr (${stderr.fd})`)},staticInit(){[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"});FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS}},init(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()},quit(){FS.init.initialized=false;_fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret},createPath(parent,path,canRead,canWrite){parent=typeof parent=="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS_getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name;if(parent){parent=typeof parent=="string"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS_getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data=="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}},createDevice(parent,name,input,output){var path=PATH.join2(typeof parent=="string"?parent:FS.getPath(parent),name);var mode=FS_getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open(stream){stream.seekable=false},close(stream){if(output?.buffer?.length){output(10)}},read(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}},createLazyFile(parent,name,url,canRead,canWrite){class LazyUint8Array{constructor(){this.lengthKnown=false;this.chunks=[]}get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]}setDataGetter(getter){this.getter=getter}cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||"",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]=="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]=="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true}get length(){if(!this.lengthKnown){this.cacheLength()}return this._length}get chunkSize(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}if(typeof XMLHttpRequest!="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=(...args)=>{FS.forceLoadFile(node);return fn(...args)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node},absolutePath(){abort("FS.absolutePath has been removed; use PATH_FS.resolve instead")},createFolder(){abort("FS.createFolder has been removed; use FS.mkdir instead")},createLink(){abort("FS.createLink has been removed; use FS.symlink instead")},joinPath(){abort("FS.joinPath has been removed; use PATH.join instead")},mmapAlloc(){abort("FS.mmapAlloc has been replaced by the top level function mmapAlloc")},standardizePath(){abort("FS.standardizePath has been removed; use PATH.normalize instead")}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat(func,path,buf){var stat=func(path);HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=stat.mode;HEAPU32[buf+8>>2]=stat.nlink;HEAP32[buf+12>>2]=stat.uid;HEAP32[buf+16>>2]=stat.gid;HEAP32[buf+20>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+24>>2]=tempI64[0],HEAP32[buf+28>>2]=tempI64[1];HEAP32[buf+32>>2]=4096;HEAP32[buf+36>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();tempI64=[Math.floor(atime/1e3)>>>0,(tempDouble=Math.floor(atime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAPU32[buf+48>>2]=atime%1e3*1e3;tempI64=[Math.floor(mtime/1e3)>>>0,(tempDouble=Math.floor(mtime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=mtime%1e3*1e3;tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=ctime%1e3*1e3;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];return 0},doMsync(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get(){assert(SYSCALLS.varargs!=undefined);var ret=HEAP32[+SYSCALLS.varargs>>2];SYSCALLS.varargs+=4;return ret},getp(){return SYSCALLS.get()},getStr(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD(fd){var stream=FS.getStreamChecked(fd);return stream}};function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var doReadv=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;if(typeof offset!=="undefined"){offset+=curr}}return ret};function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var convertI32PairToI53Checked=(lo,hi)=>{assert(lo==lo>>>0||lo==(lo|0));assert(hi===(hi|0));return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN};function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);try{if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var doWritev=(stream,iov,iovcnt,offset)=>{var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!=="undefined"){offset+=curr}}return ret};function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS=="undefined"||!(e.name==="ErrnoError"))throw e;return e.errno}}var isLeapYear=year=>year%4===0&&(year%100!==0||year%400===0);var arraySum=(array,index)=>{var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum};var MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];var addDays=(date,days)=>{var newDate=new Date(date.getTime());while(days>0){var leap=isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate};var writeArrayToMemory=(array,buffer)=>{assert(array.length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)");HEAP8.set(array,buffer)};var _strftime=(s,maxsize,format,tm)=>{var tm_zone=HEAPU32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value=="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={"%a":date=>WEEKDAYS[date.tm_wday].substring(0,3),"%A":date=>WEEKDAYS[date.tm_wday],"%b":date=>MONTHS[date.tm_mon].substring(0,3),"%B":date=>MONTHS[date.tm_mon],"%C":date=>{var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},"%d":date=>leadingNulls(date.tm_mday,2),"%e":date=>leadingSomething(date.tm_mday,2," "),"%g":date=>getWeekBasedYear(date).toString().substring(2),"%G":getWeekBasedYear,"%H":date=>leadingNulls(date.tm_hour,2),"%I":date=>{var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},"%j":date=>leadingNulls(date.tm_mday+arraySum(isLeapYear(date.tm_year+1900)?MONTH_DAYS_LEAP:MONTH_DAYS_REGULAR,date.tm_mon-1),3),"%m":date=>leadingNulls(date.tm_mon+1,2),"%M":date=>leadingNulls(date.tm_min,2),"%n":()=>"\n","%p":date=>{if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}return"PM"},"%S":date=>leadingNulls(date.tm_sec,2),"%t":()=>"\t","%u":date=>date.tm_wday||7,"%U":date=>{var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},"%V":date=>{var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},"%w":date=>date.tm_wday,"%W":date=>{var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},"%y":date=>(date.tm_year+1900).toString().substring(2),"%Y":date=>date.tm_year+1900,"%z":date=>{var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)},"%Z":date=>date.tm_zone,"%%":()=>"%"};pattern=pattern.replace(/%%/g,"\0\0");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\0\0/g,"%");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1};var _strftime_l=(s,maxsize,format,tm,loc)=>_strftime(s,maxsize,format,tm);var getCFunc=ident=>{var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func};var stringToUTF8OnStack=str=>{var size=lengthBytesUTF8(str)+1;var ret=stackAlloc(size);stringToUTF8(str,ret,size);return ret};var ccall=(ident,returnType,argTypes,args,opts)=>{var toC={"string":str=>{var ret=0;if(str!==null&&str!==undefined&&str!==0){ret=stringToUTF8OnStack(str)}return ret},"array":arr=>{var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType==="string"){return UTF8ToString(ret)}if(returnType==="boolean")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;assert(returnType!=="array",'Return type should not be "array".');if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func(...cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret};var cwrap=(ident,returnType,argTypes,opts)=>(...args)=>ccall(ident,returnType,argTypes,args,opts);embind_init_charCodes();BindingError=Module["BindingError"]=class BindingError extends Error{constructor(message){super(message);this.name="BindingError"}};InternalError=Module["InternalError"]=class InternalError extends Error{constructor(message){super(message);this.name="InternalError"}};init_emval();UnboundTypeError=Module["UnboundTypeError"]=extendError(Error,"UnboundTypeError");FS.createPreloadedFile=FS_createPreloadedFile;FS.staticInit();function checkIncomingModuleAPI(){ignoredModuleProp("fetchSettings")}var wasmImports={__cxa_throw:___cxa_throw,_embind_register_bigint:__embind_register_bigint,_embind_register_bool:__embind_register_bool,_embind_register_emval:__embind_register_emval,_embind_register_float:__embind_register_float,_embind_register_function:__embind_register_function,_embind_register_integer:__embind_register_integer,_embind_register_memory_view:__embind_register_memory_view,_embind_register_std_string:__embind_register_std_string,_embind_register_std_wstring:__embind_register_std_wstring,_embind_register_void:__embind_register_void,abort:_abort,call_js_checkenv:call_js_checkenv,call_js_exec:call_js_exec,call_js_result:call_js_result,emscripten_memcpy_js:_emscripten_memcpy_js,emscripten_resize_heap:_emscripten_resize_heap,environ_get:_environ_get,environ_sizes_get:_environ_sizes_get,fd_close:_fd_close,fd_read:_fd_read,fd_seek:_fd_seek,fd_write:_fd_write,strftime_l:_strftime_l};var wasmExports=createWasm();var ___wasm_call_ctors=createExportWrapper("__wasm_call_ctors");var _ParseRaw=Module["_ParseRaw"]=createExportWrapper("ParseRaw");var _SetWorkerMode=Module["_SetWorkerMode"]=createExportWrapper("SetWorkerMode");var _Init=Module["_Init"]=createExportWrapper("Init");var _ExportFlamegraphCpu=Module["_ExportFlamegraphCpu"]=createExportWrapper("ExportFlamegraphCpu");var _ExportFlamegraphMem=Module["_ExportFlamegraphMem"]=createExportWrapper("ExportFlamegraphMem");var _ExportFlamegraphComboDiff=Module["_ExportFlamegraphComboDiff"]=createExportWrapper("ExportFlamegraphComboDiff");var _ExportFlamegraphLiveMem=Module["_ExportFlamegraphLiveMem"]=createExportWrapper("ExportFlamegraphLiveMem");var ___getTypeName=createExportWrapper("__getTypeName");var _fflush=createExportWrapper("fflush");var _malloc=Module["_malloc"]=createExportWrapper("malloc");var _free=Module["_free"]=createExportWrapper("free");var _emscripten_stack_init=()=>(_emscripten_stack_init=wasmExports["emscripten_stack_init"])();var _emscripten_stack_get_free=()=>(_emscripten_stack_get_free=wasmExports["emscripten_stack_get_free"])();var _emscripten_stack_get_base=()=>(_emscripten_stack_get_base=wasmExports["emscripten_stack_get_base"])();var _emscripten_stack_get_end=()=>(_emscripten_stack_get_end=wasmExports["emscripten_stack_get_end"])();var stackSave=createExportWrapper("stackSave");var stackRestore=createExportWrapper("stackRestore");var stackAlloc=createExportWrapper("stackAlloc");var _emscripten_stack_get_current=()=>(_emscripten_stack_get_current=wasmExports["emscripten_stack_get_current"])();var ___cxa_is_pointer_type=createExportWrapper("__cxa_is_pointer_type");var dynCall_jiji=Module["dynCall_jiji"]=createExportWrapper("dynCall_jiji");var dynCall_viijii=Module["dynCall_viijii"]=createExportWrapper("dynCall_viijii");var dynCall_iiiiij=Module["dynCall_iiiiij"]=createExportWrapper("dynCall_iiiiij");var dynCall_iiiiijj=Module["dynCall_iiiiijj"]=createExportWrapper("dynCall_iiiiijj");var dynCall_iiiiiijj=Module["dynCall_iiiiiijj"]=createExportWrapper("dynCall_iiiiiijj");var ___start_em_js=Module["___start_em_js"]=67332;var ___stop_em_js=Module["___stop_em_js"]=68572;Module["ccall"]=ccall;Module["cwrap"]=cwrap;var missingLibrarySymbols=["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertU32PairToI53","exitJS","ydayFromDate","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","getCallstack","emscriptenLog","convertPCtoSourceLocation","readEmAsmArgs","jstoi_q","listenOnce","autoResumeAudioContext","handleException","keepRuntimeAlive","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","asmjsMangle","HandleAllocator","getNativeTypeSize","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","intArrayToString","AsciiToString","stringToNewUTF8","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","stackTrace","checkWasiClock","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","createDyncallWrapper","safeSetTimeout","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","getPromise","makePromise","idsToPromises","makePromiseCallback","findMatchingCatch","Browser_asyncPrepareDataCounter","setMainLoop","getSocketFromFD","getSocketAddress","FS_unlink","FS_mkdirTree","_setNetworkCallback","heapObjectForWebGLType","toTypedArrayIndex","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory","setErrNo","demangle","getFunctionArgsName","requireRegisteredType","createJsInvokerSignature","init_embind","getBasestPointer","registerInheritedInstance","unregisterInheritedInstance","getInheritedInstance","getInheritedInstanceCount","getLiveInheritedInstances","enumReadValueFromPointer","genericPointerToWireType","constNoSmartPtrRawPointerToWireType","nonConstNoSmartPtrRawPointerToWireType","init_RegisteredPointer","RegisteredPointer","RegisteredPointer_fromWireType","runDestructor","releaseClassHandle","detachFinalizer","attachFinalizer","makeClassHandle","init_ClassHandle","ClassHandle","throwInstanceAlreadyDeleted","flushPendingDeletes","setDelayFunction","RegisteredClass","shallowCopyInternalPointer","downcastPointer","upcastPointer","validateThis","char_0","char_9","makeLegalFunctionName","getStringOrSymbol","emval_get_global","emval_returnValue","emval_lookupTypes","emval_addMethodCaller"];missingLibrarySymbols.forEach(missingLibrarySymbol);var unexportedSymbols=["run","addOnPreRun","addOnInit","addOnPreMain","addOnExit","addOnPostRun","addRunDependency","removeRunDependency","FS_createFolder","FS_createPath","FS_createLazyFile","FS_createLink","FS_createDevice","FS_readFile","out","err","callMain","abort","wasmMemory","wasmExports","stackAlloc","stackSave","stackRestore","getTempRet0","setTempRet0","writeStackCookie","checkStackCookie","intArrayFromBase64","tryParseAsDataURI","convertI32PairToI53Checked","ptrToString","zeroMemory","getHeapMax","growMemory","ENV","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","isLeapYear","arraySum","addDays","ERRNO_CODES","ERRNO_MESSAGES","DNS","Protocols","Sockets","initRandomFill","randomFill","timers","warnOnce","UNWIND_CACHE","readEmAsmArgsArray","jstoi_s","getExecutableName","dynCallLegacy","getDynCaller","dynCall","asyncLoad","alignMemory","mmapAlloc","wasmTable","noExitRuntime","getCFunc","freeTableIndexes","functionsInTableMap","setValue","getValue","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","intArrayFromString","stringToAscii","UTF16Decoder","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","stringToUTF8OnStack","writeArrayToMemory","JSEvents","specialHTMLTargets","findCanvasEventTarget","currentFullscreenStrategy","restoreOldWindowedStyle","ExitStatus","getEnvStrings","doReadv","doWritev","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","ExceptionInfo","Browser","getPreloadedImageData__data","wget","SYSCALLS","preloadPlugins","FS_createPreloadedFile","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar_buffer","FS_stdin_getChar","FS","FS_createDataFile","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","allocateUTF8","allocateUTF8OnStack","InternalError","BindingError","throwInternalError","throwBindingError","registeredTypes","awaitingDependencies","typeDependencies","tupleRegistrations","structRegistrations","sharedRegisterType","whenDependentTypesAreResolved","embind_charCodes","embind_init_charCodes","readLatin1String","getTypeName","getFunctionName","heap32VectorToArray","usesDestructorStack","createJsInvoker","UnboundTypeError","PureVirtualError","GenericWireTypeSize","EmValType","throwUnboundTypeError","ensureOverloadTable","exposePublicSymbol","replacePublicSymbol","extendError","createNamedFunction","embindRepr","registeredInstances","registeredPointers","registerType","integerReadValueFromPointer","floatReadValueFromPointer","readPointer","runDestructors","newFunc","craftInvokerFunction","embind__requireFunction","finalizationRegistry","detachFinalizer_deps","deletionQueue","delayFunction","emval_freelist","emval_handles","emval_symbols","init_emval","count_emval_handles","Emval","emval_methodCallers","reflectConstruct"];unexportedSymbols.forEach(unexportedRuntimeSymbol);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function stackCheckInit(){_emscripten_stack_init();writeStackCookie()}function run(){if(runDependencies>0){return}stackCheckInit();preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();assert(!Module["_main"],'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("")},1);doRun()},1)}else{doRun()}checkStackCookie()}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}run();


  return moduleArg.ready
}
);
})();
if (typeof exports === 'object' && typeof module === 'object')
  module.exports = ToolsModule;
else if (typeof define === 'function' && define['amd'])
  define([], () => ToolsModule);
